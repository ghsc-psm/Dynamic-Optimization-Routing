{"version":3,"sources":["../node_modules/underscore/modules/_setup.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/streamlit-component-lib/node_modules/react/index.js","../../src/event.mjs","../../src/event-target.mjs","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/OverloadYield.js","../node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/AsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js","../node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js","../node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../node_modules/flatbuffers/js/flatbuffers.mjs","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../util/utf8.ts","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../io/interfaces.ts","../util/compat.ts","../util/buffer.ts","../io/adapters.ts","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../vector.ts","../fb/Schema.ts","../fb/Message.ts","../enum.ts","../util/bit.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../visitor.ts","../visitor/typecomparator.ts","../type.ts","../data.ts","../util/pretty.ts","../builder/valid.ts","../builder/buffer.ts","../builder.ts","../builder/bool.ts","../builder/null.ts","../builder/date.ts","../builder/decimal.ts","../builder/dictionary.ts","../builder/fixedsizebinary.ts","../util/math.ts","../builder/float.ts","../node_modules/@babel/runtime/helpers/esm/construct.js","../util/bn.ts","../builder/int.ts","../builder/time.ts","../builder/timestamp.ts","../builder/interval.ts","../builder/binary.ts","../builder/utf8.ts","../builder/run.ts","../vector/row.ts","../util/vector.ts","../vector/chunked.ts","../column.ts","../util/args.ts","../schema.ts","../builder/list.ts","../builder/fixedsizelist.ts","../builder/map.ts","../builder/struct.ts","../builder/union.ts","../visitor/set.ts","../fb/File.ts","../visitor/builderctor.ts","../builder/index.ts","../ipc/metadata/file.ts","../io/stream.ts","../io/file.ts","../util/int.ts","../visitor/vectorloader.ts","../visitor/typeassembler.ts","../ipc/metadata/json.ts","../ipc/metadata/message.ts","../ipc/message.ts","../visitor/vectorassembler.ts","../ipc/writer.ts","../util/recordbatch.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../vector/base.ts","../vector/binary.ts","../vector/bool.ts","../vector/date.ts","../vector/decimal.ts","../vector/dictionary.ts","../vector/fixedsizebinary.ts","../vector/fixedsizelist.ts","../vector/float.ts","../vector/interval.ts","../vector/int.ts","../vector/list.ts","../vector/map.ts","../vector/null.ts","../vector/struct.ts","../vector/timestamp.ts","../vector/time.ts","../vector/union.ts","../vector/utf8.ts","../util/fn.ts","../visitor/get.ts","../visitor/indexof.ts","../visitor/iterator.ts","../visitor/toarray.ts","../visitor/bytewidth.ts","../visitor/vectorctor.ts","../vector/index.ts","../table.ts","../recordbatch.ts","../ipc/reader.ts","../io/whatwg/builder.ts","../compute/predicate.ts","../compute/dataframe.ts","../Arrow.ts","../Arrow.dom.ts","../io/whatwg/iterable.ts","../io/whatwg/reader.ts","../io/whatwg/writer.ts","../node_modules/streamlit-component-lib/dist/ArrowTable.js","../node_modules/streamlit-component-lib/dist/streamlit.js","../node_modules/streamlit-component-lib/dist/StreamlitReact.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/underscore/modules/restArguments.js","../node_modules/underscore/modules/isObject.js","../node_modules/underscore/modules/isNull.js","../node_modules/underscore/modules/isUndefined.js","../node_modules/underscore/modules/isBoolean.js","../node_modules/underscore/modules/isElement.js","../node_modules/underscore/modules/_tagTester.js","../node_modules/underscore/modules/isString.js","../node_modules/underscore/modules/isNumber.js","../node_modules/underscore/modules/isDate.js","../node_modules/underscore/modules/isRegExp.js","../node_modules/underscore/modules/isError.js","../node_modules/underscore/modules/isSymbol.js","../node_modules/underscore/modules/isArrayBuffer.js","../node_modules/underscore/modules/isFunction.js","../node_modules/underscore/modules/_hasObjectTag.js","../node_modules/underscore/modules/_stringTagBug.js","../node_modules/underscore/modules/isDataView.js","../node_modules/underscore/modules/isArray.js","../node_modules/underscore/modules/_has.js","../node_modules/underscore/modules/isArguments.js","../node_modules/underscore/modules/isFinite.js","../node_modules/underscore/modules/isNaN.js","../node_modules/underscore/modules/constant.js","../node_modules/underscore/modules/_createSizePropertyCheck.js","../node_modules/underscore/modules/_shallowProperty.js","../node_modules/underscore/modules/_getByteLength.js","../node_modules/underscore/modules/_isBufferLike.js","../node_modules/underscore/modules/isTypedArray.js","../node_modules/underscore/modules/_getLength.js","../node_modules/underscore/modules/_collectNonEnumProps.js","../node_modules/underscore/modules/keys.js","../node_modules/underscore/modules/isEmpty.js","../node_modules/underscore/modules/isMatch.js","../node_modules/underscore/modules/underscore.js","../node_modules/underscore/modules/_toBufferView.js","../node_modules/underscore/modules/isEqual.js","../node_modules/underscore/modules/allKeys.js","../node_modules/underscore/modules/_methodFingerprint.js","../node_modules/underscore/modules/isMap.js","../node_modules/underscore/modules/isWeakMap.js","../node_modules/underscore/modules/isSet.js","../node_modules/underscore/modules/isWeakSet.js","../node_modules/underscore/modules/values.js","../node_modules/underscore/modules/pairs.js","../node_modules/underscore/modules/invert.js","../node_modules/underscore/modules/functions.js","../node_modules/underscore/modules/_createAssigner.js","../node_modules/underscore/modules/extend.js","../node_modules/underscore/modules/extendOwn.js","../node_modules/underscore/modules/defaults.js","../node_modules/underscore/modules/_baseCreate.js","../node_modules/underscore/modules/create.js","../node_modules/underscore/modules/clone.js","../node_modules/underscore/modules/tap.js","../node_modules/underscore/modules/toPath.js","../node_modules/underscore/modules/_toPath.js","../node_modules/underscore/modules/_deepGet.js","../node_modules/underscore/modules/get.js","../node_modules/underscore/modules/has.js","../node_modules/underscore/modules/identity.js","../node_modules/underscore/modules/matcher.js","../node_modules/underscore/modules/property.js","../node_modules/underscore/modules/_optimizeCb.js","../node_modules/underscore/modules/_baseIteratee.js","../node_modules/underscore/modules/iteratee.js","../node_modules/underscore/modules/_cb.js","../node_modules/underscore/modules/mapObject.js","../node_modules/underscore/modules/noop.js","../node_modules/underscore/modules/propertyOf.js","../node_modules/underscore/modules/times.js","../node_modules/underscore/modules/random.js","../node_modules/underscore/modules/now.js","../node_modules/underscore/modules/_createEscaper.js","../node_modules/underscore/modules/_escapeMap.js","../node_modules/underscore/modules/escape.js","../node_modules/underscore/modules/unescape.js","../node_modules/underscore/modules/_unescapeMap.js","../node_modules/underscore/modules/templateSettings.js","../node_modules/underscore/modules/template.js","../node_modules/underscore/modules/result.js","../node_modules/underscore/modules/uniqueId.js","../node_modules/underscore/modules/chain.js","../node_modules/underscore/modules/_executeBound.js","../node_modules/underscore/modules/partial.js","../node_modules/underscore/modules/bind.js","../node_modules/underscore/modules/_isArrayLike.js","../node_modules/underscore/modules/_flatten.js","../node_modules/underscore/modules/bindAll.js","../node_modules/underscore/modules/memoize.js","../node_modules/underscore/modules/delay.js","../node_modules/underscore/modules/defer.js","../node_modules/underscore/modules/throttle.js","../node_modules/underscore/modules/debounce.js","../node_modules/underscore/modules/wrap.js","../node_modules/underscore/modules/negate.js","../node_modules/underscore/modules/compose.js","../node_modules/underscore/modules/after.js","../node_modules/underscore/modules/before.js","../node_modules/underscore/modules/once.js","../node_modules/underscore/modules/findKey.js","../node_modules/underscore/modules/_createPredicateIndexFinder.js","../node_modules/underscore/modules/findIndex.js","../node_modules/underscore/modules/findLastIndex.js","../node_modules/underscore/modules/sortedIndex.js","../node_modules/underscore/modules/_createIndexFinder.js","../node_modules/underscore/modules/indexOf.js","../node_modules/underscore/modules/lastIndexOf.js","../node_modules/underscore/modules/find.js","../node_modules/underscore/modules/findWhere.js","../node_modules/underscore/modules/each.js","../node_modules/underscore/modules/map.js","../node_modules/underscore/modules/_createReduce.js","../node_modules/underscore/modules/reduce.js","../node_modules/underscore/modules/reduceRight.js","../node_modules/underscore/modules/filter.js","../node_modules/underscore/modules/reject.js","../node_modules/underscore/modules/every.js","../node_modules/underscore/modules/some.js","../node_modules/underscore/modules/contains.js","../node_modules/underscore/modules/invoke.js","../node_modules/underscore/modules/pluck.js","../node_modules/underscore/modules/where.js","../node_modules/underscore/modules/max.js","../node_modules/underscore/modules/min.js","../node_modules/underscore/modules/toArray.js","../node_modules/underscore/modules/sample.js","../node_modules/underscore/modules/shuffle.js","../node_modules/underscore/modules/sortBy.js","../node_modules/underscore/modules/_group.js","../node_modules/underscore/modules/groupBy.js","../node_modules/underscore/modules/indexBy.js","../node_modules/underscore/modules/countBy.js","../node_modules/underscore/modules/partition.js","../node_modules/underscore/modules/size.js","../node_modules/underscore/modules/_keyInObj.js","../node_modules/underscore/modules/pick.js","../node_modules/underscore/modules/omit.js","../node_modules/underscore/modules/initial.js","../node_modules/underscore/modules/first.js","../node_modules/underscore/modules/rest.js","../node_modules/underscore/modules/last.js","../node_modules/underscore/modules/compact.js","../node_modules/underscore/modules/flatten.js","../node_modules/underscore/modules/difference.js","../node_modules/underscore/modules/without.js","../node_modules/underscore/modules/uniq.js","../node_modules/underscore/modules/union.js","../node_modules/underscore/modules/intersection.js","../node_modules/underscore/modules/unzip.js","../node_modules/underscore/modules/zip.js","../node_modules/underscore/modules/object.js","../node_modules/underscore/modules/range.js","../node_modules/underscore/modules/chunk.js","../node_modules/underscore/modules/_chainResult.js","../node_modules/underscore/modules/mixin.js","../node_modules/underscore/modules/underscore-array-methods.js","../node_modules/underscore/modules/index-default.js","../node_modules/react-is/index.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/streamlit-component-lib/node_modules/react/cjs/react.production.min.js","../node_modules/object-assign/index.js","../node_modules/webpack/buildin/global.js"],"names":["VERSION","root","self","global","Function","ArrayProto","Array","prototype","ObjProto","Object","SymbolProto","Symbol","push","slice","toString","hasOwnProperty","supportsArrayBuffer","ArrayBuffer","supportsDataView","DataView","nativeIsArray","isArray","nativeKeys","keys","nativeCreate","create","nativeIsView","isView","_isNaN","isNaN","_isFinite","isFinite","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","MAX_ARRAY_INDEX","Math","pow","_slicedToArray","arr","i","_i","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","done","value","length","err","unsupportedIterableToArray","TypeError","module","exports","require","privateData","WeakMap","wrappers","pd","event","retv","get","console","assert","setCancelFlag","data","passiveListener","cancelable","canceled","preventDefault","error","Event","eventTarget","set","this","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","Date","now","defineProperty","enumerable","key","defineRedirectDescriptor","configurable","defineCallDescriptor","apply","arguments","getWrapper","proto","wrapper","BaseEvent","CustomEvent","constructor","writable","isFunc","getOwnPropertyDescriptor","defineWrapper","getPrototypeOf","isStopped","setPassiveListener","type","target","composedPath","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","stopPropagation","stopImmediatePropagation","bubbles","Boolean","defaultPrevented","composed","srcElement","cancelBubble","returnValue","initEvent","window","setPrototypeOf","listenersMap","isObject","x","getListeners","listeners","defineEventAttribute","eventTargetPrototype","eventName","node","listenerType","listener","prev","delete","newNode","passive","once","defineEventAttributeDescriptor","defineCustomEventTarget","eventNames","CustomEventTarget","EventTarget","types","Map","addEventListener","options","optionsIsObj","capture","undefined","removeEventListener","dispatchEvent","wrappedEvent","wrapEvent","handleEvent","setEventPhase","setCurrentTarget","_createForOfIteratorHelper","o","allowArrayLike","it","F","s","n","e","f","normalCompletion","didErr","step","_e2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","Promise","then","_asyncToGenerator","fn","args","_classCallCheck","instance","Constructor","_typeof","obj","_toPropertyKey","input","hint","prim","toPrimitive","res","String","Number","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_regeneratorRuntime","Op","hasOwn","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","ctor","name","mark","__proto__","awrap","async","iter","val","object","reverse","pop","skipTempReset","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_OverloadYield","kind","v","k","_awaitAsyncGenerator","AsyncGenerator","front","back","resume","overloaded","nextKey","settle","request","_wrapAsyncGenerator","_asyncGeneratorDelegate","inner","waiting","pump","_asyncIterator","sync","retry","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","r","ret","thr","flatbuffers","inRange","a","min","max","ToDictionary","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","Int32Array","float32","Float32Array","buffer","float64","Float64Array","isLittleEndian","Uint16Array","Uint8Array","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","bb","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","subarray","position","offset","prep","size","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","len","existing_vtable","vt1","outer_loop","vt2","readInt16","j","root_table","opt_file_identifier","file_identifier","charCodeAt","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","utf8","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","fromCharCode","__offset","bb_pos","vtable_offset","__union","t","__string","opt_encoding","b","c","__indirect","__vector","__vector_len","__has_identifier","ident","Stream","tokens","endOfStream","read","shift","prepend","token","unshift","finished","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","encoding","toLowerCase","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","count","temp","decode","byteOffset","byteLength","input_stream","code_points","indexOf","cp","codePointsToString","encode","opt_string","string","u","d","stringToCodePoints","_Buffer","Buffer","useNativeEncoders","decodeUtf8","decoder","toUint8Array","from","TextDecoderPolyfill","encodeUtf8","encoder","TextEncoderPolyfill","_setPrototypeOf","p","bind","_inherits","subClass","superClass","_getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","valueOf","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","Super","NewTarget","ITERATOR_DONE","freeze","ArrowJSON","_json","ReadableInterop","_getDOMStream","tee","_getNodeStream","pipe","pipeTo","duplex","pipeThrough","_DOMStream","toDOMStream","_nodeStream","toNodeStream","AsyncQueue","_values","resolvers","_closedPromise","_closedPromiseResolve","reason","return","_ensureOpen","_error","streamAdapters","_","abort","close","BigIntUnavailableError","BigIntUnavailable","asIntN","asUintN","BigInt","BigIntCtor","BigIntAvailable","BigInt64ArrayUnavailableError","BigInt64Array","BigInt64ArrayCtor","BigUint64ArrayUnavailableError","BigUint64Array","BigUint64ArrayCtor","isNumber","isBoolean","isFunction","isPromise","isIterable","isAsyncIterable","isArrowJSON","isIteratorResult","isFileHandle","isFetchResponse","isReadableDOMStream","isWritableDOMStream","isWritableNodeStream","isReadableNodeStream","toArrayBufferViewIterator","SharedArrayBuf","SharedArrayBuffer","memcpy","source","targetByteOffset","sourceByteLength","targetByteLength","dst","src","joinUint8Arrays","chunks","sliced","xOffset","yOffset","xLen","yLen","y","collapseContiguousByteRanges","reduce","index","Infinity","toArrayBufferView","ArrayBufferViewCtor","BYTES_PER_ELEMENT","toInt8Array","Int8Array","toInt16Array","Int16Array","toInt32Array","toBigInt64Array","toUint16Array","toUint32Array","Uint32Array","toBigUint64Array","toFloat32Array","toFloat64Array","toUint8ClampedArray","Uint8ClampedArray","ArrayCtor","buffers","toInt8ArrayIterator","toInt16ArrayIterator","toInt32ArrayIterator","toUint8ArrayIterator","toUint16ArrayIterator","toUint32ArrayIterator","toFloat32ArrayIterator","toFloat64ArrayIterator","toUint8ClampedArrayIterator","toArrayBufferViewAsyncIterator","emit","toInt8ArrayAsyncIterator","toInt16ArrayAsyncIterator","toInt32ArrayAsyncIterator","toUint8ArrayAsyncIterator","toUint16ArrayAsyncIterator","toUint32ArrayAsyncIterator","toFloat32ArrayAsyncIterator","toFloat64ArrayAsyncIterator","toUint8ClampedArrayAsyncIterator","rebaseValueOffsets","valueOffsets","compareArrayLike","fromIterable","fromAsyncIterable","fromDOMStream","fromNodeStream","byteRange","cmd","bufferLength","threw","throw","AdaptiveByteReader","releaseLock","byobReader","defaultReader","supportsBYOB","reader","getBYOBReader","getDefaultReader","catch","readFromBYOBReader","mode","readInto","onEvent","cleanup","events","evt","destroy","race","map","_defineProperty","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_superPropBase","property","receiver","base","org","flatbuf","arrow","apache","AbstractVector","MetadataVersion","UnionMode","Precision","DateUnit","TimeUnit","IntervalUnit","Type","Endianness","Null","__init","builder","startNull","endNull","Struct_","startStruct_","endStruct_","List","startList","endList","LargeList","startLargeList","endLargeList","FixedSizeList","listSize","startFixedSizeList","addListSize","endFixedSizeList","keysSorted","startMap","addKeysSorted","endMap","Union","Sparse","typeIdsOffset","numElems","startUnion","addMode","addTypeIds","endUnion","Int","bitWidth","isSigned","startInt","addBitWidth","addIsSigned","endInt","FloatingPoint","HALF","precision","startFloatingPoint","addPrecision","endFloatingPoint","Utf8","startUtf8","endUtf8","Binary","startBinary","endBinary","LargeUtf8","startLargeUtf8","endLargeUtf8","LargeBinary","startLargeBinary","endLargeBinary","FixedSizeBinary","byteWidth","startFixedSizeBinary","addByteWidth","endFixedSizeBinary","Bool","startBool","endBool","Decimal","scale","startDecimal","addScale","endDecimal","MILLISECOND","unit","startDate","addUnit","endDate","Time","startTime","endTime","Timestamp","SECOND","optionalEncoding","timezoneOffset","startTimestamp","addTimezone","endTimestamp","Interval","YEAR_MONTH","startInterval","endInterval","Duration","startDuration","endDuration","KeyValue","keyOffset","valueOffset","startKeyValue","addKey","addValue","endKeyValue","DictionaryEncoding","id","indexTypeOffset","isOrdered","startDictionaryEncoding","addId","addIndexType","addIsOrdered","endDictionaryEncoding","Field","nameOffset","nullable","typeType","typeOffset","dictionaryOffset","childrenOffset","customMetadataOffset","startField","addName","addNullable","addTypeType","addType","addDictionary","addChildren","addCustomMetadata","endField","Schema","Little","endianness","fieldsOffset","startSchema","addEndianness","addFields","endSchema","NS7624605610262437867","MessageHeader","FieldNode","null_count","RecordBatch","nodesOffset","buffersOffset","startRecordBatch","addLength","addNodes","addBuffers","endRecordBatch","DictionaryBatch","dataOffset","isDelta","startDictionaryBatch","addData","addIsDelta","endDictionaryBatch","Message","V1","version","headerType","headerOffset","bodyLength","startMessage","addVersion","addHeaderType","addHeader","addBodyLength","endMessage","Schema_","BufferType","Message_","iterateBits","getBool","_data","_index","byte","bit","getBit","setBool","truncateBitmap","bitmap","alignedSize","packBools","xs","begin","byteIndex","remaining","popcnt_bit_range","lhs","rhs","sum","rhsInside","lhsInside","popcnt_array","cnt","pos","view","popcnt_uint32","getUint32","getUint16","getUint8","uint32","_toConsumableArray","arrayLikeToArray","Visitor","nodes","visit","getVisitFn","throwIfNotFound","_node","visitor","dtype","Data","Vector","inferDType","DataType","visitNull","visitBool","visitInt","Int8","visitInt8","Int16","visitInt16","Int32","visitInt32","Int64","visitInt64","Uint8","visitUint8","Uint16","visitUint16","Uint32","visitUint32","Uint64","visitUint64","Float","visitFloat","Float16","visitFloat16","Float32","visitFloat32","Float64","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","DateDay","visitDateDay","DateMillisecond","visitDateMillisecond","visitTimestamp","TimestampSecond","visitTimestampSecond","TimestampMillisecond","visitTimestampMillisecond","TimestampMicrosecond","visitTimestampMicrosecond","TimestampNanosecond","visitTimestampNanosecond","visitTime","TimeSecond","visitTimeSecond","TimeMillisecond","visitTimeMillisecond","TimeMicrosecond","visitTimeMicrosecond","TimeNanosecond","visitTimeNanosecond","visitDecimal","visitList","Struct","visitStruct","visitUnion","DenseUnion","visitDenseUnion","SparseUnion","visitSparseUnion","Dictionary","visitDictionary","visitInterval","IntervalDayTime","visitIntervalDayTime","IntervalYearMonth","visitIntervalYearMonth","visitFixedSizeList","visitMap","typeId","SINGLE","DOUBLE","MICROSECOND","NANOSECOND","DAY","DAY_TIME","Dense","TypeComparator","schema","compareFields","fields","others","every","compareField","compareConstructor","compareAny","compareInt","compareFloat","compareDate","compareTimestamp","timezone","compareTime","compareUnion","typeIds","children","compareInterval","indices","dictionary","comparer","ArrayType","Int_","Date_","Time_","Timestamp_","Interval_","child","valueType","join","Union_","typeIdToChildIndex","idx","Map_","atomicDictionaryId","getId","strideForType","nullCount","childData","floor","_nullCount","stride","nullBitmap","childStride","_sliceBuffers","clone","_sliceChildren","newLength","fill","VALIDITY","TYPE","OFFSET","DATA","valueOffsetsOrChildren","valueToString","JSON","stringify","createIsValidFunction","nullValues","fnBody","noNaNs","valueToCase","roundLengthUpToNearest64Bytes","BPE","sliceOrExtendArray","BufferBuilder","_resize","extra","reserved","array","DataBufferBuilder","reserve","BitmapBufferBuilder","numValid","cur","OffsetsBufferBuilder","WideBufferBuilder","_ArrayType64","buffer64","ArrayType64","nulls","_nulls","_isValid","new","flush","numInvalid","_offsets","_typeIds","reservedLength","reservedByteLength","setValid","isValid","setValue","_setValue","valid","numChildren","offsets","last","queueingStrategy","highWaterMark","sizeProperty","numChunks","append","toVector","throughIterable","throughAsyncIterable","FixedWidthBuilder","opts","VariableWidthBuilder","_pendingLength","pending","_pending","current","_flush","pendingLength","_flushPending","BoolBuilder","NullBuilder","DateBuilder","DateDayBuilder","DateMillisecondBuilder","DecimalBuilder","DictionaryBuilder","hashFn","_dictionaryOffset","_keysToIndices","valueToKey","keysToIndices","_dictionary","curr","concat","FixedSizeBinaryBuilder","f64","u32","uint16ToFloat64","h","expo","sigf","sign","NaN","float64ToUint16","FloatBuilder","Float16Builder","Float32Builder","Float64Builder","Parent","Class","bignumToString","bignumToBigInt","isArrowBigNumSymbol","for","BigNum","SignedBigNum","UnsignedBigNum","DecimalBigNum","bignumToNumber","bn","hi","lo","signed","words","number","decimalToString","digits","base64","base32","checks","toJSON","assign","memo","BN","num","IntBuilder","Int8Builder","Int16Builder","Int32Builder","Int64Builder","toBigInt","Uint8Builder","Uint16Builder","Uint32Builder","Uint64Builder","TimeBuilder","TimeSecondBuilder","TimeMillisecondBuilder","TimeMicrosecondBuilder","TimeNanosecondBuilder","TimestampBuilder","TimestampSecondBuilder","TimestampMillisecondBuilder","TimestampMicrosecondBuilder","TimestampNanosecondBuilder","IntervalBuilder","IntervalDayTimeBuilder","IntervalYearMonthBuilder","BinaryBuilder","Utf8Builder","Run","kParent","kRowIndex","kKeyToIdx","kIdxToVal","kCustomInspect","Row","parent","numKeys","ktoi","itov","getValue","getIndex","ki","vi","kr","vr","has","callbackfn","thisArg","callback","m","str","MapRow","createRowProxy","getChildAt","StructRow","defineRowProxyProperties","findIndex","tmp","row","getter","setter","getKey","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","clampIndex","adjust","clampRange","end","big0","isNaNFast","createElementComparator","search","typeofSearch","valueOfSearch","comparators","createSubElementsComparator","creatMapComparator","createArrayLikeComparator","createVectorComparator","createObjectComparator","compareArray","compareObject","vec","compareVector","lKeyItr","rKeyItr","rValItr","rVal","lKey","rKey","Chunked","calculateOffsets","_type","_chunks","_chunkOffsets","_length","_numChildren","chunk","isDictionary","_indices","flatten","_sliceInternal","columns","_children","vector","mid","isValidInternal","getInternal","element","indexOfInternal","toArray","arraySet","typedSet","chunkIndex","fromIndex","start","found","slices","chunkOffsets","chunkLength","chunkOffset","to","vectors","selectChunkArgs","Column","_field","SingleChunkColumn","metadata","column","rest","some","_chunk","selectArgs","Ctor","vals","_selectArgs","selectColumnArgs","_selectFieldArgs","selectFieldArgs","_selectChunkArgs","selectVectorChildrenArgs","_selectVectorChildrenArgs","toKeysAndValues","entries","fieldIndex","valueIndex","dictionaries","generateDictionaryMap","compareSchemas","columnNames","names","columnIndices","curFields","mergeMaps","newFields","f2","newDictionaries","m1","m2","ListBuilder","_run","run","FixedSizeListBuilder","childIndex","MapBuilder","StructBuilder","UnionBuilder","_valueToChildTypeId","childTypeId","SparseUnionBuilder","DenseUnionBuilder","SetVisitor","setEpochMsToMillisecondsLong","epochMs","setVariableWidthBytes","setDateDay","setEpochMsToDays","setDateMillisecond","setNumeric","setFloat16","setNumericX2","values64","long","setTimestampSecond","setTimestampMillisecond","setTimestampMicrosecond","setEpochMsToMicrosecondsLong","setTimestampNanosecond","setEpochMsToNanosecondsLong","setTimeSecond","setTimeMillisecond","setTimeMicrosecond","setTimeNanosecond","setDenseUnion","setSparseUnion","setIntervalDayTime","setIntervalYearMonth","itr","_setStructVectorValue","_setStructArrayValue","_setStructObjectValue","GetBuilderCtor","newBuilder","getBuilderConstructor","defaultOptions","getChildOptions","T","setVisitor","Footer","Block","schemaOffset","dictionariesOffset","recordBatchesOffset","startFooter","addSchema","addDictionaries","addRecordBatches","endFooter","metaDataLength","_Block","File_","_Footer","Footer_","V4","recordBatches","dictionaryBatches","_recordBatches","_dictionaryBatches","numRecordBatches","block","getRecordBatch","numDictionaries","getDictionaryBatch","buf","footer","getRootAsFooter","OffHeapFooter","startRecordBatchesVector","rb","FileBlock","startDictionariesVector","db","dictionaryBatchesOffset","finishFooterBuffer","_footer","recordBatchesLength","dictionariesLength","fileBlock","createBlock","AsyncByteQueue","ByteStream","ByteStreamSource","peek","AsyncByteStream","AsyncByteStreamSource","body","closed","cancel","RandomAccessFile","readAt","getInt32","nBytes","AsyncRandomAccessFile","file","_handle","stat","bytesRead","intAsHex","kPowersOfTen","BaseInt64","L","R","product","lessThan","_times","_plus","out_buffer","fromString","out","posn","group","parseInt","substr","multiple","times","plus","left","right","this_high","other_high","negate","startsWith","Int128","L0","L1","L2","L3","R0","R1","R2","R3","multiply","sums","VectorLoader","nodesIndex","buffersIndex","nextFieldNode","readNullBitmap","readData","readOffsets","visitMany","readTypeIds","readDictionary","nextBufferRange","JSONVectorLoader","sources","isTimestamp","isInt","isTime","isDate","convertArray","isDecimal","isBinary","isFixedSizeBinary","binaryDataFromJSON","isBool","isUtf8","joined","TypeAssembler","startTypeIdsVector","createTypeIdsVector","indexType","recordBatchFromJSON","fieldNodesFromJSON","buffersFromJSON","schemaFieldsFromJSON","_schema","fromJSON","fieldChildrenFromJSON","fieldNodes","validity","BufferRegion","customMetadataFromJSON","_metadata","indexTypeFromJSON","typeFromJSON","_Field","_Schema","_Message","_KeyValue","_FieldNode","_Endianness","_RecordBatch","_DictionaryBatch","header","_version","_headerType","_createHeader","_bodyLength","msg","message","messageHeaderFromJSON","_message","getRootAsMessage","decodeMessageHeader","isSchema","isRecordBatch","isDictionaryBatch","finishMessageBuffer","_nodes","_buffers","_isDelta","_id","decodeFieldNodes","batch","nodesLength","decodeBuffers","bufferRegions","buffersLength","decodeSchemaFields","fieldsLength","decodeFieldChildren","childrenLength","decodeCustomMetadata","customMetadataLength","customMetadata","decodeIndexType","decodeFieldType","typeIdsArray","typeAssembler","childOffsets","childrenVectorOffset","createChildrenVector","metadataOffset","createCustomMetadataVector","dictType","dictMeta","fieldOffsets","startFieldsVector","fieldsVectorOffset","createFieldsVector","platformIsLittleEndian","Big","recordBatch","startNodesVector","nodesVectorOffset","startBuffersVector","b_","buffersVectorOffset","dictionaryBatch","createFieldNode","createBuffer","setInt16","invalidMessageType","nullMessage","invalidMessageMetadata","expected","actual","invalidMessageBodyLength","MessageReader","readMetadataLength","readMetadata","throwIfNull","readMessage","PADDING","metadataLength","AsyncMessageReader","JSONMessageReader","_body","_batchIndex","_dictionaryIndex","batches","flattenDataSources","MAGIC_STR","MAGIC","checkForMagicArrowString","magicLength","magicAndPadding","magicX2AndPadding","VectorAssembler","_byteLength","_bufferRegions","RangeError","isNull","addBuffer","_nullV","assembler","vectorChildren","assembleResult","assembleFlatVector","assembleFlatListVector","firstOffset","lastOffset","assembleListVector","assembleNestedVector","maxChildTypeId","childLengths","shiftedOffsets","unshiftedOffsets","childLength","RecordBatchWriter","_position","_started","_sink","_dictionaryBlocks","_recordBatchBlocks","_dictionaryDeltaOffsets","autoDestroy","writeLegacyIpcFormat","_autoDestroy","_writeLegacyIpcFormat","writeAll","writeAllAsync","sink","objectMode","_writeFooter","compareTo","_writeSchema","payload","_InternalEmptyPlaceholderRecordBatch","_writeRecordBatch","flatbufferSize","prefixSize","nPaddingBytes","_write","of","_writePadding","write","_writeMessage","assemble","_writeDictionaries","_writeBodyBuffers","padding","_writeDictionaryBatch","writableStrategy","readableStrategy","RecordBatchStreamWriter","writer","RecordBatchFileWriter","_writeMagic","noopBuf","nullBufs","bitmapLength","ensureSameLengthData","batchLength","l","batchData","_changeLengthAndBackfillNullBitmap","distributeColumnsIntoRecordBatches","distributeVectorsIntoRecordBatches","vecs","batchArgs","numBatches","numColumns","POSITIVE_INFINITY","distributeChildData","uniformlyDistributeChunksAcrossRecordBatches","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","BaseVector","_bindDataAccessors","VectorName","isConcatSpreadable","BinaryVector","BoolVector","vectorFromValuesWithType","DateVector","DateDayVector","DateMillisecondVector","DecimalVector","DictionaryVector","FixedSizeBinaryVector","FixedSizeListVector","FloatVector","ArrowType","vectorTypeToDataType","InputType","arrayTypeToDataType","convertTo16Bit","Float16Vector","Float32Vector","Float64Vector","typeCtor","dataCtor","IntervalVector","IntervalDayTimeVector","IntervalYearMonthVector","IntVector","is64bit","convert32To64Bit","Int8Vector","Int16Vector","Int32Vector","Int64Vector","_values64","Uint8Vector","Uint16Vector","Uint32Vector","Uint64Vector","ListVector","MapVector","NullVector","StructVector","_row","bound","TimestampVector","TimestampSecondVector","TimestampMillisecondVector","TimestampMicrosecondVector","TimestampNanosecondVector","TimeVector","TimeSecondVector","TimeMillisecondVector","TimeMicrosecondVector","TimeNanosecondVector","UnionVector","DenseUnionVector","SparseUnionVector","Utf8Vector","partial0","partial2","GetVisitor","epochMillisecondsLongToMs","epochMillisecondsToDate","getVariableWidthBytes","getDateDay","epochDaysToMs","epochDaysToDate","getDateMillisecond","epochMillisecondsLongToDate","getNumeric","getFloat16","getBigInts","getTimestampSecond","getTimestampMillisecond","getTimestampMicrosecond","epochMicrosecondsLongToMs","getTimestampNanosecond","epochNanosecondsLongToMs","getTimeSecond","getTimeMillisecond","getTimeMicrosecond","getTimeNanosecond","getDenseUnion","getSparseUnion","getIntervalDayTime","getIntervalYearMonth","interval","int32s","_vector","decimal","IndexOfVisitor","indexOfValue","searchElement","indexOfNull","compare","indexOfUnion","IteratorVisitor","vectorIterator","getFn","getVisitor","nullByte","nullBit","nullableIterator","ToArrayVisitor","arrayOfVector","iteratorVisitor","variableWidthColumnErrorMessage","ByteWidthVisitor","____","visitFields","GetVectorConstructor","newDataType","getVectorConstructor","transform","indexOfVisitor","toArrayVisitor","getByteWidth","byteWidthVisitor","wrapNullableSet","VectorCtor","partialType0","getColumnAt","getColumnIndex","Writer","nameToIndex","selectAt","columnName","newIdx","oldToNew","_f","_fs","empty","fromStruct","tableFromIterable","tableFromAsyncIterable","RecordBatchReader","isSync","open","opening","cols","_dictionaries","DictionaryCollector","collect","fs","vs","readAllSync","impl","_impl","isFile","isAsync","isStream","readRecordBatch","RecordBatchStreamReader","RecordBatchJSONReaderImpl","fromArrowJSON","fromFileHandle","fromAsyncByteStream","RecordBatchFileReader","RecordBatchFileReaderImpl","RecordBatchStreamReaderImpl","fromByteStream","readAllAsync","AsyncRecordBatchStreamReader","AsyncRecordBatchFileReader","RecordBatchReaderImpl","_recordBatchIndex","_loadVectors","_reader","shouldAutoDestroy","readSchema","_readNextMessageAndValidate","readMessageBody","_loadRecordBatch","_loadDictionaryBatch","AsyncRecordBatchStreamReaderImpl","_readFooter","_readDictionaryBatch","seek","AsyncRecordBatchFileReaderImpl","BuilderTransform","_numChunks","_finished","_bufferedSize","builderOptions","_controller","_builder","_getSize","chunkByteLength","readableHighWaterMark","writableHighWaterMark","ReadableStream","_maybeFlush","WritableStream","_writeValueAndReturnChunkSize","bufferedSize","controller","desiredSize","_enqueue","enqueue","Value","Literal","Equals","LTeq","GTeq","Not","ge","le","eq","Col","colidx","Predicate","expr","And","Or","ComparisonPredicate","_bindLitLit","_bindLitCol","_bindColLit","_bindColCol","CombinationPredicate","accum","_batch","rtrn","left_func","right_func","col","lit","col_func","lastDictionary","reverseLookup","lastKey","func","countBy","DataFrame","scan","scanReverse","predicate","FilteredDataFrame","batchIndex","numRows","count_by","countByteLength","ceil","log","counts","CountByResult","_predicate","isBound","and","util_bn_","util_int_","util_bit_","util_math_","util_buffer_","util_vector_","bm","hwm","pull","asyncIterableAsReadableDOMStream","iterableAsReadableDOMStream","queue","readable","ComponentMessageType","ArrowTable","indexBuffer","columnsBuffer","styler","_this","getCell","rowIndex","columnIndex","isBlankCell","headerRows","headerColumns","isIndexCell","isColumnsCell","classNames","content","dataColumnIndex","getContent","columnsTable","dataRowIndex","uuid","indexTable","displayValuesTable","dataTable","getColumnTypeId","nanosToDate","caption","displayValues","styles","numCols","rows","dataRows","dataColumns","serialize","nanos","__assign","Streamlit","API_VERSION","RENDER_EVENT","registeredMessageListener","setComponentReady","onMessageEvent","sendBackMsg","COMPONENT_READY","apiVersion","setFrameHeight","height","document","scrollHeight","lastFrameHeight","SET_FRAME_HEIGHT","setComponentValue","dataType","isBigIntArray","isTypedArray","SET_COMPONENT_VALUE","onRenderMessage","dataframeArgs","argsDataframeToObject","disabled","theme","_injectTheme","eventData","detail","argsDataframe","argsDataframeArrow","_a","toArrowTable","fromEntries","df","postMessage","isStreamlitMessage","style","createElement","head","appendChild","innerHTML","primaryColor","backgroundColor","secondaryBackgroundColor","textColor","font","__extends","extendStatics","__","_super","StreamlitComponentBase","componentDidMount","componentDidUpdate","React","PureComponent","_unsupportedIterableToArray","minLen","test","_arrayLikeToArray","arr2","reactIs","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","getOwnPropertyNames","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","restArguments","startIndex","isUndefined","isElement","nodeType","tagTester","tag","nodelist","childNodes","hasStringTagBug","hasObjectTag","isIE11","isDataView","getInt8","isArrayBuffer","isArguments","isSymbol","parseFloat","constant","createSizePropertyCheck","getSizeProperty","collection","shallowProperty","getByteLength","typedArrayPattern","isBufferLike","collectNonEnumProps","hash","contains","emulatedSet","nonEnumIdx","prop","isEmpty","getLength","isString","isMatch","attrs","_keys","_wrapped","toBufferView","bufferSource","tagDataView","aStack","bStack","deepEq","className","areArrays","aCtor","bCtor","isEqual","allKeys","ie11fingerprint","methods","weakMapMethods","forEachName","commonInit","mapTail","mapMethods","setMethods","pairs","invert","functions","sort","createAssigner","keysFunc","defaults","baseCreate","extendOwn","extend","tap","interceptor","toPath","path","deepGet","_has","identity","matcher","optimizeCb","argCount","accumulator","baseIteratee","iteratee","cb","mapObject","results","currentKey","noop","propertyOf","random","getTime","createEscaper","escaper","match","testRegexp","RegExp","replaceRegexp","replace","escapeMap","templateSettings","evaluate","interpolate","escape","noMatch","escapes","escapeRegExp","escapeChar","bareIdentifier","template","text","settings","oldSettings","argument","variable","fallback","idCounter","uniqueId","prefix","chain","_chain","executeBound","sourceFunc","boundFunc","callingContext","partial","boundArgs","placeholder","callArgs","depth","strict","output","isArrayLike","memoize","hasher","cache","address","wait","setTimeout","delay","throttle","timeout","previous","later","leading","throttled","_now","clearTimeout","trailing","debounce","immediate","passed","debounced","_args","compose","after","before","findKey","createPredicateIndexFinder","dir","sortedIndex","createIndexFinder","predicateFind","item","findLastIndex","find","findWhere","each","createReduce","reducer","initial","list","guard","contextPath","pluck","where","computed","lastComputed","reStrSymbol","sample","rand","shuffle","sortBy","criteria","behavior","partition","pass","keyInObj","pick","first","compact","_flatten","otherArrays","difference","uniq","isSorted","seen","arrays","intersection","argsLength","unzip","range","chainResult","mixin","allExports","g","q","w","z","$$typeof","A","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","B","C","encodeURIComponent","D","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","E","refs","updater","G","H","isReactComponent","setState","forceUpdate","I","isPureReactComponent","J","K","ref","__self","__source","M","_owner","O","P","Q","keyPrefix","S","U","V","W","aa","X","N","Y","Z","ba","ReactCurrentDispatcher","ReactCurrentBatchConfig","suspense","ReactCurrentOwner","IsSomeRendererActing","Children","only","Component","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createFactory","createRef","forwardRef","isValidElement","lazy","_ctor","_status","_result","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","propIsEnumerable","toObject","test1","test2","test3","split","letter","shouldUseNative"],"mappings":"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","file":"static/js/2.0be15a09.chunk.js","sourcesContent":["// Current version.\nexport var VERSION = '1.13.6';\n\n// Establish the root object, `window` (`self`) in the browser, `global`\n// on the server, or `this` in some virtual machines. We use `self`\n// instead of `window` for `WebWorker` support.\nexport var root = (typeof self == 'object' && self.self === self && self) ||\n          (typeof global == 'object' && global.global === global && global) ||\n          Function('return this')() ||\n          {};\n\n// Save bytes in the minified (but not gzipped) version:\nexport var ArrayProto = Array.prototype, ObjProto = Object.prototype;\nexport var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n// Create quick reference variables for speed access to core prototypes.\nexport var push = ArrayProto.push,\n    slice = ArrayProto.slice,\n    toString = ObjProto.toString,\n    hasOwnProperty = ObjProto.hasOwnProperty;\n\n// Modern feature detection.\nexport var supportsArrayBuffer = typeof ArrayBuffer !== 'undefined',\n    supportsDataView = typeof DataView !== 'undefined';\n\n// All **ECMAScript 5+** native function implementations that we hope to use\n// are declared here.\nexport var nativeIsArray = Array.isArray,\n    nativeKeys = Object.keys,\n    nativeCreate = Object.create,\n    nativeIsView = supportsArrayBuffer && ArrayBuffer.isView;\n\n// Create references to these builtin functions because we override them.\nexport var _isNaN = isNaN,\n    _isFinite = isFinite;\n\n// Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\nexport var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\nexport var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n  'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n// The largest integer that can be represented exactly.\nexport var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap()\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap()\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event)\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    )\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            )\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault()\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    })\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true })\n\n    // Define accessors\n    const keys = Object.keys(event)\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key))\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation()\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this)\n\n        data.stopped = true\n        data.immediateStopped = true\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation()\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this))\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this)\n\n        data.stopped = true\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this))\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype)\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event)\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto)\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event)\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    })\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key)\n            const isFunc = typeof descriptor.value === \"function\"\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            )\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto)\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto)\n        wrappers.set(proto, wrapper)\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nexport function wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event))\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nexport function isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nexport function setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nexport function setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nexport function setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener\n}\n","import {\n    isStopped,\n    setCurrentTarget,\n    setEventPhase,\n    setPassiveListener,\n    wrapEvent,\n} from \"./event.mjs\"\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap()\n\n// Listener types\nconst CAPTURE = 1\nconst BUBBLE = 2\nconst ATTRIBUTE = 3\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget)\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this)\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this)\n\n            // Traverse to the tail while removing old value.\n            let prev = null\n            let node = listeners.get(eventName)\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next)\n                    } else {\n                        listeners.delete(eventName)\n                    }\n                } else {\n                    prev = node\n                }\n\n                node = node.next\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                }\n                if (prev === null) {\n                    listeners.set(eventName, newNode)\n                } else {\n                    prev.next = newNode\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    )\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this)\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    })\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i])\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map())\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length)\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i]\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this)\n        const optionsIsObj = isObject(options)\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        }\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName)\n        if (node === undefined) {\n            listeners.set(eventName, newNode)\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node\n            node = node.next\n        }\n\n        // Add it.\n        prev.next = newNode\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this)\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options)\n        const listenerType = capture ? CAPTURE : BUBBLE\n\n        let prev = null\n        let node = listeners.get(eventName)\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n                return\n            }\n\n            prev = node\n            node = node.next\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this)\n        const eventName = event.type\n        let node = listeners.get(eventName)\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event)\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next)\n                } else {\n                    listeners.delete(eventName)\n                }\n            } else {\n                prev = node\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            )\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent)\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err)\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent)\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next\n        }\n        setPassiveListener(wrappedEvent, null)\n        setEventPhase(wrappedEvent, 0)\n        setCurrentTarget(wrappedEvent, null)\n\n        return !wrappedEvent.defaultPrevented\n    },\n}\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n})\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype)\n}\n\nexport { defineEventAttribute, EventTarget }\nexport default EventTarget\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","export default function _OverloadYield(value, kind) {\n  this.v = value, this.k = kind;\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function _awaitAsyncGenerator(value) {\n  return new OverloadYield(value, 0);\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function AsyncGenerator(gen) {\n  var front, back;\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg),\n        value = result.value,\n        overloaded = value instanceof OverloadYield;\n      Promise.resolve(overloaded ? value.v : value).then(function (arg) {\n        if (overloaded) {\n          var nextKey = \"return\" === key ? \"return\" : \"next\";\n          if (!value.k || arg.done) return resume(nextKey, arg);\n          arg = gen[nextKey](arg).value;\n        }\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: !0\n        });\n        break;\n      case \"throw\":\n        front.reject(value);\n        break;\n      default:\n        front.resolve({\n          value: value,\n          done: !1\n        });\n    }\n    (front = front.next) ? resume(front.key, front.arg) : back = null;\n  }\n  this._invoke = function (key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n      back ? back = back.next = request : (front = back = request, resume(key, arg));\n    });\n  }, \"function\" != typeof gen[\"return\"] && (this[\"return\"] = void 0);\n}\nAsyncGenerator.prototype[\"function\" == typeof Symbol && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n}, AsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n}, AsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n}, AsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};","import AsyncGenerator from \"./AsyncGenerator.js\";\nexport default function _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}","import OverloadYield from \"./OverloadYield.js\";\nexport default function _asyncGeneratorDelegate(inner) {\n  var iter = {},\n    waiting = !1;\n  function pump(key, value) {\n    return waiting = !0, value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    }), {\n      done: !1,\n      value: new OverloadYield(value, 1)\n    };\n  }\n  return iter[\"undefined\" != typeof Symbol && Symbol.iterator || \"@@iterator\"] = function () {\n    return this;\n  }, iter.next = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"next\", value);\n  }, \"function\" == typeof inner[\"throw\"] && (iter[\"throw\"] = function (value) {\n    if (waiting) throw waiting = !1, value;\n    return pump(\"throw\", value);\n  }), \"function\" == typeof inner[\"return\"] && (iter[\"return\"] = function (value) {\n    return waiting ? (waiting = !1, value) : pump(\"return\", value);\n  }), iter;\n}","export default function _asyncIterator(iterable) {\n  var method,\n    async,\n    sync,\n    retry = 2;\n  for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) {\n    if (async && null != (method = iterable[async])) return method.call(iterable);\n    if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));\n    async = \"@@asyncIterator\", sync = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(s) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var done = r.done;\n    return Promise.resolve(r.value).then(function (value) {\n      return {\n        value: value,\n        done: done\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) {\n    this.s = s, this.n = s.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(value) {\n      var ret = this.s[\"return\"];\n      return void 0 === ret ? Promise.resolve({\n        value: value,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(value) {\n      var thr = this.s[\"return\"];\n      return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(s);\n}","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier) {\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT);\n  this.addOffset(root_table);\n  this.bb.setPosition(this.space);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from './buffer';\nimport {\n    TextDecoder as TextDecoderPolyfill,\n    TextEncoder as TextEncoderPolyfill,\n} from 'text-encoding-utf-8';\n\n/** @ignore @suppress {missingRequire} */\nconst _Buffer = typeof Buffer === 'function' ? Buffer : null;\n/** @ignore */\nconst useNativeEncoders = typeof TextDecoder === 'function' && typeof TextEncoder === 'function';\n\n/** @ignore */\nexport const decodeUtf8 = ((TextDecoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const decoder = new TextDecoder('utf-8');\n        return (buffer?: ArrayBuffer | ArrayBufferView) => decoder.decode(buffer);\n    }\n    return (input: ArrayBufferLike | ArrayBufferView) => {\n        const { buffer, byteOffset, length } = toUint8Array(input);\n        return _Buffer.from(buffer, byteOffset, length).toString();\n    };\n})(typeof TextDecoder !== 'undefined' ? TextDecoder : TextDecoderPolyfill);\n\n/** @ignore */\nexport const encodeUtf8 = ((TextEncoder) => {\n    if (useNativeEncoders || !_Buffer) {\n        const encoder = new TextEncoder();\n        return (value?: string) => encoder.encode(value);\n    }\n    return (input = '') => toUint8Array(_Buffer.from(input, 'utf8'));\n})(typeof TextEncoder !== 'undefined' ? TextEncoder : TextEncoderPolyfill);\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\n\n/** @ignore */\nexport const ITERATOR_DONE: any = Object.freeze({ done: true, value: void (0) });\n\n/** @ignore */\nexport type FileHandle = import('fs').promises.FileHandle;\n/** @ignore */\nexport type ArrowJSONLike = { schema: any; batches?: any[]; dictionaries?: any[]; };\n/** @ignore */\nexport type ReadableDOMStreamOptions = { type: 'bytes' | undefined, autoAllocateChunkSize?: number, highWaterMark?: number };\n\n/** @ignore */\nexport class ArrowJSON {\n    // @ts-ignore\n    constructor(private _json: ArrowJSONLike) {}\n    public get schema(): any { return this._json['schema']; }\n    public get batches(): any[] { return (this._json['batches'] || []) as any[]; }\n    public get dictionaries(): any[] { return (this._json['dictionaries'] || []) as any[]; }\n}\n\n/** @ignore */\nexport interface Readable<T> {\n\n    readonly closed: Promise<void>;\n    cancel(reason?: any): Promise<void>;\n\n    read(size?: number | null): Promise<T | null>;\n    peek(size?: number | null): Promise<T | null>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(size?: number | null): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nexport interface Writable<T> {\n    readonly closed: Promise<void>;\n    close(): void;\n    write(chunk: T): void;\n    abort(reason?: any): void;\n}\n\n/** @ignore */\nexport interface ReadableWritable<TReadable, TWritable> extends Readable<TReadable>, Writable<TWritable> {\n    [Symbol.asyncIterator](): AsyncIterableIterator<TReadable>;\n    toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<TReadable>;\n    toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n}\n\n/** @ignore */\nexport abstract class ReadableInterop<T> {\n\n    public abstract toDOMStream(options?: ReadableDOMStreamOptions): ReadableStream<T>;\n    public abstract toNodeStream(options?: import('stream').ReadableOptions): import('stream').Readable;\n\n    public tee(): [ReadableStream<T>, ReadableStream<T>] {\n        return this._getDOMStream().tee();\n    }\n    public pipe<R extends NodeJS.WritableStream>(writable: R, options?: { end?: boolean; }) {\n        return this._getNodeStream().pipe(writable, options);\n    }\n    public pipeTo(writable: WritableStream<T>, options?: PipeOptions) { return this._getDOMStream().pipeTo(writable, options); }\n    public pipeThrough<R extends ReadableStream<any>>(duplex: { writable: WritableStream<T>, readable: R }, options?: PipeOptions) {\n        return this._getDOMStream().pipeThrough(duplex, options);\n    }\n\n    protected _DOMStream?: ReadableStream<T>;\n    private _getDOMStream() {\n        return this._DOMStream || (this._DOMStream = this.toDOMStream());\n    }\n\n    protected _nodeStream?: import('stream').Readable;\n    private _getNodeStream() {\n        return this._nodeStream || (this._nodeStream = this.toNodeStream());\n    }\n}\n\n/** @ignore */\ntype Resolution<T> = { resolve: (value?: T | PromiseLike<T>) => void; reject: (reason?: any) => void; };\n\n/** @ignore */\nexport class AsyncQueue<TReadable = Uint8Array, TWritable = TReadable> extends ReadableInterop<TReadable>\n    implements AsyncIterableIterator<TReadable>, ReadableWritable<TReadable, TWritable> {\n\n    protected _values: TWritable[] = [];\n    protected _error?: { error: any; };\n    protected _closedPromise: Promise<void>;\n    protected _closedPromiseResolve?: (value?: any) => void;\n    protected resolvers: Resolution<IteratorResult<TReadable>>[] = [];\n\n    constructor() {\n        super();\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public write(value: TWritable) {\n        if (this._ensureOpen()) {\n            this.resolvers.length <= 0\n                ? (this._values.push(value))\n                : (this.resolvers.shift()!.resolve({ done: false, value } as any));\n        }\n    }\n    public abort(value?: any) {\n        if (this._closedPromiseResolve) {\n            this.resolvers.length <= 0\n                ? (this._error = { error: value })\n                : (this.resolvers.shift()!.reject({ done: true, value }));\n        }\n    }\n    public close() {\n        if (this._closedPromiseResolve) {\n            const { resolvers } = this;\n            while (resolvers.length > 0) {\n                resolvers.shift()!.resolve(ITERATOR_DONE);\n            }\n            this._closedPromiseResolve();\n            this._closedPromiseResolve = undefined;\n        }\n    }\n\n    public [Symbol.asyncIterator]() { return this; }\n    public toDOMStream(options?: ReadableDOMStreamOptions) {\n        return streamAdapters.toDOMStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public toNodeStream(options?: import('stream').ReadableOptions) {\n        return streamAdapters.toNodeStream(\n            (this._closedPromiseResolve || this._error)\n                ? (this as AsyncIterable<TReadable>)\n                : (this._values as any) as Iterable<TReadable>,\n            options);\n    }\n    public async throw(_?: any) { await this.abort(_); return ITERATOR_DONE; }\n    public async return(_?: any) { await this.close(); return ITERATOR_DONE; }\n\n    public async read(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<TReadable | null> { return (await this.next(size, 'peek')).value; }\n    public next(..._args: any[]): Promise<IteratorResult<TReadable>> {\n        if (this._values.length > 0) {\n            return Promise.resolve({ done: false, value: this._values.shift()! } as any);\n        } else if (this._error) {\n            return Promise.reject({ done: true, value: this._error.error });\n        } else if (!this._closedPromiseResolve) {\n            return Promise.resolve(ITERATOR_DONE);\n        } else {\n            return new Promise<IteratorResult<TReadable>>((resolve, reject) => {\n                this.resolvers.push({ resolve, reject });\n            });\n        }\n    }\n\n    protected _ensureOpen() {\n        if (this._closedPromiseResolve) {\n            return true;\n        }\n        throw new Error(`${this} is closed`);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ReadableInterop, ArrowJSONLike } from '../io/interfaces';\n\n/** @ignore */\ntype FSReadStream = import('fs').ReadStream;\n/** @ignore */\ntype FileHandle = import('fs').promises.FileHandle;\n\n/** @ignore */\nexport interface Subscription {\n    unsubscribe: () => void;\n}\n\n/** @ignore */\nexport interface Observer<T> {\n    closed?: boolean;\n    next: (value: T) => void;\n    error: (err: any) => void;\n    complete: () => void;\n}\n\n/** @ignore */\nexport interface Observable<T> {\n    subscribe: (observer: Observer<T>) => Subscription;\n}\n\n/** @ignore */\nconst [BigIntCtor, BigIntAvailable] = (() => {\n    const BigIntUnavailableError = () => { throw new Error('BigInt is not available in this environment'); };\n    function BigIntUnavailable() { throw BigIntUnavailableError(); }\n    BigIntUnavailable.asIntN = () => { throw BigIntUnavailableError(); };\n    BigIntUnavailable.asUintN = () => { throw BigIntUnavailableError(); };\n    return typeof BigInt !== 'undefined' ? [BigInt, true] : [<any> BigIntUnavailable, false];\n})() as [BigIntConstructor, boolean];\n\n/** @ignore */\nconst [BigInt64ArrayCtor, BigInt64ArrayAvailable] = (() => {\n    const BigInt64ArrayUnavailableError = () => { throw new Error('BigInt64Array is not available in this environment'); };\n    class BigInt64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigInt64ArrayUnavailableError(); }\n        static from() { throw BigInt64ArrayUnavailableError(); }\n        constructor() { throw BigInt64ArrayUnavailableError(); }\n    }\n    return typeof BigInt64Array !== 'undefined' ? [BigInt64Array, true] : [<any> BigInt64ArrayUnavailable, false];\n})() as [BigInt64ArrayConstructor, boolean];\n\n/** @ignore */\nconst [BigUint64ArrayCtor, BigUint64ArrayAvailable] = (() => {\n    const BigUint64ArrayUnavailableError = () => { throw new Error('BigUint64Array is not available in this environment'); };\n    class BigUint64ArrayUnavailable {\n        static get BYTES_PER_ELEMENT() { return 8; }\n        static of() { throw BigUint64ArrayUnavailableError(); }\n        static from() { throw BigUint64ArrayUnavailableError(); }\n        constructor() { throw BigUint64ArrayUnavailableError(); }\n    }\n    return typeof BigUint64Array !== 'undefined' ? [BigUint64Array, true] : [<any> BigUint64ArrayUnavailable, false];\n})() as [BigUint64ArrayConstructor, boolean];\n\nexport { BigIntCtor as BigInt, BigIntAvailable };\nexport { BigInt64ArrayCtor as BigInt64Array, BigInt64ArrayAvailable };\nexport { BigUint64ArrayCtor as BigUint64Array, BigUint64ArrayAvailable };\n\n/** @ignore */ const isNumber = (x: any) => typeof x === 'number';\n/** @ignore */ const isBoolean = (x: any) => typeof x === 'boolean';\n/** @ignore */ const isFunction = (x: any) => typeof x === 'function';\n/** @ignore */\nexport const isObject = (x: any): x is Object => x != null && Object(x) === x;\n\n/** @ignore */\nexport const isPromise = <T = any>(x: any): x is PromiseLike<T> => {\n    return isObject(x) && isFunction(x.then);\n};\n\n/** @ignore */\nexport const isObservable = <T = any>(x: any): x is Observable<T> => {\n    return isObject(x) && isFunction(x.subscribe);\n};\n\n/** @ignore */\nexport const isIterable = <T = any>(x: any): x is Iterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.iterator]);\n};\n\n/** @ignore */\nexport const isAsyncIterable = <T = any>(x: any): x is AsyncIterable<T> => {\n    return isObject(x) && isFunction(x[Symbol.asyncIterator]);\n};\n\n/** @ignore */\nexport const isArrowJSON = (x: any): x is ArrowJSONLike  => {\n    return isObject(x) && isObject(x['schema']);\n};\n\n/** @ignore */\nexport const isArrayLike = <T = any>(x: any): x is ArrayLike<T> => {\n    return isObject(x) && isNumber(x['length']);\n};\n\n/** @ignore */\nexport const isIteratorResult = <T = any>(x: any): x is IteratorResult<T> => {\n    return isObject(x) && ('done' in x) && ('value' in x);\n};\n\n/** @ignore */\nexport const isUnderlyingSink = <T = any>(x: any): x is UnderlyingSink<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['close']) &&\n        isFunction(x['start']) &&\n        isFunction(x['write']);\n};\n\n/** @ignore */\nexport const isFileHandle = (x: any): x is FileHandle => {\n    return isObject(x) && isFunction(x['stat']) && isNumber(x['fd']);\n};\n\n/** @ignore */\nexport const isFSReadStream = (x: any): x is FSReadStream => {\n    return isReadableNodeStream(x) && isNumber((<any> x)['bytesRead']);\n};\n\n/** @ignore */\nexport const isFetchResponse = (x: any): x is Response => {\n    return isObject(x) && isReadableDOMStream(x['body']);\n};\n\n/** @ignore */\nexport const isWritableDOMStream = <T = any>(x: any): x is WritableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['abort']) &&\n        isFunction(x['getWriter']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableDOMStream = <T = any>(x: any): x is ReadableStream<T> => {\n    return isObject(x) &&\n        isFunction(x['cancel']) &&\n        isFunction(x['getReader']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isWritableNodeStream = (x: any): x is NodeJS.WritableStream => {\n    return isObject(x) &&\n        isFunction(x['end']) &&\n        isFunction(x['write']) &&\n        isBoolean(x['writable']) &&\n        !(x instanceof ReadableInterop);\n};\n\n/** @ignore */\nexport const isReadableNodeStream = (x: any): x is NodeJS.ReadableStream => {\n    return isObject(x) &&\n        isFunction(x['read']) &&\n        isFunction(x['pipe']) &&\n        isBoolean(x['readable']) &&\n        !(x instanceof ReadableInterop);\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport { encodeUtf8 } from '../util/utf8';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { isPromise, isIterable, isAsyncIterable, isIteratorResult, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nconst SharedArrayBuf = (typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : ArrayBuffer);\n\n/** @ignore */\nfunction collapseContiguousByteRanges(chunks: Uint8Array[]) {\n    let result = chunks[0] ? [chunks[0]] : [];\n    let xOffset: number, yOffset: number, xLen: number, yLen: number;\n    for (let x, y, i = 0, j = 0, n = chunks.length; ++i < n;) {\n        x = result[j];\n        y = chunks[i];\n        // continue if x and y don't share the same underlying ArrayBuffer, or if x isn't before y\n        if (!x || !y || x.buffer !== y.buffer || y.byteOffset < x.byteOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        ({ byteOffset: xOffset, byteLength: xLen } = x);\n        ({ byteOffset: yOffset, byteLength: yLen } = y);\n        // continue if the byte ranges of x and y aren't contiguous\n        if ((xOffset + xLen) < yOffset || (yOffset + yLen) < xOffset) {\n            y && (result[++j] = y);\n            continue;\n        }\n        result[j] = new Uint8Array(x.buffer, xOffset, yOffset - xOffset + yLen);\n    }\n    return result;\n}\n\n/** @ignore */\nexport function memcpy<TTarget extends ArrayBufferView, TSource extends ArrayBufferView>(target: TTarget, source: TSource, targetByteOffset = 0, sourceByteLength = source.byteLength) {\n    const targetByteLength = target.byteLength;\n    const dst = new Uint8Array(target.buffer, target.byteOffset, targetByteLength);\n    const src = new Uint8Array(source.buffer, source.byteOffset, Math.min(sourceByteLength, targetByteLength));\n    dst.set(src, targetByteOffset);\n    return target;\n}\n\n/** @ignore */\nexport function joinUint8Arrays(chunks: Uint8Array[], size?: number | null): [Uint8Array, Uint8Array[], number] {\n    // collapse chunks that share the same underlying ArrayBuffer and whose byte ranges overlap,\n    // to avoid unnecessarily copying the bytes to do this buffer join. This is a common case during\n    // streaming, where we may be reading partial byte ranges out of the same underlying ArrayBuffer\n    let result = collapseContiguousByteRanges(chunks);\n    let byteLength = result.reduce((x, b) => x + b.byteLength, 0);\n    let source: Uint8Array, sliced: Uint8Array, buffer: Uint8Array | void;\n    let offset = 0, index = -1, length = Math.min(size || Infinity, byteLength);\n    for (let n = result.length; ++index < n;) {\n        source = result[index];\n        sliced = source.subarray(0, Math.min(source.length, length - offset));\n        if (length <= (offset + sliced.length)) {\n            if (sliced.length < source.length) {\n                result[index] = source.subarray(sliced.length);\n            } else if (sliced.length === source.length) { index++; }\n            buffer ? memcpy(buffer, sliced, offset) : (buffer = sliced);\n            break;\n        }\n        memcpy(buffer || (buffer = new Uint8Array(length)), sliced, offset);\n        offset += sliced.length;\n    }\n    return [buffer || new Uint8Array(0), result.slice(index), byteLength - (buffer ? buffer.byteLength : 0)];\n}\n\n/** @ignore */\nexport type ArrayBufferViewInput = ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined  |\n                    IteratorResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> |\n          ReadableStreamReadResult<ArrayBufferView | ArrayBufferLike | ArrayBufferView | Iterable<number> | ArrayLike<number> | ByteBuffer | string | null | undefined> ;\n\n/** @ignore */\nexport function toArrayBufferView<T extends TypedArray>(ArrayBufferViewCtor: TypedArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView<T extends BigIntArray>(ArrayBufferViewCtor: BigIntArrayConstructor<T>, input: ArrayBufferViewInput): T;\nexport function toArrayBufferView(ArrayBufferViewCtor: any, input: ArrayBufferViewInput) {\n\n    let value: any = isIteratorResult(input) ? input.value : input;\n\n    if (value instanceof ArrayBufferViewCtor) {\n        if (ArrayBufferViewCtor === Uint8Array) {\n            // Node's `Buffer` class passes the `instanceof Uint8Array` check, but we need\n            // a real Uint8Array, since Buffer#slice isn't the same as Uint8Array#slice :/\n            return new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength);\n        }\n        return value;\n    }\n    if (!value) { return new ArrayBufferViewCtor(0); }\n    if (typeof value === 'string') { value = encodeUtf8(value); }\n    if (value instanceof ArrayBuffer) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof SharedArrayBuf) { return new ArrayBufferViewCtor(value); }\n    if (value instanceof ByteBuffer) { return toArrayBufferView(ArrayBufferViewCtor, value.bytes()); }\n    return !ArrayBuffer.isView(value) ? ArrayBufferViewCtor.from(value) : value.byteLength <= 0 ? new ArrayBufferViewCtor(0)\n        : new ArrayBufferViewCtor(value.buffer, value.byteOffset, value.byteLength / ArrayBufferViewCtor.BYTES_PER_ELEMENT);\n}\n\n/** @ignore */ export const toInt8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int8Array, input);\n/** @ignore */ export const toInt16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int16Array, input);\n/** @ignore */ export const toInt32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Int32Array, input);\n/** @ignore */ export const toBigInt64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigInt64Array, input);\n/** @ignore */ export const toUint8Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8Array, input);\n/** @ignore */ export const toUint16Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint16Array, input);\n/** @ignore */ export const toUint32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Uint32Array, input);\n/** @ignore */ export const toBigUint64Array = (input: ArrayBufferViewInput) => toArrayBufferView(BigUint64Array, input);\n/** @ignore */ export const toFloat32Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float32Array, input);\n/** @ignore */ export const toFloat64Array = (input: ArrayBufferViewInput) => toArrayBufferView(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArray = (input: ArrayBufferViewInput) => toArrayBufferView(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewIteratorInput = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nexport function* toArrayBufferViewIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewIteratorInput) {\n\n    const wrap = function*<T>(x: T) { yield x; };\n    const buffers: Iterable<ArrayBufferViewInput> =\n                   (typeof source === 'string') ? wrap(source)\n                 : (ArrayBuffer.isView(source)) ? wrap(source)\n              : (source instanceof ArrayBuffer) ? wrap(source)\n           : (source instanceof SharedArrayBuf) ? wrap(source)\n    : !isIterable<ArrayBufferViewInput>(source) ? wrap(source) : source;\n\n    yield* pump((function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.iterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayIterator = (input: ArrayBufferViewIteratorInput) => toArrayBufferViewIterator(Uint8ClampedArray, input);\n\n/** @ignore */\ntype ArrayBufferViewAsyncIteratorInput = AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput> | PromiseLike<ArrayBufferViewInput> | ArrayBufferViewInput;\n\n/** @ignore */\nexport async function* toArrayBufferViewAsyncIterator<T extends TypedArray>(ArrayCtor: TypedArrayConstructor<T>, source: ArrayBufferViewAsyncIteratorInput): AsyncIterableIterator<T> {\n\n    // if a Promise, unwrap the Promise and iterate the resolved value\n    if (isPromise<ArrayBufferViewInput>(source)) {\n        return yield* toArrayBufferViewAsyncIterator(ArrayCtor, await source);\n    }\n\n    const wrap = async function*<T>(x: T) { yield await x; };\n    const emit = async function* <T extends Iterable<any>>(source: T) {\n        yield* pump((function*(it: Iterator<any>) {\n            let r: IteratorResult<any> = <any> null;\n            do {\n                r = it.next(yield r && r.value);\n            } while (!r.done);\n        })(source[Symbol.iterator]()));\n    };\n\n    const buffers: AsyncIterable<ArrayBufferViewInput> =\n                        (typeof source === 'string') ? wrap(source) // if string, wrap in an AsyncIterableIterator\n                      : (ArrayBuffer.isView(source)) ? wrap(source) // if TypedArray, wrap in an AsyncIterableIterator\n                   : (source instanceof ArrayBuffer) ? wrap(source) // if ArrayBuffer, wrap in an AsyncIterableIterator\n                : (source instanceof SharedArrayBuf) ? wrap(source) // if SharedArrayBuffer, wrap in an AsyncIterableIterator\n          : isIterable<ArrayBufferViewInput>(source) ? emit(source) // If Iterable, wrap in an AsyncIterableIterator and compose the `next` values\n    : !isAsyncIterable<ArrayBufferViewInput>(source) ? wrap(source) // If not an AsyncIterable, treat as a sentinel and wrap in an AsyncIterableIterator\n                                                     : source; // otherwise if AsyncIterable, use it\n\n    yield* pump((async function* (it) {\n        let r: IteratorResult<any> = <any> null;\n        do {\n            r = await it.next(yield toArrayBufferView(ArrayCtor, r));\n        } while (!r.done);\n    })(buffers[Symbol.asyncIterator]()));\n}\n\n/** @ignore */ export const toInt8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int8Array, input);\n/** @ignore */ export const toInt16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int16Array, input);\n/** @ignore */ export const toInt32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Int32Array, input);\n/** @ignore */ export const toUint8ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8Array, input);\n/** @ignore */ export const toUint16ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint16Array, input);\n/** @ignore */ export const toUint32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint32Array, input);\n/** @ignore */ export const toFloat32ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float32Array, input);\n/** @ignore */ export const toFloat64ArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Float64Array, input);\n/** @ignore */ export const toUint8ClampedArrayAsyncIterator = (input: ArrayBufferViewAsyncIteratorInput) => toArrayBufferViewAsyncIterator(Uint8ClampedArray, input);\n\n/** @ignore */\nexport function rebaseValueOffsets(offset: number, length: number, valueOffsets: Int32Array) {\n    // If we have a non-zero offset, create a new offsets array with the values\n    // shifted by the start offset, such that the new start offset is 0\n    if (offset !== 0) {\n        valueOffsets = valueOffsets.slice(0, length + 1);\n        for (let i = -1; ++i <= length;) {\n            valueOffsets[i] += offset;\n        }\n    }\n    return valueOffsets;\n}\n\n/** @ignore */\nexport function compareArrayLike<T extends ArrayLike<any>>(a: T, b: T) {\n    let i = 0, n = a.length;\n    if (n !== b.length) { return false; }\n    if (n > 0) {\n        do { if (a[i] !== b[i]) { return false; } } while (++i < n);\n    }\n    return true;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport {\n    toUint8Array,\n    joinUint8Arrays,\n    ArrayBufferViewInput,\n    toUint8ArrayIterator,\n    toUint8ArrayAsyncIterator\n} from '../util/buffer';\n\nimport { ReadableDOMStreamOptions } from './interfaces';\n\n/** @ignore */\nexport default {\n    fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n        return pump(fromIterable<T>(source));\n    },\n    fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromAsyncIterable<T>(source));\n    },\n    fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n        return pump(fromDOMStream<T>(source));\n    },\n    fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n        return pump(fromNodeStream(stream));\n    },\n    // @ts-ignore\n    toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n        throw new Error(`\"toDOMStream\" not available in this environment`);\n    },\n    // @ts-ignore\n    toNodeStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: import('stream').ReadableOptions): import('stream').Readable {\n        throw new Error(`\"toNodeStream\" not available in this environment`);\n    },\n};\n\n/** @ignore */\nconst pump = <T extends Iterator<any> | AsyncIterator<any>>(iterator: T) => { iterator.next(); return iterator; };\n\n/** @ignore */\nfunction* fromIterable<T extends ArrayBufferViewInput>(source: Iterable<T> | T): IterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source Iterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayIterator(source)[Symbol.iterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength) ?\n                it.next(undefined) : it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (it.return());\n    }\n}\n\n/** @ignore */\nasync function* fromAsyncIterable<T extends ArrayBufferViewInput>(source: AsyncIterable<T> | PromiseLike<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done: boolean, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before creating the source AsyncIterator\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the iterator\n    let it = toUint8ArrayAsyncIterator(source)[Symbol.asyncIterator]();\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it.next(undefined)\n                : await it.next(size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(buffer);\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (typeof it.throw === 'function') && (await it.throw(e));\n    } finally {\n        (threw === false) && (typeof it.return === 'function') && (await it.return());\n    }\n}\n\n// All this manual Uint8Array chunk management can be avoided if/when engines\n// add support for ArrayBuffer.transfer() or ArrayBuffer.prototype.realloc():\n// https://github.com/domenic/proposal-arraybuffer-transfer\n/** @ignore */\nasync function* fromDOMStream<T extends ArrayBufferViewInput>(source: ReadableStream<T>): AsyncIterableIterator<Uint8Array> {\n\n    let done = false, threw = false;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we establish the ReadableStream lock\n    ({ cmd, size } = yield <any> null);\n\n    // initialize the reader and lock the stream\n    let it = new AdaptiveByteReader(source);\n\n    try {\n        do {\n            // read the next value\n            ({ done, value: buffer } = isNaN(size - bufferLength)\n                ? await it['read'](undefined)\n                : await it['read'](size - bufferLength));\n            // if chunk is not null or empty, push it onto the queue\n            if (!done && buffer.byteLength > 0) {\n                buffers.push(toUint8Array(buffer));\n                bufferLength += buffer.byteLength;\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } catch (e) {\n        (threw = true) && (await it['cancel'](e));\n    } finally {\n        (threw === false) ? (await it['cancel']())\n            : source['locked'] && it.releaseLock();\n    }\n}\n\n/** @ignore */\nclass AdaptiveByteReader<T extends ArrayBufferViewInput> {\n\n    private supportsBYOB: boolean;\n    private byobReader: ReadableStreamBYOBReader | null = null;\n    private defaultReader: ReadableStreamDefaultReader<T> | null = null;\n    private reader: ReadableStreamBYOBReader | ReadableStreamDefaultReader<T> | null;\n\n    constructor(private source: ReadableStream<T>) {\n        try {\n            this.supportsBYOB = !!(this.reader = this.getBYOBReader());\n        } catch (e) {\n            this.supportsBYOB = !!!(this.reader = this.getDefaultReader());\n        }\n    }\n\n    get closed(): Promise<void> {\n        return this.reader ? this.reader['closed'].catch(() => {}) : Promise.resolve();\n    }\n\n    releaseLock(): void {\n        if (this.reader) {\n            this.reader.releaseLock();\n        }\n        this.reader = this.byobReader = this.defaultReader = null;\n    }\n\n    async cancel(reason?: any): Promise<void> {\n        const { reader, source } = this;\n        reader && (await reader['cancel'](reason).catch(() => {}));\n        source && (source['locked'] && this.releaseLock());\n    }\n\n    async read(size?: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n        if (size === 0) {\n            return { done: this.reader == null, value: new Uint8Array(0) };\n        }\n        const result = !this.supportsBYOB || typeof size !== 'number'\n            ? await this.getDefaultReader().read()\n            : await this.readFromBYOBReader(size);\n        !result.done && (result.value = toUint8Array(result as ReadableStreamReadResult<Uint8Array>));\n        return result as ReadableStreamReadResult<Uint8Array>;\n    }\n\n    private getDefaultReader() {\n        if (this.byobReader) { this.releaseLock(); }\n        if (!this.defaultReader) {\n            this.defaultReader = this.source['getReader']();\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.defaultReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.defaultReader);\n    }\n\n    private getBYOBReader() {\n        if (this.defaultReader) { this.releaseLock(); }\n        if (!this.byobReader) {\n            this.byobReader = this.source['getReader']({ mode: 'byob' });\n            // We have to catch and swallow errors here to avoid uncaught promise rejection exceptions\n            // that seem to be raised when we call `releaseLock()` on this reader. I'm still mystified\n            // about why these errors are raised, but I'm sure there's some important spec reason that\n            // I haven't considered. I hate to employ such an anti-pattern here, but it seems like the\n            // only solution in this case :/\n            this.byobReader['closed'].catch(() => {});\n        }\n        return (this.reader = this.byobReader);\n    }\n\n    // This strategy plucked from the example in the streams spec:\n    // https://streams.spec.whatwg.org/#example-manual-read-bytes\n    private async readFromBYOBReader(size: number) {\n        return await readInto(this.getBYOBReader(), new ArrayBuffer(size), 0, size);\n    }\n}\n\n/** @ignore */\nasync function readInto(reader: ReadableStreamBYOBReader, buffer: ArrayBufferLike, offset: number, size: number): Promise<ReadableStreamReadResult<Uint8Array>> {\n    if (offset >= size) {\n        return { done: false, value: new Uint8Array(buffer, 0, size) };\n    }\n    const { done, value } = await reader.read(new Uint8Array(buffer, offset, size - offset));\n    if (((offset += value.byteLength) < size) && !done) {\n        return await readInto(reader, value.buffer, offset, size);\n    }\n    return { done, value: new Uint8Array(value.buffer, 0, offset) };\n}\n\n/** @ignore */\ntype EventName = 'end' | 'error' | 'readable';\n/** @ignore */\ntype Event = [EventName, (_: any) => void, Promise<[EventName, Error | null]>];\n/** @ignore */\nconst onEvent = <T extends string>(stream: NodeJS.ReadableStream, event: T) => {\n    let handler = (_: any) => resolve([event, _]);\n    let resolve: (value?: [T, any] | PromiseLike<[T, any]>) => void;\n    return [event, handler, new Promise<[T, any]>(\n        (r) => (resolve = r) && stream['once'](event, handler)\n    )] as Event;\n};\n\n/** @ignore */\nasync function* fromNodeStream(stream: NodeJS.ReadableStream): AsyncIterableIterator<Uint8Array> {\n\n    let events: Event[] = [];\n    let event: EventName = 'error';\n    let done = false, err: Error | null = null;\n    let cmd: 'peek' | 'read', size: number, bufferLength = 0;\n    let buffers: Uint8Array[] = [], buffer: Uint8Array | Buffer | string;\n\n    function byteRange() {\n        if (cmd === 'peek') {\n            return joinUint8Arrays(buffers, size)[0];\n        }\n        [buffer, buffers, bufferLength] = joinUint8Arrays(buffers, size);\n        return buffer;\n    }\n\n    // Yield so the caller can inject the read command before we\n    // add the listener for the source stream's 'readable' event.\n    ({ cmd, size } = yield <any> null);\n\n    // ignore stdin if it's a TTY\n    if ((stream as any)['isTTY']) { return yield new Uint8Array(0); }\n\n    try {\n        // initialize the stream event handlers\n        events[0] = onEvent(stream, 'end');\n        events[1] = onEvent(stream, 'error');\n\n        do {\n            events[2] = onEvent(stream, 'readable');\n\n            // wait on the first message event from the stream\n            [event, err] = await Promise.race(events.map((x) => x[2]));\n\n            // if the stream emitted an Error, rethrow it\n            if (event === 'error') { break; }\n            if (!(done = event === 'end')) {\n                // If the size is NaN, request to read everything in the stream's internal buffer\n                if (!isFinite(size - bufferLength)) {\n                    buffer = toUint8Array(stream['read'](undefined));\n                } else {\n                    buffer = toUint8Array(stream['read'](size - bufferLength));\n                    // If the byteLength is 0, then the requested amount is more than the stream has\n                    // in its internal buffer. In this case the stream needs a \"kick\" to tell it to\n                    // continue emitting readable events, so request to read everything the stream\n                    // has in its internal buffer right now.\n                    if (buffer.byteLength < (size - bufferLength)) {\n                        buffer = toUint8Array(stream['read'](undefined));\n                    }\n                }\n                // if chunk is not null or empty, push it onto the queue\n                if (buffer.byteLength > 0) {\n                    buffers.push(buffer);\n                    bufferLength += buffer.byteLength;\n                }\n            }\n            // If we have enough bytes in our buffer, yield chunks until we don't\n            if (done || size <= bufferLength) {\n                do {\n                    ({ cmd, size } = yield byteRange());\n                } while (size < bufferLength);\n            }\n        } while (!done);\n    } finally {\n        await cleanup(events, event === 'error' ? err : null);\n    }\n\n    function cleanup<T extends Error | null | void>(events: Event[], err?: T) {\n        buffer = buffers = <any> null;\n        return new Promise<T>(async (resolve, reject) => {\n            for (const [evt, fn] of events) {\n                stream['off'](evt, fn);\n            }\n            try {\n                // Some stream implementations don't call the destroy callback,\n                // because it's really a node-internal API. Just calling `destroy`\n                // here should be enough to conform to the ReadableStream contract\n                const destroy = (stream as any)['destroy'];\n                destroy && destroy.call(stream, err);\n                err = undefined;\n            } catch (e) { err = e || err; } finally {\n                err != null ? reject(err) : resolve();\n            }\n        });\n    }\n}\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { DataType } from './type';\nimport { Chunked } from './vector/chunked';\n\n/** @ignore */\nexport interface Clonable<R extends AbstractVector> {\n    clone(...args: any[]): R;\n}\n\n/** @ignore */\nexport interface Sliceable<R extends AbstractVector> {\n    slice(begin?: number, end?: number): R;\n}\n\n/** @ignore */\nexport interface Applicative<T extends DataType, R extends Chunked> {\n    concat(...others: Vector<T>[]): R;\n    readonly [Symbol.isConcatSpreadable]: boolean;\n}\n\nexport interface AbstractVector<T extends DataType = any>\n    extends Clonable<Vector<T>>,\n            Sliceable<Vector<T>>,\n            Applicative<T, Chunked<T>> {\n\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\nexport abstract class AbstractVector<T extends DataType = any> implements Iterable<T['TValue'] | null> {\n\n    public abstract readonly data: Data<T>;\n    public abstract readonly type: T;\n    public abstract readonly typeId: T['TType'];\n    public abstract readonly length: number;\n    public abstract readonly stride: number;\n    public abstract readonly nullCount: number;\n    public abstract readonly byteLength: number;\n    public abstract readonly numChildren: number;\n\n    public abstract readonly ArrayType: T['ArrayType'];\n\n    public abstract isValid(index: number): boolean;\n    public abstract get(index: number): T['TValue'] | null;\n    public abstract set(index: number, value: T['TValue'] | null): void;\n    public abstract indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n    public abstract [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n\n    public abstract toArray(): T['TArray'];\n    public abstract getChildAt<R extends DataType = any>(index: number): Vector<R> | null;\n}\n\nexport { AbstractVector as Vector };\n","/* tslint:disable:class-name */\n\n// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MetadataVersion {\n        /**\n         * 0.1.0\n         */\n        V1 = 0,\n\n        /**\n         * 0.2.0\n         */\n        V2 = 1,\n\n        /**\n         * 0.3.0 -> 0.7.1\n         */\n        V3 = 2,\n\n        /**\n         * >= 0.8.0\n         */\n        V4 = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum UnionMode {\n        Sparse = 0,\n        Dense = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Precision {\n        HALF = 0,\n        SINGLE = 1,\n        DOUBLE = 2\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum DateUnit {\n        DAY = 0,\n        MILLISECOND = 1\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum TimeUnit {\n        SECOND = 0,\n        MILLISECOND = 1,\n        MICROSECOND = 2,\n        NANOSECOND = 3\n    }\n}\n\n/**\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum IntervalUnit {\n        YEAR_MONTH = 0,\n        DAY_TIME = 1\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Top-level Type value, enabling extensible type-specific metadata. We can\n * add new logical types to Type without breaking backwards compatibility\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Type {\n        NONE = 0,\n        Null = 1,\n        Int = 2,\n        FloatingPoint = 3,\n        Binary = 4,\n        Utf8 = 5,\n        Bool = 6,\n        Decimal = 7,\n        Date = 8,\n        Time = 9,\n        Timestamp = 10,\n        Interval = 11,\n        List = 12,\n        Struct_ = 13,\n        Union = 14,\n        FixedSizeBinary = 15,\n        FixedSizeList = 16,\n        Map = 17,\n        Duration = 18,\n        LargeBinary = 19,\n        LargeUtf8 = 20,\n        LargeList = 21\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Endianness of the platform producing the data\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum Endianness {\n        Little = 0,\n        Big = 1\n    }\n}\n\n/**\n * These are stored in the flatbuffer in the Type union below\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Null {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Null\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Null {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Null= obj\n         * @returns Null\n         */\n        static getRootAsNull(bb: flatbuffers.ByteBuffer, obj?: Null): Null {\n            return (obj || new Null).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startNull(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createNull(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Null.startNull(builder);\n            return Null.endNull(builder);\n        }\n    }\n}\n/**\n * A Struct_ in the flatbuffer metadata is the same as an Arrow Struct\n * (according to the physical memory layout). We used Struct_ here as\n * Struct is a reserved word in Flatbuffers\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Struct_ {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Struct_\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Struct_ {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Struct_= obj\n         * @returns Struct_\n         */\n        static getRootAsStruct_(bb: flatbuffers.ByteBuffer, obj?: Struct_): Struct_ {\n            return (obj || new Struct_).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startStruct_(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createStruct_(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Struct_.startStruct_(builder);\n            return Struct_.endStruct_(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class List {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns List\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): List {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param List= obj\n         * @returns List\n         */\n        static getRootAsList(bb: flatbuffers.ByteBuffer, obj?: List): List {\n            return (obj || new List).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            List.startList(builder);\n            return List.endList(builder);\n        }\n    }\n}\n/**\n * Same as List, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeList= obj\n         * @returns LargeList\n         */\n        static getRootAsLargeList(bb: flatbuffers.ByteBuffer, obj?: LargeList): LargeList {\n            return (obj || new LargeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeList(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeList.startLargeList(builder);\n            return LargeList.endLargeList(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeList {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeList\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeList {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeList= obj\n         * @returns FixedSizeList\n         */\n        static getRootAsFixedSizeList(bb: flatbuffers.ByteBuffer, obj?: FixedSizeList): FixedSizeList {\n            return (obj || new FixedSizeList).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of list items per value\n         *\n         * @returns number\n         */\n        listSize(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeList(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number listSize\n         */\n        static addListSize(builder: flatbuffers.Builder, listSize: number) {\n            builder.addFieldInt32(0, listSize, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeList(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeList(builder: flatbuffers.Builder, listSize: number): flatbuffers.Offset {\n            FixedSizeList.startFixedSizeList(builder);\n            FixedSizeList.addListSize(builder, listSize);\n            return FixedSizeList.endFixedSizeList(builder);\n        }\n    }\n}\n/**\n * A Map is a logical nested type that is represented as\n *\n * List<entry: Struct<key: K, value: V>>\n *\n * In this layout, the keys and values are each respectively contiguous. We do\n * not constrain the key and value types, so the application is responsible\n * for ensuring that the keys are hashable and unique. Whether the keys are sorted\n * may be set in the metadata for this field\n *\n * In a Field with Map type, the Field has a child Struct field, which then\n * has two children: key type and the second the value type. The names of the\n * child fields may be respectively \"entry\", \"key\", and \"value\", but this is\n * not enforced\n *\n * Map\n *   - child[0] entry: Struct\n *     - child[0] key: K\n *     - child[1] value: V\n *\n * Neither the \"entry\" field nor the \"key\" field may be nullable.\n *\n * The metadata is structured so that Arrow systems without special handling\n * for Map can make Map an alias for List. The \"layout\" attribute for the Map\n * field must have the same contents as a List.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Map {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Map\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Map {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Map= obj\n         * @returns Map\n         */\n        static getRootAsMap(bb: flatbuffers.ByteBuffer, obj?: Map): Map {\n            return (obj || new Map).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Set to true if the keys within each value are sorted\n         *\n         * @returns boolean\n         */\n        keysSorted(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMap(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean keysSorted\n         */\n        static addKeysSorted(builder: flatbuffers.Builder, keysSorted: boolean) {\n            builder.addFieldInt8(0, +keysSorted, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMap(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createMap(builder: flatbuffers.Builder, keysSorted: boolean): flatbuffers.Offset {\n            Map.startMap(builder);\n            Map.addKeysSorted(builder, keysSorted);\n            return Map.endMap(builder);\n        }\n    }\n}\n/**\n * A union is a complex type with children in Field\n * By default ids in the type vector refer to the offsets in the children\n * optionally typeIds provides an indirection between the child offset and the type id\n * for each child typeIds[offset] is the id used in the type vector\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Union {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Union\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Union {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Union= obj\n         * @returns Union\n         */\n        static getRootAsUnion(bb: flatbuffers.ByteBuffer, obj?: Union): Union {\n            return (obj || new Union).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.UnionMode\n         */\n        mode(): org.apache.arrow.flatbuf.UnionMode {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.UnionMode.Sparse;\n        }\n\n        /**\n         * @param number index\n         * @returns number\n         */\n        typeIds(index: number): number | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n        }\n\n        /**\n         * @returns number\n         */\n        typeIdsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns Int32Array\n         */\n        typeIdsArray(): Int32Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? new Int32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUnion(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.UnionMode mode\n         */\n        static addMode(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode) {\n            builder.addFieldInt16(0, mode, org.apache.arrow.flatbuf.UnionMode.Sparse);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeIdsOffset\n         */\n        static addTypeIds(builder: flatbuffers.Builder, typeIdsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, typeIdsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createTypeIdsVector(builder: flatbuffers.Builder, data: number[] | Int32Array): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addInt32(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startTypeIdsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUnion(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUnion(builder: flatbuffers.Builder, mode: org.apache.arrow.flatbuf.UnionMode, typeIdsOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Union.startUnion(builder);\n            Union.addMode(builder, mode);\n            Union.addTypeIds(builder, typeIdsOffset);\n            return Union.endUnion(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Int {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Int\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Int {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Int= obj\n         * @returns Int\n         */\n        static getRootAsInt(bb: flatbuffers.ByteBuffer, obj?: Int): Int {\n            return (obj || new Int).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @returns boolean\n         */\n        isSigned(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInt(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(0, bitWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isSigned\n         */\n        static addIsSigned(builder: flatbuffers.Builder, isSigned: boolean) {\n            builder.addFieldInt8(1, +isSigned, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInt(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInt(builder: flatbuffers.Builder, bitWidth: number, isSigned: boolean): flatbuffers.Offset {\n            Int.startInt(builder);\n            Int.addBitWidth(builder, bitWidth);\n            Int.addIsSigned(builder, isSigned);\n            return Int.endInt(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FloatingPoint {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FloatingPoint\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FloatingPoint {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FloatingPoint= obj\n         * @returns FloatingPoint\n         */\n        static getRootAsFloatingPoint(bb: flatbuffers.ByteBuffer, obj?: FloatingPoint): FloatingPoint {\n            return (obj || new FloatingPoint).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Precision\n         */\n        precision(): org.apache.arrow.flatbuf.Precision {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Precision.HALF;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFloatingPoint(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Precision precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision) {\n            builder.addFieldInt16(0, precision, org.apache.arrow.flatbuf.Precision.HALF);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFloatingPoint(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFloatingPoint(builder: flatbuffers.Builder, precision: org.apache.arrow.flatbuf.Precision): flatbuffers.Offset {\n            FloatingPoint.startFloatingPoint(builder);\n            FloatingPoint.addPrecision(builder, precision);\n            return FloatingPoint.endFloatingPoint(builder);\n        }\n    }\n}\n/**\n * Unicode with UTF-8 encoding\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Utf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Utf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Utf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Utf8= obj\n         * @returns Utf8\n         */\n        static getRootAsUtf8(bb: flatbuffers.ByteBuffer, obj?: Utf8): Utf8 {\n            return (obj || new Utf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Utf8.startUtf8(builder);\n            return Utf8.endUtf8(builder);\n        }\n    }\n}\n/**\n * Opaque binary data\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Binary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Binary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Binary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Binary= obj\n         * @returns Binary\n         */\n        static getRootAsBinary(bb: flatbuffers.ByteBuffer, obj?: Binary): Binary {\n            return (obj || new Binary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Binary.startBinary(builder);\n            return Binary.endBinary(builder);\n        }\n    }\n}\n/**\n * Same as Utf8, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeUtf8 {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeUtf8\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeUtf8 {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeUtf8= obj\n         * @returns LargeUtf8\n         */\n        static getRootAsLargeUtf8(bb: flatbuffers.ByteBuffer, obj?: LargeUtf8): LargeUtf8 {\n            return (obj || new LargeUtf8).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeUtf8(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeUtf8(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeUtf8.startLargeUtf8(builder);\n            return LargeUtf8.endLargeUtf8(builder);\n        }\n    }\n}\n/**\n * Same as Binary, but with 64-bit offsets, allowing to represent\n * extremely large data values.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class LargeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LargeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): LargeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LargeBinary= obj\n         * @returns LargeBinary\n         */\n        static getRootAsLargeBinary(bb: flatbuffers.ByteBuffer, obj?: LargeBinary): LargeBinary {\n            return (obj || new LargeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLargeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createLargeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            LargeBinary.startLargeBinary(builder);\n            return LargeBinary.endLargeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FixedSizeBinary {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FixedSizeBinary\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FixedSizeBinary {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param FixedSizeBinary= obj\n         * @returns FixedSizeBinary\n         */\n        static getRootAsFixedSizeBinary(bb: flatbuffers.ByteBuffer, obj?: FixedSizeBinary): FixedSizeBinary {\n            return (obj || new FixedSizeBinary).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Number of bytes per value\n         *\n         * @returns number\n         */\n        byteWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFixedSizeBinary(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number byteWidth\n         */\n        static addByteWidth(builder: flatbuffers.Builder, byteWidth: number) {\n            builder.addFieldInt32(0, byteWidth, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFixedSizeBinary(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createFixedSizeBinary(builder: flatbuffers.Builder, byteWidth: number): flatbuffers.Offset {\n            FixedSizeBinary.startFixedSizeBinary(builder);\n            FixedSizeBinary.addByteWidth(builder, byteWidth);\n            return FixedSizeBinary.endFixedSizeBinary(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Bool {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Bool\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Bool {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Bool= obj\n         * @returns Bool\n         */\n        static getRootAsBool(bb: flatbuffers.ByteBuffer, obj?: Bool): Bool {\n            return (obj || new Bool).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBool(builder: flatbuffers.Builder) {\n            builder.startObject(0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createBool(builder: flatbuffers.Builder): flatbuffers.Offset {\n            Bool.startBool(builder);\n            return Bool.endBool(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Decimal {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Decimal\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Decimal {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Decimal= obj\n         * @returns Decimal\n         */\n        static getRootAsDecimal(bb: flatbuffers.ByteBuffer, obj?: Decimal): Decimal {\n            return (obj || new Decimal).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Total number of decimal digits\n         *\n         * @returns number\n         */\n        precision(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Number of digits after the decimal point \".\"\n         *\n         * @returns number\n         */\n        scale(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDecimal(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number precision\n         */\n        static addPrecision(builder: flatbuffers.Builder, precision: number) {\n            builder.addFieldInt32(0, precision, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number scale\n         */\n        static addScale(builder: flatbuffers.Builder, scale: number) {\n            builder.addFieldInt32(1, scale, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDecimal(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDecimal(builder: flatbuffers.Builder, precision: number, scale: number): flatbuffers.Offset {\n            Decimal.startDecimal(builder);\n            Decimal.addPrecision(builder, precision);\n            Decimal.addScale(builder, scale);\n            return Decimal.endDecimal(builder);\n        }\n    }\n}\n/**\n * Date is either a 32-bit or 64-bit type representing elapsed time since UNIX\n * epoch (1970-01-01), stored in either of two units:\n *\n * * Milliseconds (64 bits) indicating UNIX time elapsed since the epoch (no\n *   leap seconds), where the values are evenly divisible by 86400000\n * * Days (32 bits) since the UNIX epoch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Date {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Date\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Date {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Date= obj\n         * @returns Date\n         */\n        static getRootAsDate(bb: flatbuffers.ByteBuffer, obj?: Date): Date {\n            return (obj || new Date).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.DateUnit\n         */\n        unit(): org.apache.arrow.flatbuf.DateUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.DateUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDate(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.DateUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.DateUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDate(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDate(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.DateUnit): flatbuffers.Offset {\n            Date.startDate(builder);\n            Date.addUnit(builder, unit);\n            return Date.endDate(builder);\n        }\n    }\n}\n/**\n * Time type. The physical storage type depends on the unit\n * - SECOND and MILLISECOND: 32 bits\n * - MICROSECOND and NANOSECOND: 64 bits\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Time {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Time\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Time {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Time= obj\n         * @returns Time\n         */\n        static getRootAsTime(bb: flatbuffers.ByteBuffer, obj?: Time): Time {\n            return (obj || new Time).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @returns number\n         */\n        bitWidth(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.readInt32(this.bb_pos + offset) : 32;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTime(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number bitWidth\n         */\n        static addBitWidth(builder: flatbuffers.Builder, bitWidth: number) {\n            builder.addFieldInt32(1, bitWidth, 32);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTime(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTime(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, bitWidth: number): flatbuffers.Offset {\n            Time.startTime(builder);\n            Time.addUnit(builder, unit);\n            Time.addBitWidth(builder, bitWidth);\n            return Time.endTime(builder);\n        }\n    }\n}\n/**\n * Time elapsed from the Unix epoch, 00:00:00.000 on 1 January 1970, excluding\n * leap seconds, as a 64-bit integer. Note that UNIX time does not include\n * leap seconds.\n *\n * The Timestamp metadata supports both \"time zone naive\" and \"time zone\n * aware\" timestamps. Read about the timezone attribute for more detail\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Timestamp {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Timestamp\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Timestamp {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Timestamp= obj\n         * @returns Timestamp\n         */\n        static getRootAsTimestamp(bb: flatbuffers.ByteBuffer, obj?: Timestamp): Timestamp {\n            return (obj || new Timestamp).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.SECOND;\n        }\n\n        /**\n         * The time zone is a string indicating the name of a time zone, one of:\n         *\n         * * As used in the Olson time zone database (the \"tz database\" or\n         *   \"tzdata\"), such as \"America/New_York\"\n         * * An absolute time zone offset of the form +XX:XX or -XX:XX, such as +07:30\n         *\n         * Whether a timezone string is present indicates different semantics about\n         * the data:\n         *\n         * * If the time zone is null or equal to an empty string, the data is \"time\n         *   zone naive\" and shall be displayed *as is* to the user, not localized\n         *   to the locale of the user. This data can be though of as UTC but\n         *   without having \"UTC\" as the time zone, it is not considered to be\n         *   localized to any time zone\n         *\n         * * If the time zone is set to a valid value, values can be displayed as\n         *   \"localized\" to that time zone, even though the underlying 64-bit\n         *   integers are identical to the same data stored in UTC. Converting\n         *   between time zones is a metadata-only operation and does not change the\n         *   underlying values\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        timezone(): string | null;\n        timezone(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        timezone(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTimestamp(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.SECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset timezoneOffset\n         */\n        static addTimezone(builder: flatbuffers.Builder, timezoneOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, timezoneOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTimestamp(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createTimestamp(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit, timezoneOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Timestamp.startTimestamp(builder);\n            Timestamp.addUnit(builder, unit);\n            Timestamp.addTimezone(builder, timezoneOffset);\n            return Timestamp.endTimestamp(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Interval {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Interval\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Interval {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Interval= obj\n         * @returns Interval\n         */\n        static getRootAsInterval(bb: flatbuffers.ByteBuffer, obj?: Interval): Interval {\n            return (obj || new Interval).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.IntervalUnit\n         */\n        unit(): org.apache.arrow.flatbuf.IntervalUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startInterval(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.IntervalUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.IntervalUnit.YEAR_MONTH);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endInterval(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createInterval(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.IntervalUnit): flatbuffers.Offset {\n            Interval.startInterval(builder);\n            Interval.addUnit(builder, unit);\n            return Interval.endInterval(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Duration {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Duration\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Duration {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Duration= obj\n         * @returns Duration\n         */\n        static getRootAsDuration(bb: flatbuffers.ByteBuffer, obj?: Duration): Duration {\n            return (obj || new Duration).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.TimeUnit\n         */\n        unit(): org.apache.arrow.flatbuf.TimeUnit {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.TimeUnit.MILLISECOND;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDuration(builder: flatbuffers.Builder) {\n            builder.startObject(1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.TimeUnit unit\n         */\n        static addUnit(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit) {\n            builder.addFieldInt16(0, unit, org.apache.arrow.flatbuf.TimeUnit.MILLISECOND);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDuration(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDuration(builder: flatbuffers.Builder, unit: org.apache.arrow.flatbuf.TimeUnit): flatbuffers.Offset {\n            Duration.startDuration(builder);\n            Duration.addUnit(builder, unit);\n            return Duration.endDuration(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class KeyValue {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns KeyValue\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): KeyValue {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param KeyValue= obj\n         * @returns KeyValue\n         */\n        static getRootAsKeyValue(bb: flatbuffers.ByteBuffer, obj?: KeyValue): KeyValue {\n            return (obj || new KeyValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        key(): string | null;\n        key(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        key(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        value(): string | null;\n        value(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        value(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startKeyValue(builder: flatbuffers.Builder) {\n            builder.startObject(2);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset keyOffset\n         */\n        static addKey(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, keyOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset valueOffset\n         */\n        static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, valueOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endKeyValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createKeyValue(builder: flatbuffers.Builder, keyOffset: flatbuffers.Offset, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n            KeyValue.startKeyValue(builder);\n            KeyValue.addKey(builder, keyOffset);\n            KeyValue.addValue(builder, valueOffset);\n            return KeyValue.endKeyValue(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * Dictionary encoding metadata\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryEncoding {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryEncoding\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryEncoding {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryEncoding= obj\n         * @returns DictionaryEncoding\n         */\n        static getRootAsDictionaryEncoding(bb: flatbuffers.ByteBuffer, obj?: DictionaryEncoding): DictionaryEncoding {\n            return (obj || new DictionaryEncoding).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * The known dictionary id in the application where this data is used. In\n         * the file or streaming formats, the dictionary ids are found in the\n         * DictionaryBatch messages\n         *\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * The dictionary indices are constrained to be positive integers. If this\n         * field is null, the indices must be signed int32\n         *\n         * @param org.apache.arrow.flatbuf.Int= obj\n         * @returns org.apache.arrow.flatbuf.Int|null\n         */\n        indexType(obj?: org.apache.arrow.flatbuf.Int): org.apache.arrow.flatbuf.Int | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Int).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * By default, dictionaries are not ordered, or the order does not have\n         * semantic meaning. In some statistical, applications, dictionary-encoding\n         * is used to represent ordered categorical data, and we provide a way to\n         * preserve that metadata here\n         *\n         * @returns boolean\n         */\n        isOrdered(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryEncoding(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset indexTypeOffset\n         */\n        static addIndexType(builder: flatbuffers.Builder, indexTypeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, indexTypeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isOrdered\n         */\n        static addIsOrdered(builder: flatbuffers.Builder, isOrdered: boolean) {\n            builder.addFieldInt8(2, +isOrdered, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryEncoding(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryEncoding(builder: flatbuffers.Builder, id: flatbuffers.Long, indexTypeOffset: flatbuffers.Offset, isOrdered: boolean): flatbuffers.Offset {\n            DictionaryEncoding.startDictionaryEncoding(builder);\n            DictionaryEncoding.addId(builder, id);\n            DictionaryEncoding.addIndexType(builder, indexTypeOffset);\n            DictionaryEncoding.addIsOrdered(builder, isOrdered);\n            return DictionaryEncoding.endDictionaryEncoding(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A field represents a named column in a record / row batch or child of a\n * nested type.\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Field {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Field\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Field {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Field= obj\n         * @returns Field\n         */\n        static getRootAsField(bb: flatbuffers.ByteBuffer, obj?: Field): Field {\n            return (obj || new Field).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * Name is not required, in i.e. a List\n         *\n         * @param flatbuffers.Encoding= optionalEncoding\n         * @returns string|Uint8Array|null\n         */\n        name(): string | null;\n        name(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null;\n        name(optionalEncoding?: any): string | Uint8Array | null {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n\n        /**\n         * Whether or not this field can contain nulls. Should be true in general.\n         *\n         * @returns boolean\n         */\n        nullable(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.Type\n         */\n        typeType(): org.apache.arrow.flatbuf.Type {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Type.NONE;\n        }\n\n        /**\n         * This is the type of the decoded value if the field is dictionary encoded.\n         *\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        type<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * Present only if the field is dictionary encoded.\n         *\n         * @param org.apache.arrow.flatbuf.DictionaryEncoding= obj\n         * @returns org.apache.arrow.flatbuf.DictionaryEncoding|null\n         */\n        dictionary(obj?: org.apache.arrow.flatbuf.DictionaryEncoding): org.apache.arrow.flatbuf.DictionaryEncoding | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new org.apache.arrow.flatbuf.DictionaryEncoding).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * children apply only to nested data types like Struct, List and Union. For\n         * primitive types children will have length 0.\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        children(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        childrenLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 14);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * User-defined metadata\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 16);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startField(builder: flatbuffers.Builder) {\n            builder.startObject(7);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nameOffset\n         */\n        static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(0, nameOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean nullable\n         */\n        static addNullable(builder: flatbuffers.Builder, nullable: boolean) {\n            builder.addFieldInt8(1, +nullable, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Type typeType\n         */\n        static addTypeType(builder: flatbuffers.Builder, typeType: org.apache.arrow.flatbuf.Type) {\n            builder.addFieldInt8(2, typeType, org.apache.arrow.flatbuf.Type.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset typeOffset\n         */\n        static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, typeOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionaryOffset\n         */\n        static addDictionary(builder: flatbuffers.Builder, dictionaryOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, dictionaryOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset childrenOffset\n         */\n        static addChildren(builder: flatbuffers.Builder, childrenOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(5, childrenOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createChildrenVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startChildrenVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(6, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endField(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createField(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, nullable: boolean, typeType: org.apache.arrow.flatbuf.Type, typeOffset: flatbuffers.Offset, dictionaryOffset: flatbuffers.Offset, childrenOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Field.startField(builder);\n            Field.addName(builder, nameOffset);\n            Field.addNullable(builder, nullable);\n            Field.addTypeType(builder, typeType);\n            Field.addType(builder, typeOffset);\n            Field.addDictionary(builder, dictionaryOffset);\n            Field.addChildren(builder, childrenOffset);\n            Field.addCustomMetadata(builder, customMetadataOffset);\n            return Field.endField(builder);\n        }\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Buffer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Buffer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Buffer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The relative offset into the shared memory page where the bytes for this\n         * buffer starts\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The absolute length (in bytes) of the memory buffer. The memory is found\n         * from offset (inclusive) to offset + length (non-inclusive).\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param flatbuffers.Long length\n         * @returns flatbuffers.Offset\n         */\n        static createBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Long, length: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(length);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * ----------------------------------------------------------------------\n * A Schema describes the columns in a row batch\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Schema {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Schema\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Schema {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Schema= obj\n         * @returns Schema\n         */\n        static getRootAsSchema(bb: flatbuffers.ByteBuffer, obj?: Schema): Schema {\n            return (obj || new Schema).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * endianness of the buffer\n         * it is Little Endian by default\n         * if endianness doesn't match the underlying system then the vectors need to be converted\n         *\n         * @returns org.apache.arrow.flatbuf.Endianness\n         */\n        endianness(): org.apache.arrow.flatbuf.Endianness {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : org.apache.arrow.flatbuf.Endianness.Little;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Field= obj\n         * @returns org.apache.arrow.flatbuf.Field\n         */\n        fields(index: number, obj?: org.apache.arrow.flatbuf.Field): org.apache.arrow.flatbuf.Field | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Field).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        fieldsLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: org.apache.arrow.flatbuf.KeyValue): org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startSchema(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.Endianness endianness\n         */\n        static addEndianness(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness) {\n            builder.addFieldInt16(0, endianness, org.apache.arrow.flatbuf.Endianness.Little);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset fieldsOffset\n         */\n        static addFields(builder: flatbuffers.Builder, fieldsOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, fieldsOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createFieldsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startFieldsVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endSchema(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishSchemaBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createSchema(builder: flatbuffers.Builder, endianness: org.apache.arrow.flatbuf.Endianness, fieldsOffset: flatbuffers.Offset, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Schema.startSchema(builder);\n            Schema.addEndianness(builder, endianness);\n            Schema.addFields(builder, fieldsOffset);\n            Schema.addCustomMetadata(builder, customMetadataOffset);\n            return Schema.endSchema(builder);\n        }\n    }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\nexport namespace org.apache.arrow.flatbuf {\n    export import Schema = NS7624605610262437867.org.apache.arrow.flatbuf.Schema;\n}\n/**\n * ----------------------------------------------------------------------\n * The root Message type\n * This union enables us to easily send different message types without\n * redundant storage, and in the future we can easily add new message types.\n *\n * Arrow implementations do not need to implement all of the message types,\n * which may include experimental metadata types. For maximum compatibility,\n * it is best to send data using RecordBatch\n *\n * @enum {number}\n */\nexport namespace org.apache.arrow.flatbuf {\n    export enum MessageHeader {\n        NONE = 0,\n        Schema = 1,\n        DictionaryBatch = 2,\n        RecordBatch = 3,\n        Tensor = 4,\n        SparseTensor = 5\n    }\n}\n\n/**\n * ----------------------------------------------------------------------\n * Data structures for describing a table row batch (a collection of\n * equal-length Arrow arrays)\n * Metadata about a field at some level of a nested type tree (but not\n * its children).\n *\n * For example, a List<Int16> with values [[1, 2, 3], null, [4], [5, 6], null]\n * would have {length: 5, null_count: 2} for its List node, and {length: 6,\n * null_count: 0} for its Int16 node, as separate FieldNode structs\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class FieldNode {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FieldNode\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): FieldNode {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * The number of value slots in the Arrow array at this level of a nested\n         * tree\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * The number of observed nulls. Fields with null_count == 0 may choose not\n         * to write their physical validity bitmap out as a materialized buffer,\n         * instead setting the length of the bitmap buffer to 0.\n         *\n         * @returns flatbuffers.Long\n         */\n        nullCount(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         * @param flatbuffers.Long null_count\n         * @returns flatbuffers.Offset\n         */\n        static createFieldNode(builder: flatbuffers.Builder, length: flatbuffers.Long, null_count: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 16);\n            builder.writeInt64(null_count);\n            builder.writeInt64(length);\n            return builder.offset();\n        }\n\n    }\n}\n/**\n * A data header describing the shared memory layout of a \"record\" or \"row\"\n * batch. Some systems call this a \"row batch\" internally and others a \"record\n * batch\".\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class RecordBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns RecordBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): RecordBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param RecordBatch= obj\n         * @returns RecordBatch\n         */\n        static getRootAsRecordBatch(bb: flatbuffers.ByteBuffer, obj?: RecordBatch): RecordBatch {\n            return (obj || new RecordBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * number of records / rows. The arrays in the batch should all have this\n         * length\n         *\n         * @returns flatbuffers.Long\n         */\n        length(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * Nodes correspond to the pre-ordered flattened logical schema\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.FieldNode= obj\n         * @returns org.apache.arrow.flatbuf.FieldNode\n         */\n        nodes(index: number, obj?: org.apache.arrow.flatbuf.FieldNode): org.apache.arrow.flatbuf.FieldNode | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.FieldNode).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        nodesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * Buffers correspond to the pre-ordered flattened buffer tree\n         *\n         * The number of buffers appended to this list depends on the schema. For\n         * example, most primitive arrays will have 2 buffers, 1 for the validity\n         * bitmap and 1 for the values. For struct arrays, there will only be a\n         * single buffer for the validity (nulls) bitmap\n         *\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Buffer= obj\n         * @returns org.apache.arrow.flatbuf.Buffer\n         */\n        buffers(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Buffer): NS7624605610262437867.org.apache.arrow.flatbuf.Buffer | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Buffer).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        buffersLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startRecordBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long length\n         */\n        static addLength(builder: flatbuffers.Builder, length: flatbuffers.Long) {\n            builder.addFieldInt64(0, length, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset nodesOffset\n         */\n        static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, nodesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset buffersOffset\n         */\n        static addBuffers(builder: flatbuffers.Builder, buffersOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, buffersOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startBuffersVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(16, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endRecordBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createRecordBatch(builder: flatbuffers.Builder, length: flatbuffers.Long, nodesOffset: flatbuffers.Offset, buffersOffset: flatbuffers.Offset): flatbuffers.Offset {\n            RecordBatch.startRecordBatch(builder);\n            RecordBatch.addLength(builder, length);\n            RecordBatch.addNodes(builder, nodesOffset);\n            RecordBatch.addBuffers(builder, buffersOffset);\n            return RecordBatch.endRecordBatch(builder);\n        }\n    }\n}\n/**\n * For sending dictionary encoding information. Any Field can be\n * dictionary-encoded, but in this case none of its children may be\n * dictionary-encoded.\n * There is one vector / column per dictionary, but that vector / column\n * may be spread across multiple dictionary batches by using the isDelta\n * flag\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class DictionaryBatch {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DictionaryBatch\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): DictionaryBatch {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DictionaryBatch= obj\n         * @returns DictionaryBatch\n         */\n        static getRootAsDictionaryBatch(bb: flatbuffers.ByteBuffer, obj?: DictionaryBatch): DictionaryBatch {\n            return (obj || new DictionaryBatch).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        id(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.RecordBatch= obj\n         * @returns org.apache.arrow.flatbuf.RecordBatch|null\n         */\n        data(obj?: org.apache.arrow.flatbuf.RecordBatch): org.apache.arrow.flatbuf.RecordBatch | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new org.apache.arrow.flatbuf.RecordBatch).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * If isDelta is true the values in the dictionary are to be appended to a\n         * dictionary with the indicated id\n         *\n         * @returns boolean\n         */\n        isDelta(): boolean {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDictionaryBatch(builder: flatbuffers.Builder) {\n            builder.startObject(3);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long id\n         */\n        static addId(builder: flatbuffers.Builder, id: flatbuffers.Long) {\n            builder.addFieldInt64(0, id, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dataOffset\n         */\n        static addData(builder: flatbuffers.Builder, dataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, dataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isDelta\n         */\n        static addIsDelta(builder: flatbuffers.Builder, isDelta: boolean) {\n            builder.addFieldInt8(2, +isDelta, +false);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDictionaryBatch(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        static createDictionaryBatch(builder: flatbuffers.Builder, id: flatbuffers.Long, dataOffset: flatbuffers.Offset, isDelta: boolean): flatbuffers.Offset {\n            DictionaryBatch.startDictionaryBatch(builder);\n            DictionaryBatch.addId(builder, id);\n            DictionaryBatch.addData(builder, dataOffset);\n            DictionaryBatch.addIsDelta(builder, isDelta);\n            return DictionaryBatch.endDictionaryBatch(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Message {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Message\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Message {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Message= obj\n         * @returns Message\n         */\n        static getRootAsMessage(bb: flatbuffers.ByteBuffer, obj?: Message): Message {\n            return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MessageHeader\n         */\n        headerType(): org.apache.arrow.flatbuf.MessageHeader {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : org.apache.arrow.flatbuf.MessageHeader.NONE;\n        }\n\n        /**\n         * @param flatbuffers.Table obj\n         * @returns ?flatbuffers.Table\n         */\n        header<T extends flatbuffers.Table>(obj: T): T | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n        }\n\n        /**\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.KeyValue= obj\n         * @returns org.apache.arrow.flatbuf.KeyValue\n         */\n        customMetadata(index: number, obj?: NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue): NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue | null {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.KeyValue).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        customMetadataLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 12);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMessage(builder: flatbuffers.Builder) {\n            builder.startObject(5);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MessageHeader headerType\n         */\n        static addHeaderType(builder: flatbuffers.Builder, headerType: org.apache.arrow.flatbuf.MessageHeader) {\n            builder.addFieldInt8(1, headerType, org.apache.arrow.flatbuf.MessageHeader.NONE);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset headerOffset\n         */\n        static addHeader(builder: flatbuffers.Builder, headerOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, headerOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long bodyLength\n         */\n        static addBodyLength(builder: flatbuffers.Builder, bodyLength: flatbuffers.Long) {\n            builder.addFieldInt64(3, bodyLength, builder.createLong(0, 0));\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset customMetadataOffset\n         */\n        static addCustomMetadata(builder: flatbuffers.Builder, customMetadataOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(4, customMetadataOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createCustomMetadataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n            builder.startVector(4, data.length, 4);\n            for (let i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCustomMetadataVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(4, numElems, 4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMessage(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishMessageBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createMessage(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, headerType: org.apache.arrow.flatbuf.MessageHeader, headerOffset: flatbuffers.Offset, bodyLength: flatbuffers.Long, customMetadataOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Message.startMessage(builder);\n            Message.addVersion(builder, version);\n            Message.addHeaderType(builder, headerType);\n            Message.addHeader(builder, headerOffset);\n            Message.addBodyLength(builder, bodyLength);\n            Message.addCustomMetadata(builder, customMetadataOffset);\n            return Message.endMessage(builder);\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as Schema_ from './fb/Schema';\nimport * as Message_ from './fb/Message';\n\nexport import ArrowType = Schema_.org.apache.arrow.flatbuf.Type;\nexport import DateUnit = Schema_.org.apache.arrow.flatbuf.DateUnit;\nexport import TimeUnit = Schema_.org.apache.arrow.flatbuf.TimeUnit;\nexport import Precision = Schema_.org.apache.arrow.flatbuf.Precision;\nexport import UnionMode = Schema_.org.apache.arrow.flatbuf.UnionMode;\nexport import IntervalUnit = Schema_.org.apache.arrow.flatbuf.IntervalUnit;\nexport import MessageHeader = Message_.org.apache.arrow.flatbuf.MessageHeader;\nexport import MetadataVersion = Schema_.org.apache.arrow.flatbuf.MetadataVersion;\n\n/**\n * Main data type enumeration.\n *\n * Data types in this library are all *logical*. They can be expressed as\n * either a primitive physical type (bytes or bits of some fixed size), a\n * nested type consisting of other data types, or another data type (e.g. a\n * timestamp encoded as an int64).\n *\n * **Note**: Only enum values 0-17 (NONE through Map) are written to an Arrow\n * IPC payload.\n *\n * The rest of the values are specified here so TypeScript can narrow the type\n * signatures further beyond the base Arrow Types. The Arrow DataTypes include\n * metadata like `bitWidth` that impact the type signatures of the values we\n * accept and return.\n *\n * For example, the `Int8Vector` reads 1-byte numbers from an `Int8Array`, an\n * `Int32Vector` reads a 4-byte number from an `Int32Array`, and an `Int64Vector`\n * reads a pair of 4-byte lo, hi 32-bit integers as a zero-copy slice from the\n * underlying `Int32Array`.\n *\n * Library consumers benefit by knowing the narrowest type, since we can ensure\n * the types across all public methods are propagated, and never bail to `any`.\n * These values are _never_ used at runtime, and they will _never_ be written\n * to the flatbuffers metadata of serialized Arrow IPC payloads.\n */\nexport enum Type {\n    /** The default placeholder type */\n    NONE            =  0,\n    /** A NULL type having no physical storage */\n    Null            =  1,\n    /** Signed or unsigned 8, 16, 32, or 64-bit little-endian integer */\n    Int             =  2,\n    /** 2, 4, or 8-byte floating point value */\n    Float           =  3,\n    /** Variable-length bytes (no guarantee of UTF8-ness) */\n    Binary          =  4,\n    /** UTF8 variable-length string as List<Char> */\n    Utf8            =  5,\n    /** Boolean as 1 bit, LSB bit-packed ordering */\n    Bool            =  6,\n    /** Precision-and-scale-based decimal type. Storage type depends on the parameters. */\n    Decimal         =  7,\n    /** int32_t days or int64_t milliseconds since the UNIX epoch */\n    Date            =  8,\n    /** Time as signed 32 or 64-bit integer, representing either seconds, milliseconds, microseconds, or nanoseconds since midnight since midnight */\n    Time            =  9,\n    /** Exact timestamp encoded with int64 since UNIX epoch (Default unit millisecond) */\n    Timestamp       = 10,\n    /** YEAR_MONTH or DAY_TIME interval in SQL style */\n    Interval        = 11,\n    /** A list of some logical data type */\n    List            = 12,\n    /** Struct of logical types */\n    Struct          = 13,\n    /** Union of logical types */\n    Union           = 14,\n    /** Fixed-size binary. Each value occupies the same number of bytes */\n    FixedSizeBinary = 15,\n    /** Fixed-size list. Each value occupies the same number of bytes */\n    FixedSizeList   = 16,\n    /** Map of named logical types */\n    Map             = 17,\n\n    /** Dictionary aka Category type */\n    Dictionary            = -1,\n    Int8                  = -2,\n    Int16                 = -3,\n    Int32                 = -4,\n    Int64                 = -5,\n    Uint8                 = -6,\n    Uint16                = -7,\n    Uint32                = -8,\n    Uint64                = -9,\n    Float16               = -10,\n    Float32               = -11,\n    Float64               = -12,\n    DateDay               = -13,\n    DateMillisecond       = -14,\n    TimestampSecond       = -15,\n    TimestampMillisecond  = -16,\n    TimestampMicrosecond  = -17,\n    TimestampNanosecond   = -18,\n    TimeSecond            = -19,\n    TimeMillisecond       = -20,\n    TimeMicrosecond       = -21,\n    TimeNanosecond        = -22,\n    DenseUnion            = -23,\n    SparseUnion           = -24,\n    IntervalDayTime       = -25,\n    IntervalYearMonth     = -26,\n}\n\nexport enum BufferType {\n    /**\n     * used in List type, Dense Union and variable length primitive types (String, Binary)\n     */\n    OFFSET = 0,\n\n    /**\n     * actual data, either wixed width primitive types in slots or variable width delimited by an OFFSET vector\n     */\n    DATA = 1,\n\n    /**\n     * Bit vector indicating if each value is null\n     */\n    VALIDITY = 2,\n\n    /**\n     * Type vector used in Union type\n     */\n    TYPE = 3\n  }\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function getBool(_data: any, _index: number, byte: number, bit: number) {\n    return (byte & 1 << bit) !== 0;\n}\n\n/** @ignore */\nexport function getBit(_data: any, _index: number, byte: number, bit: number): 0 | 1 {\n    return (byte & 1 << bit) >> bit as (0 | 1);\n}\n\n/** @ignore */\nexport function setBool(bytes: Uint8Array, index: number, value: any) {\n    return value ?\n        !!(bytes[index >> 3] |=  (1 << (index % 8))) || true :\n        !(bytes[index >> 3] &= ~(1 << (index % 8))) && false ;\n}\n\n/** @ignore */\nexport function truncateBitmap(offset: number, length: number, bitmap: Uint8Array) {\n    const alignedSize = (bitmap.byteLength + 7) & ~7;\n    if (offset > 0 || bitmap.byteLength < alignedSize) {\n        const bytes = new Uint8Array(alignedSize);\n        // If the offset is a multiple of 8 bits, it's safe to slice the bitmap\n        bytes.set(offset % 8 === 0 ? bitmap.subarray(offset >> 3) :\n            // Otherwise iterate each bit from the offset and return a new one\n            packBools(iterateBits(bitmap, offset, length, null, getBool)).subarray(0, alignedSize));\n        return bytes;\n    }\n    return bitmap;\n}\n\n/** @ignore */\nexport function packBools(values: Iterable<any>) {\n    let xs: number[] = [];\n    let i = 0, bit = 0, byte = 0;\n    for (const value of values) {\n        value && (byte |= 1 << bit);\n        if (++bit === 8) {\n            xs[i++] = byte;\n            byte = bit = 0;\n        }\n    }\n    if (i === 0 || bit > 0) { xs[i++] = byte; }\n    let b = new Uint8Array((xs.length + 7) & ~7);\n    b.set(xs);\n    return b;\n}\n\n/** @ignore */\nexport function* iterateBits<T>(bytes: Uint8Array, begin: number, length: number, context: any,\n                                get: (context: any, index: number, byte: number, bit: number) => T) {\n    let bit = begin % 8;\n    let byteIndex = begin >> 3;\n    let index = 0, remaining = length;\n    for (; remaining > 0; bit = 0) {\n        let byte = bytes[byteIndex++];\n        do {\n            yield get(context, index++, byte, bit);\n        } while (--remaining > 0 && ++bit < 8);\n    }\n}\n\n/**\n * Compute the population count (the number of bits set to 1) for a range of bits in a Uint8Array.\n * @param vector The Uint8Array of bits for which to compute the population count.\n * @param lhs The range's left-hand side (or start) bit\n * @param rhs The range's right-hand side (or end) bit\n */\n/** @ignore */\nexport function popcnt_bit_range(data: Uint8Array, lhs: number, rhs: number): number {\n    if (rhs - lhs <= 0) { return 0; }\n    // If the bit range is less than one byte, sum the 1 bits in the bit range\n    if (rhs - lhs < 8) {\n        let sum = 0;\n        for (const bit of iterateBits(data, lhs, rhs - lhs, data, getBit)) {\n            sum += bit;\n        }\n        return sum;\n    }\n    // Get the next lowest multiple of 8 from the right hand side\n    const rhsInside = rhs >> 3 << 3;\n    // Get the next highest multiple of 8 from the left hand side\n    const lhsInside = lhs + (lhs % 8 === 0 ? 0 : 8 - lhs % 8);\n    return (\n        // Get the popcnt of bits between the left hand side, and the next highest multiple of 8\n        popcnt_bit_range(data, lhs, lhsInside) +\n        // Get the popcnt of bits between the right hand side, and the next lowest multiple of 8\n        popcnt_bit_range(data, rhsInside, rhs) +\n        // Get the popcnt of all bits between the left and right hand sides' multiples of 8\n        popcnt_array(data, lhsInside >> 3, (rhsInside - lhsInside) >> 3)\n    );\n}\n\n/** @ignore */\nexport function popcnt_array(arr: ArrayBufferView, byteOffset?: number, byteLength?: number) {\n    let cnt = 0, pos = byteOffset! | 0;\n    const view = new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n    const len =  byteLength === void 0 ? arr.byteLength : pos + byteLength;\n    while (len - pos >= 4) {\n        cnt += popcnt_uint32(view.getUint32(pos));\n        pos += 4;\n    }\n    while (len - pos >= 2) {\n        cnt += popcnt_uint32(view.getUint16(pos));\n        pos += 2;\n    }\n    while (len - pos >= 1) {\n        cnt += popcnt_uint32(view.getUint8(pos));\n        pos += 1;\n    }\n    return cnt;\n}\n\n/** @ignore */\nexport function popcnt_uint32(uint32: number): number {\n    let i = uint32 | 0;\n    i = i - ((i >>> 1) & 0x55555555);\n    i = (i & 0x33333333) + ((i >>> 2) & 0x33333333);\n    return (((i + (i >>> 4)) & 0x0F0F0F0F) * 0x01010101) >>> 24;\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { Type, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from './enum';\nimport { DataType, Float, Int, Date_, Interval, Time, Timestamp, Union, } from './type';\n\nexport abstract class Visitor {\n    public visitMany(nodes: any[], ...args: any[][]) {\n        return nodes.map((node, i) => this.visit(node, ...args.map((x) => x[i])));\n    }\n    public visit(...args: any[]) {\n        return this.getVisitFn(args[0], false).apply(this, args);\n    }\n    public getVisitFn(node: any, throwIfNotFound = true) {\n        return getVisitFn(this, node, throwIfNotFound);\n    }\n    public visitNull            (_node: any, ..._args: any[]): any { return null; }\n    public visitBool            (_node: any, ..._args: any[]): any { return null; }\n    public visitInt             (_node: any, ..._args: any[]): any { return null; }\n    public visitFloat           (_node: any, ..._args: any[]): any { return null; }\n    public visitUtf8            (_node: any, ..._args: any[]): any { return null; }\n    public visitBinary          (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeBinary (_node: any, ..._args: any[]): any { return null; }\n    public visitDate            (_node: any, ..._args: any[]): any { return null; }\n    public visitTimestamp       (_node: any, ..._args: any[]): any { return null; }\n    public visitTime            (_node: any, ..._args: any[]): any { return null; }\n    public visitDecimal         (_node: any, ..._args: any[]): any { return null; }\n    public visitList            (_node: any, ..._args: any[]): any { return null; }\n    public visitStruct          (_node: any, ..._args: any[]): any { return null; }\n    public visitUnion           (_node: any, ..._args: any[]): any { return null; }\n    public visitDictionary      (_node: any, ..._args: any[]): any { return null; }\n    public visitInterval        (_node: any, ..._args: any[]): any { return null; }\n    public visitFixedSizeList   (_node: any, ..._args: any[]): any { return null; }\n    public visitMap             (_node: any, ..._args: any[]): any { return null; }\n}\n\n/** @ignore */\nfunction getVisitFn<T extends DataType>(visitor: Visitor, node: any, throwIfNotFound = true) {\n    let fn: any = null;\n    let dtype: T['TType'] = Type.NONE;\n    // tslint:disable\n    if      (node instanceof Data    ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof Vector  ) { dtype = inferDType(node.type as T); }\n    else if (node instanceof DataType) { dtype = inferDType(node      as T); }\n    else if (typeof (dtype = node) !== 'number') { dtype = Type[node] as any as T['TType']; }\n\n    switch (dtype) {\n        case Type.Null:                 fn = visitor.visitNull; break;\n        case Type.Bool:                 fn = visitor.visitBool; break;\n        case Type.Int:                  fn = visitor.visitInt; break;\n        case Type.Int8:                 fn = visitor.visitInt8 || visitor.visitInt; break;\n        case Type.Int16:                fn = visitor.visitInt16 || visitor.visitInt; break;\n        case Type.Int32:                fn = visitor.visitInt32 || visitor.visitInt; break;\n        case Type.Int64:                fn = visitor.visitInt64 || visitor.visitInt; break;\n        case Type.Uint8:                fn = visitor.visitUint8 || visitor.visitInt; break;\n        case Type.Uint16:               fn = visitor.visitUint16 || visitor.visitInt; break;\n        case Type.Uint32:               fn = visitor.visitUint32 || visitor.visitInt; break;\n        case Type.Uint64:               fn = visitor.visitUint64 || visitor.visitInt; break;\n        case Type.Float:                fn = visitor.visitFloat; break;\n        case Type.Float16:              fn = visitor.visitFloat16 || visitor.visitFloat; break;\n        case Type.Float32:              fn = visitor.visitFloat32 || visitor.visitFloat; break;\n        case Type.Float64:              fn = visitor.visitFloat64 || visitor.visitFloat; break;\n        case Type.Utf8:                 fn = visitor.visitUtf8; break;\n        case Type.Binary:               fn = visitor.visitBinary; break;\n        case Type.FixedSizeBinary:      fn = visitor.visitFixedSizeBinary; break;\n        case Type.Date:                 fn = visitor.visitDate; break;\n        case Type.DateDay:              fn = visitor.visitDateDay || visitor.visitDate; break;\n        case Type.DateMillisecond:      fn = visitor.visitDateMillisecond || visitor.visitDate; break;\n        case Type.Timestamp:            fn = visitor.visitTimestamp; break;\n        case Type.TimestampSecond:      fn = visitor.visitTimestampSecond || visitor.visitTimestamp; break;\n        case Type.TimestampMillisecond: fn = visitor.visitTimestampMillisecond || visitor.visitTimestamp; break;\n        case Type.TimestampMicrosecond: fn = visitor.visitTimestampMicrosecond || visitor.visitTimestamp; break;\n        case Type.TimestampNanosecond:  fn = visitor.visitTimestampNanosecond || visitor.visitTimestamp; break;\n        case Type.Time:                 fn = visitor.visitTime; break;\n        case Type.TimeSecond:           fn = visitor.visitTimeSecond || visitor.visitTime; break;\n        case Type.TimeMillisecond:      fn = visitor.visitTimeMillisecond || visitor.visitTime; break;\n        case Type.TimeMicrosecond:      fn = visitor.visitTimeMicrosecond || visitor.visitTime; break;\n        case Type.TimeNanosecond:       fn = visitor.visitTimeNanosecond || visitor.visitTime; break;\n        case Type.Decimal:              fn = visitor.visitDecimal; break;\n        case Type.List:                 fn = visitor.visitList; break;\n        case Type.Struct:               fn = visitor.visitStruct; break;\n        case Type.Union:                fn = visitor.visitUnion; break;\n        case Type.DenseUnion:           fn = visitor.visitDenseUnion || visitor.visitUnion; break;\n        case Type.SparseUnion:          fn = visitor.visitSparseUnion || visitor.visitUnion; break;\n        case Type.Dictionary:           fn = visitor.visitDictionary; break;\n        case Type.Interval:             fn = visitor.visitInterval; break;\n        case Type.IntervalDayTime:      fn = visitor.visitIntervalDayTime || visitor.visitInterval; break;\n        case Type.IntervalYearMonth:    fn = visitor.visitIntervalYearMonth || visitor.visitInterval; break;\n        case Type.FixedSizeList:        fn = visitor.visitFixedSizeList; break;\n        case Type.Map:                  fn = visitor.visitMap; break;\n    }\n    if (typeof fn === 'function') return fn;\n    if (!throwIfNotFound) return () => null;\n    throw new Error(`Unrecognized type '${Type[dtype]}'`);\n}\n\n/** @ignore */\nfunction inferDType<T extends DataType>(type: T): Type {\n    switch (type.typeId) {\n        case Type.Null: return Type.Null;\n        case Type.Int:\n            const { bitWidth, isSigned } = (type as any as Int);\n            switch (bitWidth) {\n                case  8: return isSigned ? Type.Int8  : Type.Uint8 ;\n                case 16: return isSigned ? Type.Int16 : Type.Uint16;\n                case 32: return isSigned ? Type.Int32 : Type.Uint32;\n                case 64: return isSigned ? Type.Int64 : Type.Uint64;\n            }\n            return Type.Int;\n        case Type.Float:\n            switch((type as any as Float).precision) {\n                case Precision.HALF: return Type.Float16;\n                case Precision.SINGLE: return Type.Float32;\n                case Precision.DOUBLE: return Type.Float64;\n            }\n            return Type.Float;\n        case Type.Binary: return Type.Binary;\n        case Type.Utf8: return Type.Utf8;\n        case Type.Bool: return Type.Bool;\n        case Type.Decimal: return Type.Decimal;\n        case Type.Time:\n            switch ((type as any as Time).unit) {\n                case TimeUnit.SECOND: return Type.TimeSecond;\n                case TimeUnit.MILLISECOND: return Type.TimeMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimeMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimeNanosecond;\n            }\n            return Type.Time;\n        case Type.Timestamp:\n            switch ((type as any as Timestamp).unit) {\n                case TimeUnit.SECOND: return Type.TimestampSecond;\n                case TimeUnit.MILLISECOND: return Type.TimestampMillisecond;\n                case TimeUnit.MICROSECOND: return Type.TimestampMicrosecond;\n                case TimeUnit.NANOSECOND: return Type.TimestampNanosecond;\n            }\n            return Type.Timestamp;\n        case Type.Date:\n            switch ((type as any as Date_).unit) {\n                case DateUnit.DAY: return Type.DateDay;\n                case DateUnit.MILLISECOND: return Type.DateMillisecond;\n            }\n            return Type.Date;\n        case Type.Interval:\n            switch ((type as any as Interval).unit) {\n                case IntervalUnit.DAY_TIME: return Type.IntervalDayTime;\n                case IntervalUnit.YEAR_MONTH: return Type.IntervalYearMonth;\n            }\n            return Type.Interval;\n        case Type.Map: return Type.Map;\n        case Type.List: return Type.List;\n        case Type.Struct: return Type.Struct;\n        case Type.Union:\n            switch ((type as any as Union).mode) {\n                case UnionMode.Dense: return Type.DenseUnion;\n                case UnionMode.Sparse: return Type.SparseUnion;\n            }\n            return Type.Union;\n        case Type.FixedSizeBinary: return Type.FixedSizeBinary;\n        case Type.FixedSizeList: return Type.FixedSizeList;\n        case Type.Dictionary: return Type.Dictionary;\n    }\n    throw new Error(`Unrecognized type '${Type[type.typeId]}'`);\n}\n\nexport interface Visitor {\n    visitNull                  (node: any, ...args: any[]): any;\n    visitBool                  (node: any, ...args: any[]): any;\n    visitInt                   (node: any, ...args: any[]): any;\n    visitInt8?                 (node: any, ...args: any[]): any;\n    visitInt16?                (node: any, ...args: any[]): any;\n    visitInt32?                (node: any, ...args: any[]): any;\n    visitInt64?                (node: any, ...args: any[]): any;\n    visitUint8?                (node: any, ...args: any[]): any;\n    visitUint16?               (node: any, ...args: any[]): any;\n    visitUint32?               (node: any, ...args: any[]): any;\n    visitUint64?               (node: any, ...args: any[]): any;\n    visitFloat                 (node: any, ...args: any[]): any;\n    visitFloat16?              (node: any, ...args: any[]): any;\n    visitFloat32?              (node: any, ...args: any[]): any;\n    visitFloat64?              (node: any, ...args: any[]): any;\n    visitUtf8                  (node: any, ...args: any[]): any;\n    visitBinary                (node: any, ...args: any[]): any;\n    visitFixedSizeBinary       (node: any, ...args: any[]): any;\n    visitDate                  (node: any, ...args: any[]): any;\n    visitDateDay?              (node: any, ...args: any[]): any;\n    visitDateMillisecond?      (node: any, ...args: any[]): any;\n    visitTimestamp             (node: any, ...args: any[]): any;\n    visitTimestampSecond?      (node: any, ...args: any[]): any;\n    visitTimestampMillisecond? (node: any, ...args: any[]): any;\n    visitTimestampMicrosecond? (node: any, ...args: any[]): any;\n    visitTimestampNanosecond?  (node: any, ...args: any[]): any;\n    visitTime                  (node: any, ...args: any[]): any;\n    visitTimeSecond?           (node: any, ...args: any[]): any;\n    visitTimeMillisecond?      (node: any, ...args: any[]): any;\n    visitTimeMicrosecond?      (node: any, ...args: any[]): any;\n    visitTimeNanosecond?       (node: any, ...args: any[]): any;\n    visitDecimal               (node: any, ...args: any[]): any;\n    visitList                  (node: any, ...args: any[]): any;\n    visitStruct                (node: any, ...args: any[]): any;\n    visitUnion                 (node: any, ...args: any[]): any;\n    visitDenseUnion?           (node: any, ...args: any[]): any;\n    visitSparseUnion?          (node: any, ...args: any[]): any;\n    visitDictionary            (node: any, ...args: any[]): any;\n    visitInterval              (node: any, ...args: any[]): any;\n    visitIntervalDayTime?      (node: any, ...args: any[]): any;\n    visitIntervalYearMonth?    (node: any, ...args: any[]): any;\n    visitFixedSizeList         (node: any, ...args: any[]): any;\n    visitMap                   (node: any, ...args: any[]): any;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Visitor.prototype as any).visitInt8 = null;\n(Visitor.prototype as any).visitInt16 = null;\n(Visitor.prototype as any).visitInt32 = null;\n(Visitor.prototype as any).visitInt64 = null;\n(Visitor.prototype as any).visitUint8 = null;\n(Visitor.prototype as any).visitUint16 = null;\n(Visitor.prototype as any).visitUint32 = null;\n(Visitor.prototype as any).visitUint64 = null;\n(Visitor.prototype as any).visitFloat16 = null;\n(Visitor.prototype as any).visitFloat32 = null;\n(Visitor.prototype as any).visitFloat64 = null;\n(Visitor.prototype as any).visitDateDay = null;\n(Visitor.prototype as any).visitDateMillisecond = null;\n(Visitor.prototype as any).visitTimestampSecond = null;\n(Visitor.prototype as any).visitTimestampMillisecond = null;\n(Visitor.prototype as any).visitTimestampMicrosecond = null;\n(Visitor.prototype as any).visitTimestampNanosecond = null;\n(Visitor.prototype as any).visitTimeSecond = null;\n(Visitor.prototype as any).visitTimeMillisecond = null;\n(Visitor.prototype as any).visitTimeMicrosecond = null;\n(Visitor.prototype as any).visitTimeNanosecond = null;\n(Visitor.prototype as any).visitDenseUnion = null;\n(Visitor.prototype as any).visitSparseUnion = null;\n(Visitor.prototype as any).visitIntervalDayTime = null;\n(Visitor.prototype as any).visitIntervalYearMonth = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface TypeComparator extends Visitor {\n    visit<T extends DataType>(type: T, other?: DataType | null): other is T;\n    visitMany<T extends DataType>(nodes: T[], others?: DataType[] | null): boolean[];\n    getVisitFn<T extends DataType>(node: VectorType<T> |  Data<T> | T): (other?: DataType | null) => other is T;\n    visitNull                 <T extends Null>                 (type: T, other?: DataType | null): other is T;\n    visitBool                 <T extends Bool>                 (type: T, other?: DataType | null): other is T;\n    visitInt                  <T extends Int>                  (type: T, other?: DataType | null): other is T;\n    visitInt8                 <T extends Int8>                 (type: T, other?: DataType | null): other is T;\n    visitInt16                <T extends Int16>                (type: T, other?: DataType | null): other is T;\n    visitInt32                <T extends Int32>                (type: T, other?: DataType | null): other is T;\n    visitInt64                <T extends Int64>                (type: T, other?: DataType | null): other is T;\n    visitUint8                <T extends Uint8>                (type: T, other?: DataType | null): other is T;\n    visitUint16               <T extends Uint16>               (type: T, other?: DataType | null): other is T;\n    visitUint32               <T extends Uint32>               (type: T, other?: DataType | null): other is T;\n    visitUint64               <T extends Uint64>               (type: T, other?: DataType | null): other is T;\n    visitFloat                <T extends Float>                (type: T, other?: DataType | null): other is T;\n    visitFloat16              <T extends Float16>              (type: T, other?: DataType | null): other is T;\n    visitFloat32              <T extends Float32>              (type: T, other?: DataType | null): other is T;\n    visitFloat64              <T extends Float64>              (type: T, other?: DataType | null): other is T;\n    visitUtf8                 <T extends Utf8>                 (type: T, other?: DataType | null): other is T;\n    visitBinary               <T extends Binary>               (type: T, other?: DataType | null): other is T;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (type: T, other?: DataType | null): other is T;\n    visitDate                 <T extends Date_>                (type: T, other?: DataType | null): other is T;\n    visitDateDay              <T extends DateDay>              (type: T, other?: DataType | null): other is T;\n    visitDateMillisecond      <T extends DateMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestamp            <T extends Timestamp>            (type: T, other?: DataType | null): other is T;\n    visitTimestampSecond      <T extends TimestampSecond>      (type: T, other?: DataType | null): other is T;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (type: T, other?: DataType | null): other is T;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (type: T, other?: DataType | null): other is T;\n    visitTime                 <T extends Time>                 (type: T, other?: DataType | null): other is T;\n    visitTimeSecond           <T extends TimeSecond>           (type: T, other?: DataType | null): other is T;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (type: T, other?: DataType | null): other is T;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (type: T, other?: DataType | null): other is T;\n    visitDecimal              <T extends Decimal>              (type: T, other?: DataType | null): other is T;\n    visitList                 <T extends List>                 (type: T, other?: DataType | null): other is T;\n    visitStruct               <T extends Struct>               (type: T, other?: DataType | null): other is T;\n    visitUnion                <T extends Union>                (type: T, other?: DataType | null): other is T;\n    visitDenseUnion           <T extends DenseUnion>           (type: T, other?: DataType | null): other is T;\n    visitSparseUnion          <T extends SparseUnion>          (type: T, other?: DataType | null): other is T;\n    visitDictionary           <T extends Dictionary>           (type: T, other?: DataType | null): other is T;\n    visitInterval             <T extends Interval>             (type: T, other?: DataType | null): other is T;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (type: T, other?: DataType | null): other is T;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (type: T, other?: DataType | null): other is T;\n    visitFixedSizeList        <T extends FixedSizeList>        (type: T, other?: DataType | null): other is T;\n    visitMap                  <T extends Map_>                 (type: T, other?: DataType | null): other is T;\n}\n\n/** @ignore */\nexport class TypeComparator extends Visitor {\n    compareSchemas<T extends { [key: string]: DataType }>(schema: Schema<T>, other?: Schema | null): other is Schema<T> {\n        return (schema === other) || (\n            other instanceof schema.constructor &&\n            instance.compareFields(schema.fields, other.fields)\n        );\n    }\n    compareFields<T extends { [key: string]: DataType }>(fields: Field<T[keyof T]>[], others?: Field[] | null): others is Field<T[keyof T]>[] {\n        return (fields === others) || (\n            Array.isArray(fields) &&\n            Array.isArray(others) &&\n            fields.length === others.length &&\n            fields.every((f, i) => instance.compareField(f, others[i]))\n        );\n    }\n    compareField<T extends DataType = any>(field: Field<T>, other?: Field | null): other is Field<T> {\n        return (field === other) || (\n            other instanceof field.constructor &&\n            field.name === other.name &&\n            field.nullable === other.nullable &&\n            instance.visit(field.type, other.type)\n        );\n    }\n}\n\nfunction compareConstructor<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return other instanceof type.constructor;\n}\n\nfunction compareAny<T extends DataType>(type: T, other?: DataType | null): other is T {\n    return (type === other) || compareConstructor(type, other);\n}\n\nfunction compareInt<T extends Int>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.bitWidth === other.bitWidth &&\n        type.isSigned === other.isSigned\n    );\n}\n\nfunction compareFloat<T extends Float>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.precision === other.precision\n    );\n}\n\nfunction compareFixedSizeBinary<T extends FixedSizeBinary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.byteWidth === other.byteWidth\n    );\n}\n\nfunction compareDate<T extends Date_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareTimestamp<T extends Timestamp>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.timezone === other.timezone\n    );\n}\n\nfunction compareTime<T extends Time>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit &&\n        type.bitWidth === other.bitWidth\n    );\n}\n\nfunction compareList<T extends List>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareStruct<T extends Struct>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareUnion<T extends Union>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.mode === other.mode &&\n        type.typeIds.every((x, i) => x === other.typeIds[i]) &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareDictionary<T extends Dictionary>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.id === other.id &&\n        type.isOrdered === other.isOrdered &&\n        instance.visit(<any> type.indices, other.indices) &&\n        instance.visit(type.dictionary, other.dictionary)\n    );\n}\n\nfunction compareInterval<T extends Interval>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.unit === other.unit\n    );\n}\n\nfunction compareFixedSizeList<T extends FixedSizeList>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.listSize === other.listSize &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nfunction compareMap<T extends Map_>(type: T, other?: DataType | null): other is T {\n    return (type === other) || (\n        compareConstructor(type, other) &&\n        type.keysSorted === other.keysSorted &&\n        type.children.length === other.children.length &&\n        instance.compareFields(type.children, other.children)\n    );\n}\n\nTypeComparator.prototype.visitNull                 =             compareAny;\nTypeComparator.prototype.visitBool                 =             compareAny;\nTypeComparator.prototype.visitInt                  =             compareInt;\nTypeComparator.prototype.visitInt8                 =             compareInt;\nTypeComparator.prototype.visitInt16                =             compareInt;\nTypeComparator.prototype.visitInt32                =             compareInt;\nTypeComparator.prototype.visitInt64                =             compareInt;\nTypeComparator.prototype.visitUint8                =             compareInt;\nTypeComparator.prototype.visitUint16               =             compareInt;\nTypeComparator.prototype.visitUint32               =             compareInt;\nTypeComparator.prototype.visitUint64               =             compareInt;\nTypeComparator.prototype.visitFloat                =           compareFloat;\nTypeComparator.prototype.visitFloat16              =           compareFloat;\nTypeComparator.prototype.visitFloat32              =           compareFloat;\nTypeComparator.prototype.visitFloat64              =           compareFloat;\nTypeComparator.prototype.visitUtf8                 =             compareAny;\nTypeComparator.prototype.visitBinary               =             compareAny;\nTypeComparator.prototype.visitFixedSizeBinary      = compareFixedSizeBinary;\nTypeComparator.prototype.visitDate                 =            compareDate;\nTypeComparator.prototype.visitDateDay              =            compareDate;\nTypeComparator.prototype.visitDateMillisecond      =            compareDate;\nTypeComparator.prototype.visitTimestamp            =       compareTimestamp;\nTypeComparator.prototype.visitTimestampSecond      =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMillisecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampMicrosecond =       compareTimestamp;\nTypeComparator.prototype.visitTimestampNanosecond  =       compareTimestamp;\nTypeComparator.prototype.visitTime                 =            compareTime;\nTypeComparator.prototype.visitTimeSecond           =            compareTime;\nTypeComparator.prototype.visitTimeMillisecond      =            compareTime;\nTypeComparator.prototype.visitTimeMicrosecond      =            compareTime;\nTypeComparator.prototype.visitTimeNanosecond       =            compareTime;\nTypeComparator.prototype.visitDecimal              =             compareAny;\nTypeComparator.prototype.visitList                 =            compareList;\nTypeComparator.prototype.visitStruct               =          compareStruct;\nTypeComparator.prototype.visitUnion                =           compareUnion;\nTypeComparator.prototype.visitDenseUnion           =           compareUnion;\nTypeComparator.prototype.visitSparseUnion          =           compareUnion;\nTypeComparator.prototype.visitDictionary           =      compareDictionary;\nTypeComparator.prototype.visitInterval             =        compareInterval;\nTypeComparator.prototype.visitIntervalDayTime      =        compareInterval;\nTypeComparator.prototype.visitIntervalYearMonth    =        compareInterval;\nTypeComparator.prototype.visitFixedSizeList        =   compareFixedSizeList;\nTypeComparator.prototype.visitMap                  =             compareMap;\n\n/** @ignore */\nexport const instance = new TypeComparator();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport { Field } from './schema';\nimport { flatbuffers } from 'flatbuffers';\nimport { TypedArrayConstructor } from './interfaces';\nimport { VectorType as V, TypeToDataType } from './interfaces';\nimport { instance as comparer } from './visitor/typecomparator';\n\nimport Long = flatbuffers.Long;\nimport {\n    Type,\n    Precision, UnionMode,\n    DateUnit, TimeUnit, IntervalUnit\n} from './enum';\n\n/** @ignore */\nexport type TimeBitWidth = 32 | 64;\n/** @ignore */\nexport type IntBitWidth = 8 | 16 | 32 | 64;\n/** @ignore */\nexport type IsSigned = { 'true': true; 'false': false };\n/** @ignore */\nexport type RowLike<T extends { [key: string]: DataType }> =\n      ( Iterable<[string, T[keyof T]['TValue'] | null]> )\n    & { [P in keyof T]: T[P]['TValue'] | null }\n    & { get<K extends keyof T>(key: K): T[K]['TValue'] | null; }\n    & { set<K extends keyof T>(key: K, val: T[K]['TValue'] | null): void; }\n    ;\n\n/** @ignore */\nexport type MapLike<K extends DataType = any, V extends DataType = any> =\n      { [P in K['TValue']]: V['TValue'] | null }\n    & ( Map<K['TValue'], V['TValue'] | null> )\n    ;\n\nexport interface DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n    readonly TType: TType;\n    readonly TArray: any;\n    readonly TValue: any;\n    readonly ArrayType: any;\n    readonly children: Field<TChildren[keyof TChildren]>[];\n}\n\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport abstract class DataType<TType extends Type = Type, TChildren extends { [key: string]: DataType } = any> {\n\n    // @ts-ignore\n    public [Symbol.toStringTag]: string;\n\n    /** @nocollapse */ static            isNull (x: any): x is Null            { return x && x.typeId === Type.Null;            }\n    /** @nocollapse */ static             isInt (x: any): x is Int_            { return x && x.typeId === Type.Int;             }\n    /** @nocollapse */ static           isFloat (x: any): x is Float           { return x && x.typeId === Type.Float;           }\n    /** @nocollapse */ static          isBinary (x: any): x is Binary          { return x && x.typeId === Type.Binary;          }\n    /** @nocollapse */ static            isUtf8 (x: any): x is Utf8            { return x && x.typeId === Type.Utf8;            }\n    /** @nocollapse */ static            isBool (x: any): x is Bool            { return x && x.typeId === Type.Bool;            }\n    /** @nocollapse */ static         isDecimal (x: any): x is Decimal         { return x && x.typeId === Type.Decimal;         }\n    /** @nocollapse */ static            isDate (x: any): x is Date_           { return x && x.typeId === Type.Date;            }\n    /** @nocollapse */ static            isTime (x: any): x is Time_           { return x && x.typeId === Type.Time;            }\n    /** @nocollapse */ static       isTimestamp (x: any): x is Timestamp_      { return x && x.typeId === Type.Timestamp;       }\n    /** @nocollapse */ static        isInterval (x: any): x is Interval_       { return x && x.typeId === Type.Interval;        }\n    /** @nocollapse */ static            isList (x: any): x is List            { return x && x.typeId === Type.List;            }\n    /** @nocollapse */ static          isStruct (x: any): x is Struct          { return x && x.typeId === Type.Struct;          }\n    /** @nocollapse */ static           isUnion (x: any): x is Union_          { return x && x.typeId === Type.Union;           }\n    /** @nocollapse */ static isFixedSizeBinary (x: any): x is FixedSizeBinary { return x && x.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static   isFixedSizeList (x: any): x is FixedSizeList   { return x && x.typeId === Type.FixedSizeList;   }\n    /** @nocollapse */ static             isMap (x: any): x is Map_            { return x && x.typeId === Type.Map;             }\n    /** @nocollapse */ static      isDictionary (x: any): x is Dictionary      { return x && x.typeId === Type.Dictionary;      }\n\n    public get typeId(): TType { return <any> Type.NONE; }\n    public compareTo(other: DataType): other is TypeToDataType<TType> {\n        return comparer.visit(this, other);\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: DataType) => {\n        (<any> proto).children = null;\n        (<any> proto).ArrayType = Array;\n        return proto[Symbol.toStringTag] = 'DataType';\n    })(DataType.prototype);\n}\n\n/** @ignore */\nexport interface Null extends DataType<Type.Null> { TArray: void; TValue: null; }\n/** @ignore */\nexport class Null extends DataType<Type.Null> {\n    public toString() { return `Null`; }\n    public get typeId() { return Type.Null as Type.Null; }\n    protected static [Symbol.toStringTag] = ((proto: Null) => {\n        return proto[Symbol.toStringTag] = 'Null';\n    })(Null.prototype);\n}\n\n/** @ignore */\ntype Ints = Type.Int | Type.Int8 | Type.Int16 | Type.Int32 | Type.Int64 | Type.Uint8 | Type.Uint16 | Type.Uint32 | Type.Uint64;\n/** @ignore */\ntype IType = {\n    [Type.Int   ]: { bitWidth: IntBitWidth; isSigned: true | false; TArray: IntArray;    TValue: number | bigint | Int32Array | Uint32Array; };\n    [Type.Int8  ]: { bitWidth:           8; isSigned: true;         TArray: Int8Array;   TValue: number; };\n    [Type.Int16 ]: { bitWidth:          16; isSigned: true;         TArray: Int16Array;  TValue: number; };\n    [Type.Int32 ]: { bitWidth:          32; isSigned: true;         TArray: Int32Array;  TValue: number; };\n    [Type.Int64 ]: { bitWidth:          64; isSigned: true;         TArray: Int32Array;  TValue: bigint | Int32Array | Uint32Array; };\n    [Type.Uint8 ]: { bitWidth:           8; isSigned: false;        TArray: Uint8Array;  TValue: number; };\n    [Type.Uint16]: { bitWidth:          16; isSigned: false;        TArray: Uint16Array; TValue: number; };\n    [Type.Uint32]: { bitWidth:          32; isSigned: false;        TArray: Uint32Array; TValue: number; };\n    [Type.Uint64]: { bitWidth:          64; isSigned: false;        TArray: Uint32Array; TValue: bigint | Int32Array | Uint32Array; };\n};\n\n/** @ignore */\ninterface Int_<T extends Ints = Ints> extends DataType<T> { TArray: IType[T]['TArray']; TValue: IType[T]['TValue']; }\n/** @ignore */\nclass Int_<T extends Ints = Ints> extends DataType<T> {\n    constructor(public readonly isSigned: IType[T]['isSigned'],\n                public readonly bitWidth: IType[T]['bitWidth']) {\n        super();\n    }\n    public get typeId() { return Type.Int as T; }\n    public get ArrayType(): TypedArrayConstructor<IType[T]['TArray']> {\n        switch (this.bitWidth) {\n            case  8: return this.isSigned ?  Int8Array :  Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? Int32Array : Uint32Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n    protected static [Symbol.toStringTag] = ((proto: Int_) => {\n        (<any> proto).isSigned = null;\n        (<any> proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Int';\n    })(Int_.prototype);\n}\n\nexport { Int_ as Int };\n\n/** @ignore */\nexport class Int8 extends Int_<Type.Int8> { constructor() { super(true, 8); } }\n/** @ignore */\nexport class Int16 extends Int_<Type.Int16> { constructor() { super(true, 16); } }\n/** @ignore */\nexport class Int32 extends Int_<Type.Int32> { constructor() { super(true, 32); } }\n/** @ignore */\nexport class Int64 extends Int_<Type.Int64> { constructor() { super(true, 64); } }\n/** @ignore */\nexport class Uint8 extends Int_<Type.Uint8> { constructor() { super(false, 8); } }\n/** @ignore */\nexport class Uint16 extends Int_<Type.Uint16> { constructor() { super(false, 16); } }\n/** @ignore */\nexport class Uint32 extends Int_<Type.Uint32> { constructor() { super(false, 32); } }\n/** @ignore */\nexport class Uint64 extends Int_<Type.Uint64> { constructor() { super(false, 64); } }\n\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: Uint32Array });\n\n/** @ignore */\ntype Floats = Type.Float | Type.Float16 | Type.Float32 | Type.Float64;\n/** @ignore */\ntype FType = {\n    [Type.Float  ]: { precision: Precision;        TArray: FloatArray;    TValue: number; };\n    [Type.Float16]: { precision: Precision.HALF;   TArray: Uint16Array;   TValue: number; };\n    [Type.Float32]: { precision: Precision.SINGLE; TArray: Float32Array;  TValue: number; };\n    [Type.Float64]: { precision: Precision.DOUBLE; TArray: Float64Array;  TValue: number; };\n};\n\n/** @ignore */\nexport interface Float<T extends Floats = Floats> extends DataType<T> { TArray: FType[T]['TArray']; TValue: number; }\n/** @ignore */\nexport class Float<T extends Floats = Floats> extends DataType<T> {\n    constructor(public readonly precision: Precision) {\n        super();\n    }\n    public get typeId() { return Type.Float as T; }\n    public get ArrayType(): TypedArrayConstructor<FType[T]['TArray']> {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `Float${(this.precision << 5) || 16}`; }\n    protected static [Symbol.toStringTag] = ((proto: Float) => {\n        (<any> proto).precision = null;\n        return proto[Symbol.toStringTag] = 'Float';\n    })(Float.prototype);\n}\n\n/** @ignore */\nexport class Float16 extends Float<Type.Float16> { constructor() { super(Precision.HALF); } }\n/** @ignore */\nexport class Float32 extends Float<Type.Float32> { constructor() { super(Precision.SINGLE); } }\n/** @ignore */\nexport class Float64 extends Float<Type.Float64> { constructor() { super(Precision.DOUBLE); } }\n\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n\n/** @ignore */\nexport interface Binary extends DataType<Type.Binary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Binary extends DataType<Type.Binary> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Binary as Type.Binary; }\n    public toString() { return `Binary`; }\n    protected static [Symbol.toStringTag] = ((proto: Binary) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Binary';\n    })(Binary.prototype);\n}\n\n/** @ignore */\nexport interface Utf8 extends DataType<Type.Utf8> { TArray: Uint8Array; TValue: string; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Utf8 extends DataType<Type.Utf8> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Utf8 as Type.Utf8; }\n    public toString() { return `Utf8`; }\n    protected static [Symbol.toStringTag] = ((proto: Utf8) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Utf8';\n    })(Utf8.prototype);\n}\n\n/** @ignore */\nexport interface Bool extends DataType<Type.Bool> { TArray: Uint8Array; TValue: boolean; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class Bool extends DataType<Type.Bool> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Bool as Type.Bool; }\n    public toString() { return `Bool`; }\n    protected static [Symbol.toStringTag] = ((proto: Bool) => {\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Bool';\n    })(Bool.prototype);\n}\n\n/** @ignore */\nexport interface Decimal extends DataType<Type.Decimal> { TArray: Uint32Array; TValue: Uint32Array; ArrayType: TypedArrayConstructor<Uint32Array>; }\n/** @ignore */\nexport class Decimal extends DataType<Type.Decimal> {\n    constructor(public readonly scale: number,\n                public readonly precision: number) {\n        super();\n    }\n    public get typeId() { return Type.Decimal as Type.Decimal; }\n    public toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n    protected static [Symbol.toStringTag] = ((proto: Decimal) => {\n        (<any> proto).scale = null;\n        (<any> proto).precision = null;\n        (<any> proto).ArrayType = Uint32Array;\n        return proto[Symbol.toStringTag] = 'Decimal';\n    })(Decimal.prototype);\n}\n\n/** @ignore */\nexport type Dates = Type.Date | Type.DateDay | Type.DateMillisecond;\n/** @ignore */\nexport interface Date_<T extends Dates = Dates> extends DataType<T> { TArray: Int32Array; TValue: Date; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nexport class Date_<T extends Dates = Dates> extends DataType<T> {\n    constructor(public readonly unit: DateUnit) {\n        super();\n    }\n    public get typeId() { return Type.Date as T; }\n    public toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Date_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Date';\n    })(Date_.prototype);\n}\n\n/** @ignore */\nexport class DateDay extends Date_<Type.DateDay> { constructor() { super(DateUnit.DAY); } }\n/** @ignore */\nexport class DateMillisecond extends Date_<Type.DateMillisecond> { constructor() { super(DateUnit.MILLISECOND); } }\n\n/** @ignore */\ntype Times = Type.Time | Type.TimeSecond | Type.TimeMillisecond | Type.TimeMicrosecond | Type.TimeNanosecond;\n/** @ignore */\ntype TimesType = {\n    [Type.Time           ]: { unit: TimeUnit;             TValue: number | Int32Array };\n    [Type.TimeSecond     ]: { unit: TimeUnit.SECOND;      TValue: number;             };\n    [Type.TimeMillisecond]: { unit: TimeUnit.MILLISECOND; TValue: number;             };\n    [Type.TimeMicrosecond]: { unit: TimeUnit.MICROSECOND; TValue: Int32Array;         };\n    [Type.TimeNanosecond ]: { unit: TimeUnit.NANOSECOND;  TValue: Int32Array;         };\n};\n\n/** @ignore */\ninterface Time_<T extends Times = Times> extends DataType<T> { TArray: Int32Array; TValue: TimesType[T]['TValue']; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Time_<T extends Times = Times> extends DataType<T> {\n    constructor(public readonly unit: TimesType[T]['unit'],\n                public readonly bitWidth: TimeBitWidth) {\n        super();\n    }\n    public get typeId() { return Type.Time as T; }\n    public toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Time_) => {\n        (<any> proto).unit = null;\n        (<any> proto).bitWidth = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Time';\n    })(Time_.prototype);\n}\n\nexport { Time_ as Time };\n\n/** @ignore */\nexport class TimeSecond extends Time_<Type.TimeSecond> { constructor() { super(TimeUnit.SECOND, 32); } }\n/** @ignore */\nexport class TimeMillisecond extends Time_<Type.TimeMillisecond> { constructor() { super(TimeUnit.MILLISECOND, 32); } }\n/** @ignore */\nexport class TimeMicrosecond extends Time_<Type.TimeMicrosecond> { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n/** @ignore */\nexport class TimeNanosecond extends Time_<Type.TimeNanosecond> { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\n/** @ignore */\ntype Timestamps = Type.Timestamp | Type.TimestampSecond | Type.TimestampMillisecond | Type.TimestampMicrosecond | Type.TimestampNanosecond;\n/** @ignore */\ninterface Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> { TArray: Int32Array; TValue: number; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    constructor(public readonly unit: TimeUnit,\n                public readonly timezone?: string | null) {\n        super();\n    }\n    public get typeId() { return Type.Timestamp as T; }\n    public toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Timestamp_) => {\n        (<any> proto).unit = null;\n        (<any> proto).timezone = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Timestamp';\n    })(Timestamp_.prototype);\n}\n\nexport { Timestamp_ as Timestamp };\n\n/** @ignore */\nexport class TimestampSecond extends Timestamp_<Type.TimestampSecond> { constructor(timezone?: string | null) { super(TimeUnit.SECOND, timezone); } }\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_<Type.TimestampMillisecond> { constructor(timezone?: string | null) { super(TimeUnit.MILLISECOND, timezone); } }\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_<Type.TimestampMicrosecond> { constructor(timezone?: string | null) { super(TimeUnit.MICROSECOND, timezone); } }\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_<Type.TimestampNanosecond> { constructor(timezone?: string | null) { super(TimeUnit.NANOSECOND, timezone); } }\n\n/** @ignore */\ntype Intervals = Type.Interval | Type.IntervalDayTime | Type.IntervalYearMonth;\n/** @ignore */\ninterface Interval_<T extends Intervals = Intervals> extends DataType<T> { TArray: Int32Array; TValue: Int32Array; ArrayType: TypedArrayConstructor<Int32Array>; }\n/** @ignore */\nclass Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    constructor(public readonly unit: IntervalUnit) {\n        super();\n    }\n    public get typeId() { return Type.Interval as T; }\n    public toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Interval_) => {\n        (<any> proto).unit = null;\n        (<any> proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Interval';\n    })(Interval_.prototype);\n}\n\nexport { Interval_ as Interval };\n\n/** @ignore */\nexport class IntervalDayTime extends Interval_<Type.IntervalDayTime> { constructor() { super(IntervalUnit.DAY_TIME); } }\n/** @ignore */\nexport class IntervalYearMonth extends Interval_<Type.IntervalYearMonth> { constructor() { super(IntervalUnit.YEAR_MONTH); } }\n\n/** @ignore */\nexport interface List<T extends DataType = any> extends DataType<Type.List, { [0]: T }>  { TArray: IterableArrayLike<T>; TValue: V<T>; }\n/** @ignore */\nexport class List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    constructor(child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public readonly children: Field<T>[];\n    public get typeId() { return Type.List as Type.List; }\n    public toString() { return `List<${this.valueType}>`; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    protected static [Symbol.toStringTag] = ((proto: List) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'List';\n    })(List.prototype);\n}\n\n/** @ignore */\nexport interface Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct> { TArray: IterableArrayLike<RowLike<T>>; TValue: RowLike<T>; dataTypes: T; }\n/** @ignore */\nexport class Struct<T extends { [key: string]: DataType } = any> extends DataType<Type.Struct, T> {\n    public readonly children: Field<T[keyof T]>[];\n    constructor(children: Field<T[keyof T]>[]) {\n        super();\n        this.children = children;\n    }\n    public get typeId() { return Type.Struct as Type.Struct; }\n    public toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Struct) => {\n        (<any> proto).children = null;\n        return proto[Symbol.toStringTag] = 'Struct';\n    })(Struct.prototype);\n}\n\n/** @ignore */\ntype Unions = Type.Union | Type.DenseUnion | Type.SparseUnion;\n/** @ignore */\ninterface Union_<T extends Unions = Unions> extends DataType<T> { TArray: Int8Array; TValue: any; ArrayType: TypedArrayConstructor<Int8Array>; }\n/** @ignore */\nclass Union_<T extends Unions = Unions> extends DataType<T> {\n    public readonly mode: UnionMode;\n    public readonly typeIds: Int32Array;\n    public readonly children: Field<any>[];\n    public readonly typeIdToChildIndex: { [key: number]: number };\n    constructor(mode: UnionMode,\n                typeIds: number[] | Int32Array,\n                children: Field<any>[]) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => {\n            return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n        }, Object.create(null) as { [key: number]: number });\n    }\n    public get typeId() { return Type.Union as T; }\n    public toString() { return `${this[Symbol.toStringTag]}<${\n        this.children.map((x) => `${x.type}`).join(` | `)\n    }>`; }\n    protected static [Symbol.toStringTag] = ((proto: Union_) => {\n        (<any> proto).mode = null;\n        (<any> proto).typeIds = null;\n        (<any> proto).children = null;\n        (<any> proto).typeIdToChildIndex = null;\n        (<any> proto).ArrayType = Int8Array;\n        return proto[Symbol.toStringTag] = 'Union';\n    })(Union_.prototype);\n}\n\nexport { Union_ as Union };\n\n/** @ignore */\nexport class DenseUnion extends Union_<Type.DenseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport class SparseUnion extends Union_<Type.SparseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport interface FixedSizeBinary extends DataType<Type.FixedSizeBinary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array>; }\n/** @ignore */\nexport class FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    constructor(public readonly byteWidth: number) {\n        super();\n    }\n    public get typeId() { return Type.FixedSizeBinary as Type.FixedSizeBinary; }\n    public toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeBinary) => {\n        (<any> proto).byteWidth = null;\n        (<any> proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n    })(FixedSizeBinary.prototype);\n}\n\n/** @ignore */\nexport interface FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList> { TArray: IterableArrayLike<T['TArray']>; TValue: V<T>; }\n/** @ignore */\nexport class FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    public readonly children: Field<T>[];\n    constructor(public readonly listSize: number, child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public get typeId() { return Type.FixedSizeList as Type.FixedSizeList; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    public toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeList) => {\n        (<any> proto).children = null;\n        (<any> proto).listSize = null;\n        return proto[Symbol.toStringTag] = 'FixedSizeList';\n    })(FixedSizeList.prototype);\n}\n\n/** @ignore */\nexport interface Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    TArray: IterableArrayLike<Map<TKey['TValue'], TValue['TValue'] | null>>;\n    TChild: Struct<{ key: TKey, value: TValue }>;\n    TValue: MapLike<TKey, TValue>;\n}\n\n/** @ignore */\nexport class Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map> {\n    constructor(child: Field<Struct<{ key: TKey, value: TValue }>>, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    public readonly keysSorted: boolean;\n    public readonly children: Field<Struct<{ key: TKey, value: TValue }>>[];\n    public get typeId() { return Type.Map as Type.Map; }\n    public get keyType(): TKey { return this.children[0].type.children[0].type as TKey; }\n    public get valueType(): TValue { return this.children[0].type.children[1].type as TValue; }\n    public toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Map_) => {\n        (<any> proto).children = null;\n        (<any> proto).keysSorted = null;\n        return proto[Symbol.toStringTag] = 'Map_';\n    })(Map_.prototype);\n}\n\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n\n/** @ignore */\nexport type TKeys = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32;\n\n/** @ignore */\nexport interface Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> { TArray: TKey['TArray']; TValue: T['TValue']; }\n/** @ignore */\nexport class Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    public readonly id: number;\n    public readonly indices: TKey;\n    public readonly dictionary: T;\n    public readonly isOrdered: boolean;\n    constructor(dictionary: T, indices: TKey, id?: Long | number | null, isOrdered?: boolean | null) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    }\n    public get typeId() { return Type.Dictionary as Type.Dictionary; }\n    public get children() { return this.dictionary.children; }\n    public get valueType(): T { return this.dictionary as T; }\n    public get ArrayType(): T['ArrayType'] { return this.dictionary.ArrayType; }\n    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\n        (<any> proto).id = null;\n        (<any> proto).indices = null;\n        (<any> proto).isOrdered = null;\n        (<any> proto).dictionary = null;\n        return proto[Symbol.toStringTag] = 'Dictionary';\n    })(Dictionary.prototype);\n}\n\n/** @ignore */\nexport interface IterableArrayLike<T = any> extends ArrayLike<T>, Iterable<T> {}\n/** @ignore */\nexport type FloatArray = Uint16Array | Float32Array | Float64Array;\n/** @ignore */\nexport type IntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array;\n\n/** @ignore */\nexport function strideForType(type: DataType) {\n    let t: any = type;\n    switch (type.typeId) {\n        case Type.Decimal: return 4;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + (t as Date_).unit;\n        case Type.Interval: return 1 + (t as Interval_).unit;\n        case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return (t as FixedSizeList).listSize;\n        case Type.FixedSizeBinary: return (t as FixedSizeBinary).byteWidth;\n        default: return 1;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { truncateBitmap } from './util/bit';\nimport { popcnt_bit_range } from './util/bit';\nimport { BufferType, UnionMode, Type } from './enum';\nimport { DataType, SparseUnion, DenseUnion, strideForType } from './type';\nimport { toArrayBufferView, toUint8Array, toInt32Array } from './util/buffer';\nimport {\n    Dictionary,\n    Null, Int, Float,\n    Binary, Bool, Utf8, Decimal,\n    Date_, Time, Timestamp, Interval,\n    List, Struct, Union, FixedSizeBinary, FixedSizeList, Map_,\n} from './type';\n\n// When slicing, we do not know the null count of the sliced range without\n// doing some computation. To avoid doing this eagerly, we set the null count\n// to -1 (any negative number will do). When Vector.nullCount is called the\n// first time, the null count will be computed. See ARROW-33\n/** @ignore */ export type kUnknownNullCount = -1;\n/** @ignore */ export const kUnknownNullCount = -1;\n\n/** @ignore */ export type NullBuffer = Uint8Array | null | undefined;\n/** @ignore */ export type TypeIdsBuffer = Int8Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type ValueOffsetsBuffer = Int32Array  | ArrayLike<number> | Iterable<number> | undefined;\n/** @ignore */ export type DataBuffer<T extends DataType> = T['TArray'] | ArrayLike<number> | Iterable<number> | undefined;\n\n/** @ignore */\nexport interface Buffers<T extends DataType> {\n      [BufferType.OFFSET]: Int32Array;\n        [BufferType.DATA]: T['TArray'];\n    [BufferType.VALIDITY]: Uint8Array;\n        [BufferType.TYPE]: T['TArray'];\n}\n\n/** @ignore */\nexport interface Data<T extends DataType = DataType> {\n    readonly TType: T['TType'];\n    readonly TArray: T['TArray'];\n    readonly TValue: T['TValue'];\n}\n\n/** @ignore */\nexport class Data<T extends DataType = DataType> {\n\n    public readonly type: T;\n    public readonly length: number;\n    public readonly offset: number;\n    public readonly stride: number;\n    public readonly childData: Data[];\n\n    /**\n     * The dictionary for this Vector, if any. Only used for Dictionary type.\n     */\n    public dictionary?: Vector;\n\n    public readonly values: Buffers<T>[BufferType.DATA];\n    // @ts-ignore\n    public readonly typeIds: Buffers<T>[BufferType.TYPE];\n    // @ts-ignore\n    public readonly nullBitmap: Buffers<T>[BufferType.VALIDITY];\n    // @ts-ignore\n    public readonly valueOffsets: Buffers<T>[BufferType.OFFSET];\n\n    public get typeId(): T['TType'] { return this.type.typeId; }\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n    public get buffers() {\n        return [this.valueOffsets, this.values, this.nullBitmap, this.typeIds] as Buffers<T>;\n    }\n    public get byteLength(): number {\n        let byteLength = 0;\n        let { valueOffsets, values, nullBitmap, typeIds } = this;\n        valueOffsets && (byteLength += valueOffsets.byteLength);\n        values       && (byteLength += values.byteLength);\n        nullBitmap   && (byteLength += nullBitmap.byteLength);\n        typeIds      && (byteLength += typeIds.byteLength);\n        return this.childData.reduce((byteLength, child) => byteLength + child.byteLength, byteLength);\n    }\n\n    protected _nullCount: number | kUnknownNullCount;\n\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        let nullBitmap: Uint8Array | undefined;\n        if (nullCount <= kUnknownNullCount && (nullBitmap = this.nullBitmap)) {\n            this._nullCount = nullCount = this.length - popcnt_bit_range(nullBitmap, this.offset, this.offset + this.length);\n        }\n        return nullCount;\n    }\n\n    constructor(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector) {\n        this.type = type;\n        this.dictionary = dictionary;\n        this.offset = Math.floor(Math.max(offset || 0, 0));\n        this.length = Math.floor(Math.max(length || 0, 0));\n        this._nullCount = Math.floor(Math.max(nullCount || 0, -1));\n        this.childData = (childData || []).map((x) => x instanceof Data ? x : x.data) as Data[];\n        let buffer: Buffers<T>[keyof Buffers<T>];\n        if (buffers instanceof Data) {\n            this.stride = buffers.stride;\n            this.values = buffers.values;\n            this.typeIds = buffers.typeIds;\n            this.nullBitmap = buffers.nullBitmap;\n            this.valueOffsets = buffers.valueOffsets;\n        } else {\n            this.stride = strideForType(type);\n            if (buffers) {\n                (buffer = (buffers as Buffers<T>)[0]) && (this.valueOffsets = buffer);\n                (buffer = (buffers as Buffers<T>)[1]) && (this.values = buffer);\n                (buffer = (buffers as Buffers<T>)[2]) && (this.nullBitmap = buffer);\n                (buffer = (buffers as Buffers<T>)[3]) && (this.typeIds = buffer);\n            }\n        }\n    }\n\n    public clone<R extends DataType>(type: R, offset = this.offset, length = this.length, nullCount = this._nullCount, buffers: Buffers<R> = <any> this, childData: (Data | Vector)[] = this.childData) {\n        return new Data(type, offset, length, nullCount, buffers, childData, this.dictionary);\n    }\n\n    public slice(offset: number, length: number): Data<T> {\n        const { stride, typeId, childData } = this;\n        // +true === 1, +false === 0, so this means\n        // we keep nullCount at 0 if it's already 0,\n        // otherwise set to the invalidated flag -1\n        const nullCount = +(this._nullCount === 0) - 1;\n        const childStride = typeId === 16 /* FixedSizeList */ ? stride : 1;\n        const buffers = this._sliceBuffers(offset, length, stride, typeId);\n        return this.clone<T>(this.type, this.offset + offset, length, nullCount, buffers,\n            // Don't slice children if we have value offsets (the variable-width types)\n            (!childData.length || this.valueOffsets) ? childData : this._sliceChildren(childData, childStride * offset, childStride * length));\n    }\n\n    public _changeLengthAndBackfillNullBitmap(newLength: number): Data<T> {\n        if (this.typeId === Type.Null) {\n            return this.clone(this.type, 0, newLength, 0);\n        }\n        const { length, nullCount } = this;\n        // start initialized with 0s (nulls), then fill from 0 to length with 1s (not null)\n        const bitmap = new Uint8Array(((newLength + 63) & ~63) >> 3).fill(255, 0, length >> 3);\n        // set all the bits in the last byte (up to bit `length - length % 8`) to 1 (not null)\n        bitmap[length >> 3] = (1 << (length - (length & ~7))) - 1;\n        // if we have a nullBitmap, truncate + slice and set it over the pre-filled 1s\n        if (nullCount > 0) {\n            bitmap.set(truncateBitmap(this.offset, length, this.nullBitmap), 0);\n        }\n        const buffers = this.buffers;\n        buffers[BufferType.VALIDITY] = bitmap;\n        return this.clone(this.type, 0, newLength, nullCount + (newLength - length), buffers);\n    }\n\n    protected _sliceBuffers(offset: number, length: number, stride: number, typeId: T['TType']): Buffers<T> {\n        let arr: any, { buffers } = this;\n        // If typeIds exist, slice the typeIds buffer\n        (arr = buffers[BufferType.TYPE]) && (buffers[BufferType.TYPE] = arr.subarray(offset, offset + length));\n        // If offsets exist, only slice the offsets buffer\n        (arr = buffers[BufferType.OFFSET]) && (buffers[BufferType.OFFSET] = arr.subarray(offset, offset + length + 1)) ||\n        // Otherwise if no offsets, slice the data buffer. Don't slice the data vector for Booleans, since the offset goes by bits not bytes\n        (arr = buffers[BufferType.DATA]) && (buffers[BufferType.DATA] = typeId === 6 ? arr : arr.subarray(stride * offset, stride * (offset + length)));\n        return buffers;\n    }\n\n    protected _sliceChildren(childData: Data[], offset: number, length: number): Data[] {\n        return childData.map((child) => child.slice(offset, length));\n    }\n\n    //\n    // Convenience methods for creating Data instances for each of the Arrow Vector types\n    //\n    /** @nocollapse */\n    public static new<T extends DataType>(type: T, offset: number, length: number, nullCount?: number, buffers?: Partial<Buffers<T>> | Data<T>, childData?: (Data | Vector)[], dictionary?: Vector): Data<T> {\n        if (buffers instanceof Data) { buffers = buffers.buffers; } else if (!buffers) { buffers = [] as Partial<Buffers<T>>; }\n        switch (type.typeId) {\n            case Type.Null:            return <unknown> Data.Null(            <unknown> type as Null,            offset, length) as Data<T>;\n            case Type.Int:             return <unknown> Data.Int(             <unknown> type as Int,             offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Dictionary:      return <unknown> Data.Dictionary(      <unknown> type as Dictionary,      offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || [], dictionary!) as Data<T>;\n            case Type.Float:           return <unknown> Data.Float(           <unknown> type as Float,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Bool:            return <unknown> Data.Bool(            <unknown> type as Bool,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Decimal:         return <unknown> Data.Decimal(         <unknown> type as Decimal,         offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Date:            return <unknown> Data.Date(            <unknown> type as Date_,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Time:            return <unknown> Data.Time(            <unknown> type as Time,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Timestamp:       return <unknown> Data.Timestamp(       <unknown> type as Timestamp,       offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Interval:        return <unknown> Data.Interval(        <unknown> type as Interval,        offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.FixedSizeBinary: return <unknown> Data.FixedSizeBinary( <unknown> type as FixedSizeBinary, offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Binary:          return <unknown> Data.Binary(          <unknown> type as Binary,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.Utf8:            return <unknown> Data.Utf8(            <unknown> type as Utf8,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], buffers[BufferType.DATA] || []) as Data<T>;\n            case Type.List:            return <unknown> Data.List(            <unknown> type as List,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.FixedSizeList:   return <unknown> Data.FixedSizeList(   <unknown> type as FixedSizeList,   offset, length, nullCount || 0, buffers[BufferType.VALIDITY], (childData || [])[0]) as Data<T>;\n            case Type.Struct:          return <unknown> Data.Struct(          <unknown> type as Struct,          offset, length, nullCount || 0, buffers[BufferType.VALIDITY], childData || []) as Data<T>;\n            case Type.Map:             return <unknown> Data.Map(             <unknown> type as Map_,            offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.OFFSET] || [], (childData || [])[0]) as Data<T>;\n            case Type.Union:           return <unknown> Data.Union(           <unknown> type as Union,           offset, length, nullCount || 0, buffers[BufferType.VALIDITY], buffers[BufferType.TYPE] || [], buffers[BufferType.OFFSET] || childData, childData) as Data<T>;\n        }\n        throw new Error(`Unrecognized typeId ${type.typeId}`);\n    }\n\n    /** @nocollapse */\n    public static Null<T extends Null>(type: T, offset: number, length: number) {\n        return new Data(type, offset, length, 0);\n    }\n    /** @nocollapse */\n    public static Int<T extends Int>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Dictionary<T extends Dictionary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>, dictionary: Vector<T['dictionary']>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView<T['TArray']>(type.indices.ArrayType, data), toUint8Array(nullBitmap)], [], dictionary);\n    }\n    /** @nocollapse */\n    public static Float<T extends Float>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Bool<T extends Bool>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Decimal<T extends Decimal>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Date<T extends Date_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Time<T extends Time>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Timestamp<T extends Timestamp>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Interval<T extends Interval>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static FixedSizeBinary<T extends FixedSizeBinary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, data: DataBuffer<T>) {\n        return new Data(type, offset, length, nullCount, [undefined, toArrayBufferView(type.ArrayType, data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Binary<T extends Binary>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static Utf8<T extends Utf8>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, data: Uint8Array) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), toUint8Array(data), toUint8Array(nullBitmap)]);\n    }\n    /** @nocollapse */\n    public static List<T extends List>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static FixedSizeList<T extends FixedSizeList>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, child: Data<T['valueType']> | Vector<T['valueType']>) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    /** @nocollapse */\n    public static Struct<T extends Struct>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, children: (Data | Vector)[]) {\n        return new Data(type, offset, length, nullCount, [undefined, undefined, toUint8Array(nullBitmap)], children);\n    }\n    /** @nocollapse */\n    public static Map<T extends Map_>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, valueOffsets: ValueOffsetsBuffer, child: (Data | Vector)) {\n        return new Data(type, offset, length, nullCount, [toInt32Array(valueOffsets), undefined, toUint8Array(nullBitmap)], [child]);\n    }\n    public static Union<T extends SparseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, children: (Data | Vector)[], _?: any): Data<T>;\n    public static Union<T extends DenseUnion>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsets: ValueOffsetsBuffer, children: (Data | Vector)[]): Data<T>;\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]): Data<T>;\n    /** @nocollapse */\n    public static Union<T extends Union>(type: T, offset: number, length: number, nullCount: number, nullBitmap: NullBuffer, typeIds: TypeIdsBuffer, valueOffsetsOrChildren: ValueOffsetsBuffer | (Data | Vector)[], children?: (Data | Vector)[]) {\n        const buffers = <unknown> [\n            undefined, undefined,\n            toUint8Array(nullBitmap),\n            toArrayBufferView(type.ArrayType, typeIds)\n        ] as Partial<Buffers<T>>;\n        if (type.mode === UnionMode.Sparse) {\n            return new Data(type, offset, length, nullCount, buffers, valueOffsetsOrChildren as (Data | Vector)[]);\n        }\n        buffers[BufferType.OFFSET] = toInt32Array(<ValueOffsetsBuffer> valueOffsetsOrChildren);\n        return new Data(type, offset, length, nullCount, buffers, children);\n    }\n}\n\n(Data.prototype as any).childData = Object.freeze([]);\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */ const undf = void (0);\n\n/** @ignore */\nexport function valueToString(x: any) {\n    if (x === null) { return 'null'; }\n    if (x === undf) { return 'undefined'; }\n    switch (typeof x) {\n        case 'number': return `${x}`;\n        case 'bigint': return `${x}`;\n        case 'string': return `\"${x}\"`;\n    }\n    // If [Symbol.toPrimitive] is implemented (like in BN)\n    // use it instead of JSON.stringify(). This ensures we\n    // print BigInts, Decimals, and Binary in their native\n    // representation\n    if (typeof x[Symbol.toPrimitive] === 'function') {\n        return x[Symbol.toPrimitive]('string');\n    }\n    return ArrayBuffer.isView(x) ? `[${x}]` : JSON.stringify(x);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../type';\nimport { valueToString } from '../util/pretty';\nimport { BigIntAvailable } from '../util/compat';\n\n/**\n * Dynamically compile the null values into an `isValid()` function whose\n * implementation is a switch statement. Microbenchmarks in v8 indicate\n * this approach is 25% faster than using an ES6 Map.\n *\n * @example\n * console.log(createIsValidFunction([null, 'N/A', NaN]));\n * `function (x) {\n *     if (x !== x) return false;\n *     switch (x) {\n *         case null:\n *         case \"N/A\":\n *             return false;\n *     }\n *     return true;\n * }`\n *\n * @ignore\n * @param nullValues\n */\nexport function createIsValidFunction<T extends DataType = any, TNull = any>(nullValues?: ReadonlyArray<TNull>) {\n\n    if (!nullValues || nullValues.length <= 0) {\n        // @ts-ignore\n        return function isValid(value: any) { return true; };\n    }\n\n    let fnBody = '';\n    let noNaNs = nullValues.filter((x) => x === x);\n\n    if (noNaNs.length > 0) {\n        fnBody = `\n    switch (x) {${noNaNs.map((x) => `\n        case ${valueToCase(x)}:`).join('')}\n            return false;\n    }`;\n    }\n\n    // NaN doesn't equal anything including itself, so it doesn't work as a\n    // switch case. Instead we must explicitly check for NaN before the switch.\n    if (nullValues.length !== noNaNs.length) {\n        fnBody = `if (x !== x) return false;\\n${fnBody}`;\n    }\n\n    return new Function(`x`, `${fnBody}\\nreturn true;`) as (value: T['TValue'] | TNull) => boolean;\n}\n\n/** @ignore */\nfunction valueToCase(x: any) {\n    if (typeof x !== 'bigint') {\n        return valueToString(x);\n    } else if (BigIntAvailable) {\n        return `${valueToString(x)}n`;\n    }\n    return `\"${valueToString(x)}\"`;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { memcpy } from '../util/buffer';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from '../util/compat';\nimport {\n    TypedArray, TypedArrayConstructor,\n    BigIntArray, BigIntArrayConstructor\n} from '../interfaces';\n\n/** @ignore */ type DataValue<T> = T extends TypedArray ? number : T extends BigIntArray ? WideValue<T> : T;\n/** @ignore */ type WideValue<T extends BigIntArray> = T extends BigIntArray ? bigint | Int32Array | Uint32Array : never;\n/** @ignore */ type ArrayCtor<T extends TypedArray | BigIntArray> =\n    T extends TypedArray  ? TypedArrayConstructor<T>  :\n    T extends BigIntArray ? BigIntArrayConstructor<T> :\n    any;\n\n/** @ignore */\nconst roundLengthUpToNearest64Bytes = (len: number, BPE: number) => ((((len * BPE) + 63) & ~63) || 64) / BPE;\n/** @ignore */\nconst sliceOrExtendArray = <T extends TypedArray | BigIntArray>(arr: T, len = 0) => (\n    arr.length >= len ? arr.subarray(0, len) : memcpy(new (arr.constructor as any)(len), arr, 0)\n) as T;\n\n/** @ignore */\nexport interface BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n    readonly offset: number;\n}\n\n/** @ignore */\nexport class BufferBuilder<T extends TypedArray | BigIntArray = any, TValue = DataValue<T>> {\n\n    constructor(buffer: T, stride = 1) {\n        this.buffer = buffer;\n        this.stride = stride;\n        this.BYTES_PER_ELEMENT = buffer.BYTES_PER_ELEMENT;\n        this.ArrayType = buffer.constructor as ArrayCtor<T>;\n        this._resize(this.length = buffer.length / stride | 0);\n    }\n\n    public buffer: T;\n    public length: number;\n    public readonly stride: number;\n    public readonly ArrayType: ArrayCtor<T>;\n    public readonly BYTES_PER_ELEMENT: number;\n\n    public get byteLength() { return this.length * this.stride * this.BYTES_PER_ELEMENT | 0; }\n    public get reservedLength() { return this.buffer.length / this.stride; }\n    public get reservedByteLength() { return this.buffer.byteLength; }\n\n    // @ts-ignore\n    public set(index: number, value: TValue) { return this; }\n    public append(value: TValue) { return this.set(this.length, value); }\n    public reserve(extra: number) {\n        if (extra > 0) {\n            this.length += extra;\n            const stride = this.stride;\n            const length = this.length * stride;\n            const reserved = this.buffer.length;\n            if (length >= reserved) {\n                this._resize(reserved === 0\n                    ? roundLengthUpToNearest64Bytes(length * 1, this.BYTES_PER_ELEMENT)\n                    : roundLengthUpToNearest64Bytes(length * 2, this.BYTES_PER_ELEMENT)\n                );\n            }\n        }\n        return this;\n    }\n    public flush(length = this.length) {\n        length = roundLengthUpToNearest64Bytes(length * this.stride, this.BYTES_PER_ELEMENT);\n        const array = sliceOrExtendArray<T>(this.buffer, length);\n        this.clear();\n        return array;\n    }\n    public clear() {\n        this.length = 0;\n        this._resize(0);\n        return this;\n    }\n    protected _resize(newLength: number) {\n        return this.buffer = <T> memcpy(new this.ArrayType(newLength), this.buffer);\n    }\n}\n\n(BufferBuilder.prototype as any).offset = 0;\n\n/** @ignore */\nexport class DataBufferBuilder<T extends TypedArray> extends BufferBuilder<T, number> {\n    public last() { return this.get(this.length - 1); }\n    public get(index: number) { return this.buffer[index]; }\n    public set(index: number, value: number) {\n        this.reserve(index - this.length + 1);\n        this.buffer[index * this.stride] = value;\n        return this;\n    }\n}\n\n/** @ignore */\nexport class BitmapBufferBuilder extends DataBufferBuilder<Uint8Array> {\n\n    constructor(data = new Uint8Array(0)) { super(data, 1 / 8); }\n\n    public numValid = 0;\n    public get numInvalid() { return this.length - this.numValid; }\n    public get(idx: number) { return this.buffer[idx >> 3] >> idx % 8 & 1; }\n    public set(idx: number, val: number) {\n        const { buffer } = this.reserve(idx - this.length + 1);\n        const byte = idx >> 3, bit = idx % 8, cur = buffer[byte] >> bit & 1;\n        // If `val` is truthy and the current bit is 0, flip it to 1 and increment `numValid`.\n        // If `val` is falsey and the current bit is 1, flip it to 0 and decrement `numValid`.\n        val ? cur === 0 && ((buffer[byte] |=  (1 << bit)), ++this.numValid)\n            : cur === 1 && ((buffer[byte] &= ~(1 << bit)), --this.numValid);\n        return this;\n    }\n    public clear() {\n        this.numValid = 0;\n        return super.clear();\n    }\n}\n\n/** @ignore */\nexport class OffsetsBufferBuilder extends DataBufferBuilder<Int32Array> {\n    constructor(data = new Int32Array(1)) { super(data, 1); }\n    public append(value: number) {\n        return this.set(this.length - 1, value);\n    }\n    public set(index: number, value: number) {\n        const offset = this.length - 1;\n        const buffer = this.reserve(index - offset + 1).buffer;\n        if (offset < index++) {\n            buffer.fill(buffer[offset], offset, index);\n        }\n        buffer[index] = buffer[index - 1] + value;\n        return this;\n    }\n    public flush(length = this.length - 1) {\n        if (length > this.length) {\n            this.set(length - 1, 0);\n        }\n        return super.flush(length + 1);\n    }\n}\n\n/** @ignore */\nexport class WideBufferBuilder<T extends TypedArray, R extends BigIntArray> extends BufferBuilder<T, DataValue<T>> {\n    // @ts-ignore\n    public buffer64: R;\n    // @ts-ignore\n    protected _ArrayType64: BigIntArrayConstructor<R>;\n    public get ArrayType64() {\n        return this._ArrayType64 || (this._ArrayType64 = <BigIntArrayConstructor<R>> (this.buffer instanceof Int32Array ? BigInt64Array : BigUint64Array));\n    }\n    public set(index: number, value: DataValue<T>) {\n        this.reserve(index - this.length + 1);\n        switch (typeof value) {\n            case 'bigint': this.buffer64[index] = value; break;\n            case 'number': this.buffer[index * this.stride] = value; break;\n            default: this.buffer.set(value as TypedArray, index * this.stride);\n        }\n        return this;\n    }\n    protected _resize(newLength: number) {\n        const data = super._resize(newLength);\n        const length = data.byteLength / (this.BYTES_PER_ELEMENT * this.stride);\n        if (BigIntAvailable) {\n            this.buffer64 = new this.ArrayType64(data.buffer, data.byteOffset, length);\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from './vector';\nimport { BufferType } from './enum';\nimport { Data, Buffers } from './data';\nimport { createIsValidFunction } from './builder/valid';\nimport { BuilderType as B, VectorType as V} from './interfaces';\nimport { BufferBuilder, BitmapBufferBuilder, DataBufferBuilder, OffsetsBufferBuilder } from './builder/buffer';\nimport {\n    DataType, strideForType,\n    Float, Int, Decimal, FixedSizeBinary,\n    Date_, Time, Timestamp, Interval,\n    Utf8, Binary, List, Map_\n} from './type';\n\n/**\n * A set of options required to create a `Builder` instance for a given `DataType`.\n * @see {@link Builder}\n */\nexport interface BuilderOptions<T extends DataType = any, TNull = any> {\n    type: T;\n    nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n    children?: { [key: string]: BuilderOptions; } | BuilderOptions[];\n}\n\n/**\n * A set of options to create an Iterable or AsyncIterable `Builder` transform function.\n * @see {@link Builder.throughIterable}\n * @see {@link Builder.throughAsyncIterable}\n */\n\nexport interface IterableBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    highWaterMark?: number;\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/**\n * An abstract base class for types that construct Arrow Vectors from arbitrary JavaScript values.\n *\n * A `Builder` is responsible for writing arbitrary JavaScript values\n * to ArrayBuffers and/or child Builders according to the Arrow specification\n * for each DataType, creating or resizing the underlying ArrayBuffers as necessary.\n *\n * The `Builder` for each Arrow `DataType` handles converting and appending\n * values for a given `DataType`. The high-level {@link Builder.new `Builder.new()`} convenience\n * method creates the specific `Builder` subclass for the supplied `DataType`.\n *\n * Once created, `Builder` instances support both appending values to the end\n * of the `Builder`, and random-access writes to specific indices\n * (`Builder.prototype.append(value)` is a convenience method for\n * `builder.set(builder.length, value)`). Appending or setting values beyond the\n * Builder's current length may cause the builder to grow its underlying buffers\n * or child Builders (if applicable) to accommodate the new values.\n *\n * After enough values have been written to a `Builder`, `Builder.prototype.flush()`\n * will commit the values to the underlying ArrayBuffers (or child Builders). The\n * internal Builder state will be reset, and an instance of `Data<T>` is returned.\n * Alternatively, `Builder.prototype.toVector()` will flush the `Builder` and return\n * an instance of `Vector<T>` instead.\n *\n * When there are no more values to write, use `Builder.prototype.finish()` to\n * finalize the `Builder`. This does not reset the internal state, so it is\n * necessary to call `Builder.prototype.flush()` or `toVector()` one last time\n * if there are still values queued to be flushed.\n *\n * Note: calling `Builder.prototype.finish()` is required when using a `DictionaryBuilder`,\n * because this is when it flushes the values that have been enqueued in its internal\n * dictionary's `Builder`, and creates the `dictionaryVector` for the `Dictionary` `DataType`.\n *\n * ```ts\n * import { Builder, Utf8 } from 'apache-arrow';\n *\n * const utf8Builder = Builder.new({\n *     type: new Utf8(),\n *     nullValues: [null, 'n/a']\n * });\n *\n * utf8Builder\n *     .append('hello')\n *     .append('n/a')\n *     .append('world')\n *     .append(null);\n *\n * const utf8Vector = utf8Builder.finish().toVector();\n *\n * console.log(utf8Vector.toJSON());\n * // > [\"hello\", null, \"world\", null]\n * ```\n *\n * @typeparam T The `DataType` of this `Builder`.\n * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n */\nexport abstract class Builder<T extends DataType = any, TNull = any> {\n\n    /**\n     * Create a `Builder` instance based on the `type` property of the supplied `options` object.\n     * @param {BuilderOptions<T, TNull>} options An object with a required `DataType` instance\n     * and other optional parameters to be passed to the `Builder` subclass for the given `type`.\n     *\n     * @typeparam T The `DataType` of the `Builder` to create.\n     * @typeparam TNull The type(s) of values which will be considered null-value sentinels.\n     * @nocollapse\n     */\n    // @ts-ignore\n    public static new<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {}\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode<T extends DataType = any, TNull = any>(options: import('./io/node/builder').BuilderDuplexOptions<T, TNull>): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughDOM<T extends DataType = any, TNull = any>(options: import('./io/whatwg/builder').BuilderTransformOptions<T, TNull>): import('./io/whatwg/builder').BuilderTransform<T, TNull> {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    /**\n     * Transform a synchronous `Iterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `Iterable` of values to\n     * transform. When called, this function returns an Iterator of `Vector<T>`.\n     *\n     * The resulting `Iterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `Iterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `Iterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `Iterable` of values to\n     *          write, and returns an `Iterator` that yields Vectors according\n     *          to the chunking semantics defined in the `options` argument.\n     * @nocollapse\n     */\n    public static throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughIterable(options);\n    }\n\n    /**\n     * Transform an `AsyncIterable` of arbitrary JavaScript values into a\n     * sequence of Arrow Vector<T> following the chunking semantics defined in\n     * the supplied `options` argument.\n     *\n     * This function returns a function that accepts an `AsyncIterable` of values to\n     * transform. When called, this function returns an AsyncIterator of `Vector<T>`.\n     *\n     * The resulting `AsyncIterator<Vector<T>>` yields Vectors based on the\n     * `queueingStrategy` and `highWaterMark` specified in the `options` argument.\n     *\n     * * If `queueingStrategy` is `\"count\"` (or omitted), The `AsyncIterator<Vector<T>>`\n     *   will flush the underlying `Builder` (and yield a new `Vector<T>`) once the\n     *   Builder's `length` reaches or exceeds the supplied `highWaterMark`.\n     * * If `queueingStrategy` is `\"bytes\"`, the `AsyncIterator<Vector<T>>` will flush\n     *   the underlying `Builder` (and yield a new `Vector<T>`) once its `byteLength`\n     *   reaches or exceeds the supplied `highWaterMark`.\n     *\n     * @param {IterableBuilderOptions<T, TNull>} options An object of properties which determine the `Builder` to create and the chunking semantics to use.\n     * @returns A function which accepts a JavaScript `AsyncIterable` of values\n     *          to write, and returns an `AsyncIterator` that yields Vectors\n     *          according to the chunking semantics defined in the `options`\n     *          argument.\n     * @nocollapse\n     */\n    public static throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>) {\n        return throughAsyncIterable(options);\n    }\n\n    /**\n     * Construct a builder with the given Arrow DataType with optional null values,\n     * which will be interpreted as \"null\" when set or appended to the `Builder`.\n     * @param {{ type: T, nullValues?: any[] }} options A `BuilderOptions` object used to create this `Builder`.\n     */\n    constructor({ 'type': type, 'nullValues': nulls }: BuilderOptions<T, TNull>) {\n        this.type = type;\n        this.children = [];\n        this.nullValues = nulls;\n        this.stride = strideForType(type);\n        this._nulls = new BitmapBufferBuilder();\n        if (nulls && nulls.length > 0) {\n            this._isValid = createIsValidFunction(nulls);\n        }\n    }\n\n    /**\n     * The Builder's `DataType` instance.\n     * @readonly\n     */\n    public type: T;\n    /**\n     * The number of values written to the `Builder` that haven't been flushed yet.\n     * @readonly\n     */\n    public length = 0;\n    /**\n     * A boolean indicating whether `Builder.prototype.finish()` has been called on this `Builder`.\n     * @readonly\n     */\n    public finished = false;\n    /**\n     * The number of elements in the underlying values TypedArray that\n     * represent a single logical element, determined by this Builder's\n     * `DataType`. This is 1 for most types, but is larger when the `DataType`\n     * is `Int64`, `Uint64`, `Decimal`, `DateMillisecond`, certain variants of\n     * `Interval`, `Time`, or `Timestamp`, `FixedSizeBinary`, and `FixedSizeList`.\n     * @readonly\n     */\n    public readonly stride: number;\n    public readonly children: Builder[];\n    /**\n     * The list of null-value sentinels for this `Builder`. When one of these values\n     * is written to the `Builder` (either via `Builder.prototype.set()` or `Builder.prototype.append()`),\n     * a 1-bit is written to this Builder's underlying null BitmapBufferBuilder.\n     * @readonly\n     */\n    public readonly nullValues?: TNull[] | ReadonlyArray<TNull> | null;\n\n    /**\n     * Flush the `Builder` and return a `Vector<T>`.\n     * @returns {Vector<T>} A `Vector<T>` of the flushed values.\n     */\n    public toVector() { return Vector.new(this.flush()); }\n\n    public get ArrayType() { return this.type.ArrayType; }\n    public get nullCount() { return this._nulls.numInvalid; }\n    public get numChildren() { return this.children.length; }\n\n    /**\n     * @returns The aggregate length (in bytes) of the values that have been written.\n     */\n    public get byteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        this._typeIds && (size += this._typeIds.byteLength);\n        return this.children.reduce((size, child) => size + child.byteLength, size);\n    }\n\n    /**\n     * @returns The aggregate number of rows that have been reserved to write new values.\n     */\n    public get reservedLength(): number {\n        return this._nulls.reservedLength;\n    }\n\n    /**\n     * @returns The aggregate length (in bytes) that has been reserved to write new values.\n     */\n    public get reservedByteLength(): number {\n        let size = 0;\n        this._offsets && (size += this._offsets.reservedByteLength);\n        this._values && (size += this._values.reservedByteLength);\n        this._nulls && (size += this._nulls.reservedByteLength);\n        this._typeIds && (size += this._typeIds.reservedByteLength);\n        return this.children.reduce((size, child) => size + child.reservedByteLength, size);\n    }\n\n    // @ts-ignore\n    protected _offsets: DataBufferBuilder<Int32Array>;\n    public get valueOffsets() { return this._offsets ? this._offsets.buffer : null; }\n\n    // @ts-ignore\n    protected _values: BufferBuilder<T['TArray'], any>;\n    public get values() { return this._values ? this._values.buffer : null; }\n\n    protected _nulls: BitmapBufferBuilder;\n    public get nullBitmap() { return this._nulls ? this._nulls.buffer : null; }\n\n    // @ts-ignore\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n    public get typeIds() { return this._typeIds ? this._typeIds.buffer : null; }\n\n    // @ts-ignore\n    protected _isValid: (value: T['TValue'] | TNull) => boolean;\n    // @ts-ignore\n    protected _setValue: (inst: Builder<T>, index: number, value: T['TValue']) => void;\n\n    /**\n     * Appends a value (or null) to this `Builder`.\n     * This is equivalent to `builder.set(builder.length, value)`.\n     * @param {T['TValue'] | TNull } value The value to append.\n     */\n    public append(value: T['TValue'] | TNull) { return this.set(this.length, value); }\n\n    /**\n     * Validates whether a value is valid (true), or null (false)\n     * @param {T['TValue'] | TNull } value The value to compare against null the value representations\n     */\n    // @ts-ignore\n    public isValid(value: T['TValue'] | TNull): boolean { return this._isValid(value); }\n\n    /**\n     * Write a value (or null-value sentinel) at the supplied index.\n     * If the value matches one of the null-value representations, a 1-bit is\n     * written to the null `BitmapBufferBuilder`. Otherwise, a 0 is written to\n     * the null `BitmapBufferBuilder`, and the value is passed to\n     * `Builder.prototype.setValue()`.\n     * @param {number} index The index of the value to write.\n     * @param {T['TValue'] | TNull } value The value to write at the supplied index.\n     * @returns {this} The updated `Builder` instance.\n     */\n    public set(index: number, value: T['TValue'] | TNull) {\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value);\n        }\n        return this;\n    }\n\n    /**\n     * Write a value to the underlying buffers at the supplied index, bypassing\n     * the null-value check. This is a low-level method that\n     * @param {number} index\n     * @param {T['TValue'] | TNull } value\n     */\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue']) { this._setValue(this, index, value); }\n    public setValid(index: number, valid: boolean) {\n        this.length = this._nulls.set(index, +valid).length;\n        return valid;\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        throw new Error(`Cannot append children to non-nested type \"${this.type}\"`);\n    }\n\n    /**\n     * Retrieve the child `Builder` at the supplied `index`, or null if no child\n     * exists at that index.\n     * @param {number} index The index of the child `Builder` to retrieve.\n     * @returns {Builder | null} The child Builder at the supplied index or null.\n     */\n    public getChildAt<R extends DataType = any>(index: number): Builder<R> | null {\n        return this.children[index] || null;\n    }\n\n    /**\n     * Commit all the values that have been written to their underlying\n     * ArrayBuffers, including any child Builders if applicable, and reset\n     * the internal `Builder` state.\n     * @returns A `Data<T>` of the buffers and childData representing the values written.\n     */\n    public flush() {\n\n        const buffers: any = [];\n        const values =  this._values;\n        const offsets =  this._offsets;\n        const typeIds =  this._typeIds;\n        const { length, nullCount } = this;\n\n        if (typeIds) { /* Unions */\n            buffers[BufferType.TYPE] = typeIds.flush(length);\n            // DenseUnions\n            offsets && (buffers[BufferType.OFFSET] = offsets.flush(length));\n        } else if (offsets) { /* Variable-width primitives (Binary, Utf8) and Lists */\n            // Binary, Utf8\n            values && (buffers[BufferType.DATA] = values.flush(offsets.last()));\n            buffers[BufferType.OFFSET] = offsets.flush(length);\n        } else if (values) { /* Fixed-width primitives (Int, Float, Decimal, Time, Timestamp, and Interval) */\n            buffers[BufferType.DATA] = values.flush(length);\n        }\n\n        nullCount > 0 && (buffers[BufferType.VALIDITY] = this._nulls.flush(length));\n\n        const data = Data.new<T>(\n            this.type, 0, length, nullCount, buffers as Buffers<T>,\n            this.children.map((child) => child.flush())) as Data<T>;\n\n        this.clear();\n\n        return data;\n    }\n\n    /**\n     * Finalize this `Builder`, and child builders if applicable.\n     * @returns {this} The finalized `Builder` instance.\n     */\n    public finish() {\n        this.finished = true;\n        this.children.forEach((child) => child.finish());\n        return this;\n    }\n\n    /**\n     * Clear this Builder's internal state, including child Builders if applicable, and reset the length to 0.\n     * @returns {this} The cleared `Builder` instance.\n     */\n    public clear() {\n        this.length = 0;\n        this._offsets && (this._offsets.clear());\n        this._values && (this._values.clear());\n        this._nulls && (this._nulls.clear());\n        this._typeIds && (this._typeIds.clear());\n        this.children.forEach((child) => child.clear());\n        return this;\n    }\n}\n\n(Builder.prototype as any).length = 1;\n(Builder.prototype as any).stride = 1;\n(Builder.prototype as any).children = null;\n(Builder.prototype as any).finished = false;\n(Builder.prototype as any).nullValues = null;\n(Builder.prototype as any)._isValid = () => true;\n\n/** @ignore */\nexport abstract class FixedWidthBuilder<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval = any, TNull = any> extends Builder<T, TNull> {\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._values = new DataBufferBuilder(new this.ArrayType(0), this.stride);\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const values = this._values;\n        values.reserve(index - values.length + 1);\n        return super.setValue(index, value);\n    }\n}\n\n/** @ignore */\nexport abstract class VariableWidthBuilder<T extends Binary | Utf8 | List | Map_, TNull = any> extends Builder<T, TNull> {\n    protected _pendingLength: number = 0;\n    protected _offsets: OffsetsBufferBuilder;\n    protected _pending: Map<number, any> | undefined;\n    constructor(opts: BuilderOptions<T, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public setValue(index: number, value: T['TValue']) {\n        const pending = this._pending || (this._pending = new Map());\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.length);\n        this._pendingLength += value.length;\n        pending.set(index, value);\n    }\n    public setValid(index: number, isValid: boolean) {\n        if (!super.setValid(index, isValid)) {\n            (this._pending || (this._pending = new Map())).set(index, undefined);\n            return false;\n        }\n        return true;\n    }\n    public clear() {\n        this._pendingLength = 0;\n        this._pending = undefined;\n        return super.clear();\n    }\n    public flush() {\n        this._flush();\n        return super.flush();\n    }\n    public finish() {\n        this._flush();\n        return super.finish();\n    }\n    protected _flush() {\n        const pending = this._pending;\n        const pendingLength = this._pendingLength;\n        this._pendingLength = 0;\n        this._pending = undefined;\n        if (pending && pending.size > 0) {\n            this._flushPending(pending, pendingLength);\n        }\n        return this;\n    }\n    protected abstract _flushPending(pending: Map<number, any>, pendingLength: number): void;\n}\n\n/** @ignore */\ntype ThroughIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull>) => IterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return function*(source: Iterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n\n/** @ignore */\ntype ThroughAsyncIterable<T extends DataType = any, TNull = any> = (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) => AsyncIterableIterator<V<T>>;\n\n/** @ignore */\nfunction throughAsyncIterable<T extends DataType = any, TNull = any>(options: IterableBuilderOptions<T, TNull>): ThroughAsyncIterable<T, TNull> {\n    const { ['queueingStrategy']: queueingStrategy = 'count' } = options;\n    const { ['highWaterMark']: highWaterMark = queueingStrategy !== 'bytes' ? 1000 : 2 ** 14 } = options;\n    const sizeProperty: 'length' | 'byteLength' = queueingStrategy !== 'bytes' ? 'length' : 'byteLength';\n    return async function* (source: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull>) {\n        let numChunks = 0;\n        let builder = Builder.new(options);\n        for await (const value of source) {\n            if (builder.append(value)[sizeProperty] >= highWaterMark) {\n                ++numChunks && (yield builder.toVector());\n            }\n        }\n        if (builder.finish().length > 0 || numChunks === 0) {\n            yield builder.toVector();\n        }\n    };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { BitmapBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BoolBuilder<TNull = any> extends Builder<Bool, TNull> {\n    constructor(options: BuilderOptions<Bool, TNull>) {\n        super(options);\n        this._values = new BitmapBufferBuilder();\n    }\n    public setValue(index: number, value: boolean) {\n        this._values.set(index, +value);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { Builder } from '../builder';\n\n/** @ignore */\nexport class NullBuilder<TNull = any> extends Builder<Null, TNull> {\n    // @ts-ignore\n    public setValue(index: number, value: null) {}\n    public setValid(index: number, valid: boolean) {\n        this.length = Math.max(index + 1, this.length);\n        return valid;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Date_, DateDay, DateMillisecond } from '../type';\n\n/** @ignore */\nexport class DateBuilder<T extends Date_ = Date_, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class DateDayBuilder<TNull = any> extends DateBuilder<DateDay, TNull> {}\n/** @ignore */\nexport class DateMillisecondBuilder<TNull = any> extends DateBuilder<DateMillisecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class DecimalBuilder<TNull = any> extends FixedWidthBuilder<Decimal, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { IntBuilder } from './int';\nimport { Dictionary, DataType } from '../type';\nimport { Builder, BuilderOptions } from '../builder';\n\ntype DictionaryHashFunction = (x: any) => string | number;\n\nexport interface DictionaryBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    dictionaryHashFunction?: DictionaryHashFunction;\n}\n\n/** @ignore */\nexport class DictionaryBuilder<T extends Dictionary, TNull = any> extends Builder<T, TNull> {\n\n    protected _dictionaryOffset: number;\n    protected _dictionary?: Vector<T['dictionary']>;\n    protected _keysToIndices: { [key: string]: number };\n    public readonly indices: IntBuilder<T['indices']>;\n    public readonly dictionary: Builder<T['dictionary']>;\n\n    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }: DictionaryBuilderOptions<T, TNull>) {\n        super({ type: new Dictionary(type.dictionary, type.indices, type.id, type.isOrdered) as T });\n        this._nulls = <any> null;\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls }) as IntBuilder<T['indices']>;\n        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null }) as Builder<T['dictionary']>;\n        if (typeof hashFn === 'function') {\n            this.valueToKey = hashFn;\n        }\n    }\n\n    public get values() { return this.indices.values; }\n    public get nullCount() { return this.indices.nullCount; }\n    public get nullBitmap() { return this.indices.nullBitmap; }\n    public get byteLength() { return this.indices.byteLength + this.dictionary.byteLength; }\n    public get reservedLength() { return this.indices.reservedLength + this.dictionary.reservedLength; }\n    public get reservedByteLength() { return this.indices.reservedByteLength + this.dictionary.reservedByteLength; }\n    public isValid(value: T['TValue'] | TNull) { return this.indices.isValid(value); }\n    public setValid(index: number, valid: boolean) {\n        const indices = this.indices;\n        valid = indices.setValid(index, valid);\n        this.length = indices.length;\n        return valid;\n    }\n    public setValue(index: number, value: T['TValue']) {\n        let keysToIndices = this._keysToIndices;\n        let key = this.valueToKey(value);\n        let idx = keysToIndices[key];\n        if (idx === undefined) {\n            keysToIndices[key] = idx = this._dictionaryOffset + this.dictionary.append(value).length - 1;\n        }\n        return this.indices.setValue(index, idx);\n    }\n    public flush() {\n        const type = this.type;\n        const prev = this._dictionary;\n        const curr = this.dictionary.toVector();\n        const data = this.indices.flush().clone(type);\n        data.dictionary = prev ? prev.concat(curr) : curr;\n        this.finished || (this._dictionaryOffset += curr.length);\n        this._dictionary = data.dictionary as Vector<T['dictionary']>;\n        this.clear();\n        return data;\n    }\n    public finish() {\n        this.indices.finish();\n        this.dictionary.finish();\n        this._dictionaryOffset = 0;\n        this._keysToIndices = Object.create(null);\n        return super.finish();\n    }\n    public clear() {\n        this.indices.clear();\n        this.dictionary.clear();\n        return super.clear();\n    }\n    public valueToKey(val: any): string | number {\n        return typeof val === 'string' ? val : `${val}`;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedSizeBinary } from '../type';\nimport { FixedWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class FixedSizeBinaryBuilder<TNull = any> extends FixedWidthBuilder<FixedSizeBinary, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst f64 = new Float64Array(1);\nconst u32 = new Uint32Array(f64.buffer);\n\n/**\n * Convert uint16 (logically a float16) to a JS float64. Inspired by numpy's `npy_half_to_double`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L29\n * @param h {number} the uint16 to convert\n * @private\n * @ignore\n */\nexport function uint16ToFloat64(h: number) {\n    let expo = (h & 0x7C00) >> 10;\n    let sigf = (h & 0x03FF) / 1024;\n    let sign = (-1) ** ((h & 0x8000) >> 15);\n    switch (expo) {\n        case 0x1F: return sign * (sigf ? NaN : 1 / 0);\n        case 0x00: return sign * (sigf ? 6.103515625e-5 * sigf : 0);\n    }\n    return sign * (2 ** (expo - 15)) * (1 + sigf);\n}\n\n/**\n * Convert a float64 to uint16 (assuming the float64 is logically a float16). Inspired by numpy's `npy_double_to_half`:\n * https://github.com/numpy/numpy/blob/5a5987291dc95376bb098be8d8e5391e89e77a2c/numpy/core/src/npymath/halffloat.c#L43\n * @param d {number} The float64 to convert\n * @private\n * @ignore\n */\nexport function float64ToUint16(d: number) {\n\n    if (d !== d) { return 0x7E00; } // NaN\n\n    f64[0] = d;\n\n    // Magic numbers:\n    // 0x80000000 = 10000000 00000000 00000000 00000000 -- masks the 32nd bit\n    // 0x7ff00000 = 01111111 11110000 00000000 00000000 -- masks the 21st-31st bits\n    // 0x000fffff = 00000000 00001111 11111111 11111111 -- masks the 1st-20th bit\n\n    let sign = (u32[1] & 0x80000000) >> 16 & 0xFFFF;\n    let expo = (u32[1] & 0x7ff00000), sigf = 0x0000;\n\n    if (expo >= 0x40f00000) {\n        //\n        // If exponent overflowed, the float16 is either NaN or Infinity.\n        // Rules to propagate the sign bit: mantissa > 0 ? NaN : +/-Infinity\n        //\n        // Magic numbers:\n        // 0x40F00000 = 01000000 11110000 00000000 00000000 -- 6-bit exponent overflow\n        // 0x7C000000 = 01111100 00000000 00000000 00000000 -- masks the 27th-31st bits\n        //\n        // returns:\n        // qNaN, aka 32256 decimal, 0x7E00 hex, or 01111110 00000000 binary\n        // sNaN, aka 32000 decimal, 0x7D00 hex, or 01111101 00000000 binary\n        // +inf, aka 31744 decimal, 0x7C00 hex, or 01111100 00000000 binary\n        // -inf, aka 64512 decimal, 0xFC00 hex, or 11111100 00000000 binary\n        //\n        // If mantissa is greater than 23 bits, set to +Infinity like numpy\n        if (u32[0] > 0) {\n            expo = 0x7C00;\n        } else {\n            expo = (expo & 0x7C000000) >> 16;\n            sigf = (u32[1] & 0x000fffff) >> 10;\n        }\n    } else if (expo <= 0x3f000000) {\n        //\n        // If exponent underflowed, the float is either signed zero or subnormal.\n        //\n        // Magic numbers:\n        // 0x3F000000 = 00111111 00000000 00000000 00000000 -- 6-bit exponent underflow\n        //\n        sigf = 0x100000 + (u32[1] & 0x000fffff);\n        sigf = 0x100000 + (sigf << ((expo >> 20) - 998)) >> 21;\n        expo = 0;\n    } else {\n        //\n        // No overflow or underflow, rebase the exponent and round the mantissa\n        // Magic numbers:\n        // 0x200 = 00000010 00000000 -- masks off the 10th bit\n        //\n\n        // Ensure the first mantissa bit (the 10th one) is 1 and round\n        expo = (expo - 0x3f000000) >> 10;\n        sigf = ((u32[1] & 0x000fffff) + 0x200) >> 10;\n    }\n\n    return sign | expo | sigf & 0xFFFF;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { float64ToUint16 } from '../util/math';\nimport { FixedWidthBuilder } from '../builder';\nimport { Float, Float16, Float32, Float64 } from '../type';\n\n/** @ignore */\nexport class FloatBuilder<T extends Float = Float, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n\n/** @ignore */\nexport class Float16Builder<TNull = any> extends FloatBuilder<Float16, TNull> {\n    public setValue(index: number, value: number) {\n        // convert JS float64 to a uint16\n        this._values.set(index, float64ToUint16(value));\n    }\n}\n\n/** @ignore */\nexport class Float32Builder<TNull = any> extends FloatBuilder<Float32, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Float64Builder<TNull = any> extends FloatBuilder<Float64, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { ArrayBufferViewInput, toArrayBufferView } from './buffer';\nimport { TypedArray, TypedArrayConstructor } from '../interfaces';\nimport { BigIntArray, BigIntArrayConstructor } from '../interfaces';\nimport { BigIntAvailable, BigInt64Array, BigUint64Array } from './compat';\n\n/** @ignore */\nexport const isArrowBigNumSymbol = Symbol.for('isArrowBigNum');\n\n/** @ignore */ type BigNumArray = IntArray | UintArray;\n/** @ignore */ type IntArray = Int8Array | Int16Array | Int32Array;\n/** @ignore */ type UintArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray;\n\n/** @ignore */\nfunction BigNum(this: any, x: any, ...xs: any) {\n    if (xs.length === 0) {\n        return Object.setPrototypeOf(toArrayBufferView(this['TypedArray'], x), this.constructor.prototype);\n    }\n    return Object.setPrototypeOf(new this['TypedArray'](x, ...xs), this.constructor.prototype);\n}\n\nBigNum.prototype[isArrowBigNumSymbol] = true;\nBigNum.prototype.toJSON = function<T extends BN<BigNumArray>>(this: T) { return `\"${bignumToString(this)}\"`; };\nBigNum.prototype.valueOf = function<T extends BN<BigNumArray>>(this: T) { return bignumToNumber(this); };\nBigNum.prototype.toString = function<T extends BN<BigNumArray>>(this: T) { return bignumToString(this); };\nBigNum.prototype[Symbol.toPrimitive] = function<T extends BN<BigNumArray>>(this: T, hint: 'string' | 'number' | 'default' = 'default') {\n    switch (hint) {\n        case 'number': return bignumToNumber(this);\n        case 'string': return bignumToString(this);\n        case 'default': return bignumToBigInt(this);\n    }\n    return bignumToString(this);\n};\n\n/** @ignore */\ntype TypedArrayConstructorArgs =\n    [number | void] |\n    [Iterable<number> | Iterable<bigint>] |\n    [ArrayBufferLike, number | void, number | void] ;\n\n/** @ignore */\nfunction SignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction UnsignedBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n/** @ignore */\nfunction DecimalBigNum(this: any, ...args: TypedArrayConstructorArgs) { return BigNum.apply(this, args); }\n\nObject.setPrototypeOf(SignedBigNum.prototype,   Object.create(Int32Array.prototype));\nObject.setPrototypeOf(UnsignedBigNum.prototype, Object.create(Uint32Array.prototype));\nObject.setPrototypeOf(DecimalBigNum.prototype,  Object.create(Uint32Array.prototype));\nObject.assign(SignedBigNum.prototype,   BigNum.prototype, { 'constructor': SignedBigNum,   'signed': true,  'TypedArray': Int32Array,  'BigIntArray': BigInt64Array  });\nObject.assign(UnsignedBigNum.prototype, BigNum.prototype, { 'constructor': UnsignedBigNum, 'signed': false, 'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\nObject.assign(DecimalBigNum.prototype,  BigNum.prototype, { 'constructor': DecimalBigNum,  'signed': true,  'TypedArray': Uint32Array, 'BigIntArray': BigUint64Array });\n\n/** @ignore */\nfunction bignumToNumber<T extends BN<BigNumArray>>(bn: T) {\n    let { buffer, byteOffset, length, 'signed': signed } = bn;\n    let words = new Int32Array(buffer, byteOffset, length);\n    let number = 0, i = 0, n = words.length, hi, lo;\n    while (i < n) {\n        lo = words[i++];\n        hi = words[i++];\n        signed || (hi = hi >>> 0);\n        number += (lo >>> 0) + (hi * (i ** 32));\n    }\n    return number;\n}\n\n/** @ignore */\nexport let bignumToString: { <T extends BN<BigNumArray>>(a: T): string; };\n/** @ignore */\nexport let bignumToBigInt: { <T extends BN<BigNumArray>>(a: T): bigint; };\n\nif (!BigIntAvailable) {\n    bignumToString = decimalToString;\n    bignumToBigInt = <any> bignumToString;\n} else {\n    bignumToBigInt = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0] : <any>decimalToString(a));\n    bignumToString = (<T extends BN<BigNumArray>>(a: T) => a.byteLength === 8 ? `${new a['BigIntArray'](a.buffer, a.byteOffset, 1)[0]}` : decimalToString(a));\n}\n\n/** @ignore */\nfunction decimalToString<T extends BN<BigNumArray>>(a: T) {\n    let digits = '';\n    let base64 = new Uint32Array(2);\n    let base32 = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    let checks = new Uint32Array((base32 = new Uint16Array(base32).reverse()).buffer);\n    let i = -1, n = base32.length - 1;\n    do {\n        for (base64[0] = base32[i = 0]; i < n;) {\n            base32[i++] = base64[1] = base64[0] / 10;\n            base64[0] = ((base64[0] - base64[1] * 10) << 16) + base32[i];\n        }\n        base32[i] = base64[1] = base64[0] / 10;\n        base64[0] = base64[0] - base64[1] * 10;\n        digits = `${base64[0]}${digits}`;\n    } while (checks[0] || checks[1] || checks[2] || checks[3]);\n    return digits ? digits : `0`;\n}\n\n/** @ignore */\nexport class BN<T extends BigNumArray> {\n    /** @nocollapse */\n    public static new<T extends BigNumArray>(num: T, isSigned?: boolean): (T & BN<T>) {\n        switch (isSigned) {\n            case true: return new (<any> SignedBigNum)(num) as (T & BN<T>);\n            case false: return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n        }\n        switch (num.constructor) {\n            case Int8Array:\n            case Int16Array:\n            case Int32Array:\n            case BigInt64Array:\n                return new (<any> SignedBigNum)(num) as (T & BN<T>);\n        }\n        if (num.byteLength === 16) {\n            return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n        }\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static signed<T extends IntArray>(num: T): (T & BN<T>) {\n        return new (<any> SignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static unsigned<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> UnsignedBigNum)(num) as (T & BN<T>);\n    }\n    /** @nocollapse */\n    public static decimal<T extends UintArray>(num: T): (T & BN<T>) {\n        return new (<any> DecimalBigNum)(num) as (T & BN<T>);\n    }\n    constructor(num: T, isSigned?: boolean) {\n        return BN.new(num, isSigned) as any;\n    }\n}\n\n/** @ignore */\nexport interface BN<T extends BigNumArray> extends TypedArrayLike<T> {\n\n    new<T extends ArrayBufferViewInput>(buffer: T, signed?: boolean): T;\n\n    readonly signed: boolean;\n    readonly TypedArray: TypedArrayConstructor<TypedArray>;\n    readonly BigIntArray: BigIntArrayConstructor<BigIntArray>;\n\n    [Symbol.toStringTag]:\n        'Int8Array'         |\n        'Int16Array'        |\n        'Int32Array'        |\n        'Uint8Array'        |\n        'Uint16Array'       |\n        'Uint32Array'       |\n        'Uint8ClampedArray';\n\n    /**\n     * Convert the bytes to their (positive) decimal representation for printing\n     */\n    toString(): string;\n    /**\n     * Down-convert the bytes to a 53-bit precision integer. Invoked by JS for\n     * arithmetic operators, like `+`. Easy (and unsafe) way to convert BN to\n     * number via `+bn_inst`\n     */\n    valueOf(): number;\n    /**\n     * Return the JSON representation of the bytes. Must be wrapped in double-quotes,\n     * so it's compatible with JSON.stringify().\n     */\n    toJSON(): string;\n    [Symbol.toPrimitive](hint?: any): number | string | bigint;\n}\n\n/** @ignore */\ninterface TypedArrayLike<T extends BigNumArray> {\n\n    readonly length: number;\n    readonly buffer: ArrayBuffer;\n    readonly byteLength: number;\n    readonly byteOffset: number;\n    readonly BYTES_PER_ELEMENT: number;\n\n    includes(searchElement: number, fromIndex?: number | undefined): boolean;\n    copyWithin(target: number, start: number, end?: number | undefined): this;\n    every(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    fill(value: number, start?: number | undefined, end?: number | undefined): this;\n    filter(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): T;\n    find(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number | undefined;\n    findIndex(predicate: (value: number, index: number, obj: T) => boolean, thisArg?: any): number;\n    forEach(callbackfn: (value: number, index: number, array: T) => void, thisArg?: any): void;\n    indexOf(searchElement: number, fromIndex?: number | undefined): number;\n    join(separator?: string | undefined): string;\n    lastIndexOf(searchElement: number, fromIndex?: number | undefined): number;\n    map(callbackfn: (value: number, index: number, array: T) => number, thisArg?: any): T;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number): number;\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: T) => number, initialValue: number): number;\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: T) => U, initialValue: U): U;\n    reverse(): T;\n    set(array: ArrayLike<number>, offset?: number | undefined): void;\n    slice(start?: number | undefined, end?: number | undefined): T;\n    some(callbackfn: (value: number, index: number, array: T) => boolean, thisArg?: any): boolean;\n    sort(compareFn?: ((a: number, b: number) => number) | undefined): this;\n    subarray(begin: number, end?: number | undefined): T;\n    toLocaleString(): string;\n    entries(): IterableIterator<[number, number]>;\n    keys(): IterableIterator<number>;\n    values(): IterableIterator<number>;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { bignumToBigInt } from '../util/bn';\nimport { WideBufferBuilder } from './buffer';\nimport { BigInt64Array } from '../util/compat';\nimport { FixedWidthBuilder, BuilderOptions } from '../builder';\nimport { Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64 } from '../type';\n\n/** @ignore */\nexport class IntBuilder<T extends Int = Int, TNull = any> extends FixedWidthBuilder<T, TNull> {\n    public setValue(index: number, value: T['TValue']) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Int8Builder<TNull = any> extends IntBuilder<Int8, TNull> {}\n/** @ignore */\nexport class Int16Builder<TNull = any> extends IntBuilder<Int16, TNull> {}\n/** @ignore */\nexport class Int32Builder<TNull = any> extends IntBuilder<Int32, TNull> {}\n/** @ignore */\nexport class Int64Builder<TNull = any> extends IntBuilder<Int64, TNull> {\n    protected _values: WideBufferBuilder<Int32Array, BigInt64Array>;\n    constructor(options: BuilderOptions<Int64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Int32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Int32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\n/** @ignore */\nexport class Uint8Builder<TNull = any> extends IntBuilder<Uint8, TNull> {}\n/** @ignore */\nexport class Uint16Builder<TNull = any> extends IntBuilder<Uint16, TNull> {}\n/** @ignore */\nexport class Uint32Builder<TNull = any> extends IntBuilder<Uint32, TNull> {}\n/** @ignore */\nexport class Uint64Builder<TNull = any> extends IntBuilder<Uint64, TNull> {\n    protected _values: WideBufferBuilder<Uint32Array, BigUint64Array>;\n    constructor(options: BuilderOptions<Uint64, TNull>) {\n        if (options['nullValues']) {\n            options['nullValues'] = (options['nullValues'] as TNull[]).map(toBigInt);\n        }\n        super(options);\n        this._values = new WideBufferBuilder(new Uint32Array(0), 2);\n    }\n    public get values64() { return this._values.buffer64; }\n    public isValid(value: Uint32Array | bigint | TNull) { return super.isValid(toBigInt(value)); }\n}\n\nconst toBigInt = ((memo: any) => (value: any) => {\n    if (ArrayBuffer.isView(value)) {\n        memo.buffer = value.buffer;\n        memo.byteOffset = value.byteOffset;\n        memo.byteLength = value.byteLength;\n        value = bignumToBigInt(memo);\n        memo.buffer = null;\n    }\n    return value;\n})({ 'BigIntArray': BigInt64Array });\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeBuilder<T extends Time = Time, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimeSecondBuilder<TNull = any> extends TimeBuilder<TimeSecond, TNull> {}\n/** @ignore */\nexport class TimeMillisecondBuilder<TNull = any> extends TimeBuilder<TimeMillisecond, TNull> {}\n/** @ignore */\nexport class TimeMicrosecondBuilder<TNull = any> extends TimeBuilder<TimeMicrosecond, TNull> {}\n/** @ignore */\nexport class TimeNanosecondBuilder<TNull = any> extends TimeBuilder<TimeNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampBuilder<T extends Timestamp = Timestamp, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class TimestampSecondBuilder<TNull = any> extends TimestampBuilder<TimestampSecond, TNull> {}\n/** @ignore */\nexport class TimestampMillisecondBuilder<TNull = any> extends TimestampBuilder<TimestampMillisecond, TNull> {}\n/** @ignore */\nexport class TimestampMicrosecondBuilder<TNull = any> extends TimestampBuilder<TimestampMicrosecond, TNull> {}\n/** @ignore */\nexport class TimestampNanosecondBuilder<TNull = any> extends TimestampBuilder<TimestampNanosecond, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FixedWidthBuilder } from '../builder';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalBuilder<T extends Interval = Interval, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n/** @ignore */\nexport class IntervalDayTimeBuilder<TNull = any> extends IntervalBuilder<IntervalDayTime, TNull> {}\n/** @ignore */\nexport class IntervalYearMonthBuilder<TNull = any> extends IntervalBuilder<IntervalYearMonth, TNull> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Binary } from '../type';\nimport { toUint8Array } from '../util/buffer';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class BinaryBuilder<TNull = any> extends VariableWidthBuilder<Binary, TNull> {\n    constructor(opts: BuilderOptions<Binary, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: Uint8Array) {\n        return super.setValue(index, toUint8Array(value));\n    }\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number) {\n        const offsets = this._offsets;\n        const data = this._values.reserve(pendingLength).buffer;\n        let index = 0, length = 0, offset = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                length = value.length;\n                data.set(value, offset);\n                offsets.set(index, length);\n                offset += length;\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Utf8 } from '../type';\nimport { encodeUtf8 } from '../util/utf8';\nimport { BinaryBuilder } from './binary';\nimport { BufferBuilder } from './buffer';\nimport { VariableWidthBuilder, BuilderOptions } from '../builder';\n\n/** @ignore */\nexport class Utf8Builder<TNull = any> extends VariableWidthBuilder<Utf8, TNull> {\n    constructor(opts: BuilderOptions<Utf8, TNull>) {\n        super(opts);\n        this._values = new BufferBuilder(new Uint8Array(0));\n    }\n    public get byteLength(): number {\n        let size = this._pendingLength + (this.length * 4);\n        this._offsets && (size += this._offsets.byteLength);\n        this._values && (size += this._values.byteLength);\n        this._nulls && (size += this._nulls.byteLength);\n        return size;\n    }\n    public setValue(index: number, value: string) {\n        return super.setValue(index, encodeUtf8(value) as any);\n    }\n    // @ts-ignore\n    protected _flushPending(pending: Map<number, Uint8Array | undefined>, pendingLength: number): void {}\n}\n\n(Utf8Builder.prototype as any)._flushPending = (BinaryBuilder.prototype as any)._flushPending;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\n\n/** @ignore */\nexport class Run<T extends DataType = any, TNull = any> {\n    // @ts-ignore\n    protected _values: ArrayLike<T['TValue'] | TNull>;\n    public get length() { return this._values.length; }\n    public get(index: number) { return this._values[index]; }\n    public clear() { this._values = <any> null; return this; }\n    public bind(values: Vector<T> | ArrayLike<T['TValue'] | TNull>) {\n        if (values instanceof Vector) {\n            return values;\n        }\n        this._values = values;\n        return this as any;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { StructVector } from './struct';\nimport { valueToString } from '../util/pretty';\nimport { DataType, Struct, RowLike } from '../type';\n\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nabstract class Row<K extends PropertyKey = any, V = any> implements Map<K, V> {\n\n    public readonly size: number;\n    public readonly [Symbol.toStringTag]: string;\n\n    protected [kRowIndex]: number;\n    protected [kParent]: Vector<Struct>;\n    protected [kKeyToIdx]: Map<K, number>;\n    protected [kIdxToVal]: V[];\n\n    constructor(parent: Vector<Struct>, numKeys: number) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n\n    public abstract keys(): IterableIterator<K>;\n    public abstract values(): IterableIterator<V>;\n    public abstract getKey(idx: number): K;\n    public abstract getIndex(key: K): number;\n    public abstract getValue(idx: number): V;\n    public abstract setValue(idx: number, val: V): void;\n\n    public entries() { return this[Symbol.iterator](); }\n\n    public has(key: K) { return this.get(key) !== undefined; }\n\n    public get(key: K) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            } else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n\n    public set(key: K, val: V) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = <any> this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n\n    public clear(): void { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n\n    public delete(_: K): boolean { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n\n    public *[Symbol.iterator](): IterableIterator<[K, V]> {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n\n    public forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v: V, k: K, m: Map<K, V>) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n\n    public toArray() { return [...this.values()]; }\n    public toJSON() {\n        const obj = {} as any;\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n\n    public inspect() { return this.toString(); }\n    public [kCustomInspect]() { return this.toString(); }\n    public toString() {\n        const str: string[] = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: Row) => {\n        Object.defineProperties(proto, {\n            'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n            [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n            [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n        });\n        return (proto as any)[Symbol.toStringTag] = 'Row';\n    })(Row.prototype);\n}\n\nexport class MapRow<K extends DataType = any, V extends DataType = any> extends Row<K['TValue'], V['TValue'] | null> {\n    constructor(slice: Vector<Struct<{ key: K, value: V }>>) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    public keys() {\n        return this[kParent].getChildAt(0)![Symbol.iterator]();\n    }\n    public values() {\n        return this[kParent].getChildAt(1)![Symbol.iterator]();\n    }\n    public getKey(idx: number): K['TValue'] {\n        return this[kParent].getChildAt(0)!.get(idx);\n    }\n    public getIndex(key: K['TValue']): number {\n        return this[kParent].getChildAt(0)!.indexOf(key);\n    }\n    public getValue(index: number): V['TValue'] | null {\n        return this[kParent].getChildAt(1)!.get(index);\n    }\n    public setValue(index: number, value: V['TValue'] | null): void {\n        this[kParent].getChildAt(1)!.set(index, value);\n    }\n}\n\nexport class StructRow<T extends { [key: string]: DataType } = any> extends Row<keyof T, T[keyof T]['TValue'] | null> {\n    constructor(parent: StructVector<T>) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    public *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name as keyof T;\n        }\n    }\n    public *values() {\n        for (const field of this[kParent].type.children) {\n            yield (this as RowLike<T>)[field.name];\n        }\n    }\n    public getKey(idx: number): keyof T {\n        return this[kParent].type.children[idx].name as keyof T;\n    }\n    public getIndex(key: keyof T): number {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    public getValue(index: number): T[keyof T]['TValue'] | null {\n        return this[kParent].getChildAt(index)!.get(this[kRowIndex]);\n    }\n    public setValue(index: number, value: T[keyof T]['TValue'] | null): void {\n        return this[kParent].getChildAt(index)!.set(this[kRowIndex], value);\n    }\n}\n\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null as any, set: null as any };\n    return <T extends Row>(row: T) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key: any) => function(this: T) { return this.get(key); };\n        const setter = (key: any) => function(this: T, val: any) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler: ProxyHandler<Row> = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row: Row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row: Row, key: PropertyKey) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row: Row, key: PropertyKey, receiver: any) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row: Row, key: PropertyKey, val: any, receiver: any) {\n            switch (key) {\n                case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return <T extends Row>(row: T) => new Proxy(row, RowProxyHandler) as T;\n})();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n\n/** @ignore */\ntype RangeLike = { length: number; stride?: number };\n/** @ignore */\ntype ClampThen<T extends RangeLike> = (source: T, index: number) => any;\n/** @ignore */\ntype ClampRangeThen<T extends RangeLike> = (source: T, offset: number, length: number) => any;\n\nexport function clampIndex<T extends RangeLike>(source: T, index: number): number;\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then?: N) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n\n/** @ignore */\nlet tmp: number;\nexport function clampRange<T extends RangeLike>(source: T, begin: number | undefined, end: number | undefined): [number, number];\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then?: N) {\n\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n     // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\n\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = (value: any) => value !== value;\n\n/** @ignore */\nexport function createElementComparator(search: any) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value: any) => value === search\n            : (value: any) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value: any) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value: any) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) { return creatMapComparator(search); }\n    // Compare Array-likes\n    if (Array.isArray(search)) { return createArrayLikeComparator(search); }\n    // Compare Vectors\n    if (search instanceof Vector) { return createVectorComparator(search); }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\n\n/** @ignore */\nfunction createArrayLikeComparator(lhs: ArrayLike<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction creatMapComparator(lhs: Map<any, any>) {\n    let i = -1;\n    const comparators = [] as ((x: any) => boolean)[];\n    lhs.forEach((v) => comparators[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createVectorComparator(lhs: Vector<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createObjectComparator(lhs: any) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) { return () => false; }\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\n\nfunction createSubElementsComparator(comparators: ((x: any) => boolean)[], keys?: Iterable<string>) {\n    return (rhs: any) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n            case MapRow:\n            case StructRow:\n                return compareObject(comparators, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\n\nfunction compareArray(comparators: ((x: any) => boolean)[], arr: any[]) {\n    const n = comparators.length;\n    if (arr.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) { return false; }\n    }\n    return true;\n}\n\nfunction compareVector(comparators: ((x: any) => boolean)[], vec: Vector) {\n    const n = comparators.length;\n    if (vec.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) { return false; }\n    }\n    return true;\n}\n\nfunction compareObject(comparators: ((x: any) => boolean)[], obj: Map<any, any>, keys: Iterable<string>) {\n\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n\n    let i = 0;\n    let n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done;\n         ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { clampRange } from '../util/vector';\nimport { DataType, Dictionary } from '../type';\nimport { selectChunkArgs } from '../util/args';\nimport { DictionaryVector } from './dictionary';\nimport { AbstractVector, Vector } from '../vector';\nimport { Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\ntype ChunkedDict<T extends DataType> = T extends Dictionary ? Vector<T['dictionary']> : null | never;\n/** @ignore */\ntype ChunkedKeys<T extends DataType> = T extends Dictionary ? Vector<T['indices']> | Chunked<T['indices']> : null | never;\n\n/** @ignore */\nexport type SearchContinuation<T extends Chunked> = (column: T, chunkIndex: number, valueIndex: number) => any;\n\n/** @ignore */\nexport class Chunked<T extends DataType = any>\n    extends AbstractVector<T>\n    implements Clonable<Chunked<T>>,\n               Sliceable<Chunked<T>>,\n               Applicative<T, Chunked<T>> {\n\n    /** @nocollapse */\n    public static flatten<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        return selectChunkArgs<Vector<T>>(Vector, vectors);\n    }\n\n    /** @nocollapse */\n    public static concat<T extends DataType>(...vectors: (Vector<T> | Vector<T>[])[]) {\n        const chunks = Chunked.flatten<T>(...vectors);\n        return new Chunked<T>(chunks[0].type, chunks);\n    }\n\n    protected _type: T;\n    protected _length: number;\n    protected _chunks: Vector<T>[];\n    protected _numChildren: number;\n    protected _children?: Chunked[];\n    protected _nullCount: number = -1;\n    protected _chunkOffsets: Uint32Array;\n\n    constructor(type: T, chunks: Vector<T>[] = [], offsets = calculateOffsets(chunks)) {\n        super();\n        this._type = type;\n        this._chunks = chunks;\n        this._chunkOffsets = offsets;\n        this._length = offsets[offsets.length - 1];\n        this._numChildren = (this._type.children || []).length;\n    }\n\n    public get type() { return this._type; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get typeId(): T['TType'] { return this._type.typeId; }\n    public get VectorName() { return `Chunked<${this._type}>`; }\n    public get data(): Data<T> {\n        return this._chunks[0] ? this._chunks[0].data : <any> null;\n    }\n\n    public get ArrayType() { return this._type.ArrayType; }\n    public get numChildren() { return this._numChildren; }\n    public get stride() { return this._chunks[0] ? this._chunks[0].stride : 1; }\n    public get byteLength(): number {\n        return this._chunks.reduce((byteLength, chunk) => byteLength + chunk.byteLength, 0);\n    }\n    public get nullCount() {\n        let nullCount = this._nullCount;\n        if (nullCount < 0) {\n            this._nullCount = nullCount = this._chunks.reduce((x, { nullCount }) => x + nullCount, 0);\n        }\n        return nullCount;\n    }\n\n    protected _indices?: ChunkedKeys<T>;\n    public get indices(): ChunkedKeys<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            if (!this._indices) {\n                const chunks = (<any> this._chunks) as DictionaryVector<T, any>[];\n                this._indices = (chunks.length === 1\n                    ? chunks[0].indices\n                    : Chunked.concat(...chunks.map((x) => x.indices))) as ChunkedKeys<T>;\n            }\n            return this._indices;\n        }\n        return null;\n    }\n    public get dictionary(): ChunkedDict<T> | null {\n        if (DataType.isDictionary(this._type)) {\n            return this._chunks[this._chunks.length - 1].data.dictionary as ChunkedDict<T>;\n        }\n        return null;\n    }\n\n    public *[Symbol.iterator](): IterableIterator<T['TValue'] | null> {\n        for (const chunk of this._chunks) {\n            yield* chunk;\n        }\n    }\n\n    public clone(chunks = this._chunks): Chunked<T> {\n        return new Chunked(this._type, chunks);\n    }\n\n    public concat(...others: Vector<T>[]): Chunked<T> {\n        return this.clone(Chunked.flatten(this, ...others));\n    }\n\n    public slice(begin?: number, end?: number): Chunked<T> {\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Chunked<R> | null {\n\n        if (index < 0 || index >= this._numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let child: Chunked<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (child = columns[index]) { return child; }\n        if (field = ((this._type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Chunked<R>(field.type, chunks));\n            }\n        }\n\n        return null;\n    }\n\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        let idx = index;\n        // binary search to find the child vector and value indices\n        let offsets = this._chunkOffsets, rhs = offsets.length - 1;\n        // return early if out of bounds, or if there's just one child\n        if (idx < 0            ) { return null; }\n        if (idx >= offsets[rhs]) { return null; }\n        if (rhs <= 1           ) { return then ? then(this, 0, idx) : [0, idx]; }\n        let lhs = 0, pos = 0, mid = 0;\n        do {\n            if (lhs + 1 === rhs) {\n                return then ? then(this, lhs, idx - pos) : [lhs, idx - pos];\n            }\n            mid = lhs + ((rhs - lhs) / 2) | 0;\n            idx >= offsets[mid] ? (lhs = mid) : (rhs = mid);\n        } while (idx < offsets[rhs] && idx >= (pos = offsets[lhs]));\n        return null;\n    }\n\n    public isValid(index: number): boolean {\n        return !!this.search(index, this.isValidInternal);\n    }\n\n    public get(index: number): T['TValue'] | null {\n        return this.search(index, this.getInternal);\n    }\n\n    public set(index: number, value: T['TValue'] | null): void {\n        this.search(index, ({ chunks }, i, j) => chunks[i].set(j, value));\n    }\n\n    public indexOf(element: T['TValue'], offset?: number): number {\n        if (offset && typeof offset === 'number') {\n            return this.search(offset, (self, i, j) => this.indexOfInternal(self, i, j, element))!;\n        }\n        return this.indexOfInternal(this, 0, Math.max(0, offset || 0), element);\n    }\n\n    public toArray(): T['TArray'] {\n        const { chunks } = this;\n        const n = chunks.length;\n        let ArrayType: any = this._type.ArrayType;\n        if (n <= 0) { return new ArrayType(0); }\n        if (n <= 1) { return chunks[0].toArray(); }\n        let len = 0, src = new Array(n);\n        for (let i = -1; ++i < n;) {\n            len += (src[i] = chunks[i].toArray()).length;\n        }\n        if (ArrayType !== src[0].constructor) {\n            ArrayType = src[0].constructor;\n        }\n        let dst = new ArrayType(len);\n        let set: any = ArrayType === Array ? arraySet : typedSet;\n        for (let i = -1, idx = 0; ++i < n;) {\n            idx = set(src[i], dst, idx);\n        }\n        return dst;\n    }\n\n    protected getInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].get(j); }\n    protected isValidInternal({ _chunks }: Chunked<T>, i: number, j: number) { return _chunks[i].isValid(j); }\n    protected indexOfInternal({ _chunks }: Chunked<T>, chunkIndex: number, fromIndex: number, element: T['TValue']) {\n        let i = chunkIndex - 1, n = _chunks.length;\n        let start = fromIndex, offset = 0, found = -1;\n        while (++i < n) {\n            if (~(found = _chunks[i].indexOf(element, start))) {\n                return offset + found;\n            }\n            start = 0;\n            offset += _chunks[i].length;\n        }\n        return -1;\n    }\n\n    protected _sliceInternal(self: Chunked<T>, begin: number, end: number) {\n        const slices: Vector<T>[] = [];\n        const { chunks, _chunkOffsets: chunkOffsets } = self;\n        for (let i = -1, n = chunks.length; ++i < n;) {\n            const chunk = chunks[i];\n            const chunkLength = chunk.length;\n            const chunkOffset = chunkOffsets[i];\n            // If the child is to the right of the slice boundary, we can stop\n            if (chunkOffset >= end) { break; }\n            // If the child is to the left of of the slice boundary, exclude\n            if (begin >= chunkOffset + chunkLength) { continue; }\n            // If the child is between both left and right boundaries, include w/o slicing\n            if (chunkOffset >= begin && (chunkOffset + chunkLength) <= end) {\n                slices.push(chunk);\n                continue;\n            }\n            // If the child overlaps one of the slice boundaries, include that slice\n            const from = Math.max(0, begin - chunkOffset);\n            const to = Math.min(end - chunkOffset, chunkLength);\n            slices.push(chunk.slice(from, to) as Vector<T>);\n        }\n        return self.clone(slices);\n    }\n}\n\n/** @ignore */\nfunction calculateOffsets<T extends DataType>(vectors: Vector<T>[]) {\n    let offsets = new Uint32Array((vectors || []).length + 1);\n    let offset = offsets[0] = 0, length = offsets.length;\n    for (let index = 0; ++index < length;) {\n        offsets[index] = (offset += vectors[index - 1].length);\n    }\n    return offsets;\n}\n\n/** @ignore */\nconst typedSet = (src: TypedArray, dst: TypedArray, offset: number) => {\n    dst.set(src, offset);\n    return (offset + src.length);\n};\n\n/** @ignore */\nconst arraySet = (src: any[], dst: any[], offset: number) => {\n    let idx = offset;\n    for (let i = -1, n = src.length; ++i < n;) {\n        dst[idx++] = src[i];\n    }\n    return idx;\n};\n\n/** @ignore */\ninterface TypedArray extends ArrayBufferView {\n    readonly length: number;\n    readonly [n: number]: number;\n    set(array: ArrayLike<number>, offset?: number): void;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Field } from './schema';\nimport { DataType } from './type';\nimport { Vector } from './vector';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { VectorCtorArgs, VectorType as V } from './interfaces';\nimport { Chunked, SearchContinuation } from './vector/chunked';\n\nexport interface Column<T extends DataType = any> {\n    typeId: T['TType'];\n    concat(...others: Vector<T>[]): Column<T>;\n    slice(begin?: number, end?: number): Column<T>;\n    clone(chunks?: Vector<T>[], offsets?: Uint32Array): Column<T>;\n}\n\nexport class Column<T extends DataType = any>\n    extends Chunked<T>\n    implements Clonable<Column<T>>,\n               Sliceable<Column<T>>,\n               Applicative<T, Column<T>> {\n\n    public static new<T extends DataType>(field: string | Field<T>, ...chunks: (Vector<T> | Vector<T>[])[]): Column<T>;\n    public static new<T extends DataType>(field: string | Field<T>, data: Data<T>, ...args: VectorCtorArgs<V<T>>): Column<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(field: string | Field<T>, data: Data<T> | Vector<T> | (Data<T> | Vector<T>)[], ...rest: any[]) {\n\n        const chunks = Chunked.flatten<T>(\n            Array.isArray(data) ? [...data, ...rest] :\n            data instanceof Vector ? [data, ...rest] :\n            [Vector.new(data, ...rest)]\n        );\n\n        if (typeof field === 'string') {\n            const type = chunks[0].data.type;\n            field = new Field(field, type, true);\n        } else if (!field.nullable && chunks.some(({ nullCount }) => nullCount > 0)) {\n            field = field.clone({ nullable: true });\n        }\n        return new Column(field, chunks);\n    }\n\n    constructor(field: Field<T>, vectors: Vector<T>[] = [], offsets?: Uint32Array) {\n        vectors = Chunked.flatten<T>(...vectors);\n        super(field.type, vectors, offsets);\n        this._field = field;\n        if (vectors.length === 1 && !(this instanceof SingleChunkColumn)) {\n            return new SingleChunkColumn(field, vectors[0], this._chunkOffsets);\n        }\n    }\n\n    protected _field: Field<T>;\n    protected _children?: Column[];\n\n    public get field() { return this._field; }\n    public get name() { return this._field.name; }\n    public get nullable() { return this._field.nullable; }\n    public get metadata() { return this._field.metadata; }\n\n    public clone(chunks = this._chunks) {\n        return new Column(this._field, chunks);\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n\n        if (index < 0 || index >= this.numChildren) { return null; }\n\n        let columns = this._children || (this._children = []);\n        let column: Column<R>, field: Field<R>, chunks: Vector<R>[];\n\n        if (column = columns[index]) { return column; }\n        if (field = ((this.type.children || [])[index] as Field<R>)) {\n            chunks = this._chunks\n                .map((vector) => vector.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n\n        return null;\n    }\n}\n\n/** @ignore */\nclass SingleChunkColumn<T extends DataType = any> extends Column<T> {\n    protected _chunk: Vector<T>;\n    constructor(field: Field<T>, vector: Vector<T>, offsets?: Uint32Array) {\n        super(field, [vector], offsets);\n        this._chunk = vector;\n    }\n    public search(index: number): [number, number] | null;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N): ReturnType<N>;\n    public search<N extends SearchContinuation<Chunked<T>>>(index: number, then?: N) {\n        return then ? then(this, 0, index) : [0, index];\n    }\n    public isValid(index: number): boolean {\n        return this._chunk.isValid(index);\n    }\n    public get(index: number): T['TValue'] | null {\n        return this._chunk.get(index);\n    }\n    public set(index: number, value: T['TValue'] | null): void {\n        this._chunk.set(index, value);\n    }\n    public indexOf(element: T['TValue'], offset?: number): number {\n        return this._chunk.indexOf(element, offset);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from '../vector/chunked';\n\ntype RecordBatchCtor = typeof import('../recordbatch').RecordBatch;\n\nconst isArray = Array.isArray;\n\n/** @ignore */\nexport const selectArgs = <T>(Ctor: any, vals: any[]) => _selectArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnArgs = <T extends { [key: string]: DataType }>(args: any[]) => {\n    const [fields, values] = _selectFieldArgs<T>(args, [[], []]);\n    return values.map((x, i) =>\n        x instanceof Column ? Column.new(x.field.clone(fields[i]), x) :\n        x instanceof Vector ? Column.new(fields[i], x) as Column<T[keyof T]> :\n                              Column.new(fields[i], [] as Vector<T[keyof T]>[]));\n};\n\n/** @ignore */\nexport const selectFieldArgs = <T extends { [key: string]: DataType }>(args: any[]) => _selectFieldArgs<T>(args, [[], []]);\n/** @ignore */\nexport const selectChunkArgs = <T>(Ctor: any, vals: any[]) => _selectChunkArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectVectorChildrenArgs = <T extends Vector>(Ctor: RecordBatchCtor, vals: any[]) => _selectVectorChildrenArgs(Ctor, vals, [], 0) as T[];\n/** @ignore */\nexport const selectColumnChildrenArgs = <T extends Column>(Ctor: RecordBatchCtor, vals: any[]) => _selectColumnChildrenArgs(Ctor, vals, [], 0) as T[];\n\n/** @ignore */\nfunction _selectArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectChunkArgs<T>(Ctor: any, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectChunkArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Chunked) {\n            j = _selectChunkArgs(Ctor, value.chunks, res, j).length;\n        } else if (value instanceof Ctor) { res[j++] = value; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectVectorChildrenArgs<T extends Vector>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectVectorChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Vector, value.schema.fields.map((_, i) => value.getChildAt(i)!), res, j).length;\n        } else if (value instanceof Vector) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nfunction _selectColumnChildrenArgs<T extends Column>(Ctor: RecordBatchCtor, vals: any[], res: T[], idx: number) {\n    let value: any, j = idx;\n    let i = -1, n = vals.length;\n    while (++i < n) {\n        if (isArray(value = vals[i])) {\n            j = _selectColumnChildrenArgs(Ctor, value, res, j).length;\n        } else if (value instanceof Ctor) {\n            j = _selectArgs(Column, value.schema.fields.map((f, i) => Column.new(f, value.getChildAt(i)!)), res, j).length;\n        } else if (value instanceof Column) { res[j++] = value as T; }\n    }\n    return res;\n}\n\n/** @ignore */\nconst toKeysAndValues = (xs: [any[], any[]], [k, v]: [any, any], i: number) => (xs[0][i] = k, xs[1][i] = v, xs);\n\n/** @ignore */\nfunction _selectFieldArgs<T extends { [key: string]: DataType }>(vals: any[], ret: [Field<T[keyof T]>[], Vector<T[keyof T]>[]]): [Field<T[keyof T]>[], (T[keyof T] | Vector<T[keyof T]>)[]] {\n    let keys: any[], n: number;\n    switch (n = vals.length) {\n        case 0: return ret;\n        case 1:\n            keys = ret[0];\n            if (!(vals[0])) { return ret; }\n            if (isArray(vals[0])) { return _selectFieldArgs(vals[0], ret); }\n            if (!(vals[0] instanceof Data || vals[0] instanceof Vector || vals[0] instanceof DataType)) {\n                [keys, vals] = Object.entries(vals[0]).reduce(toKeysAndValues, ret);\n            }\n            break;\n        default:\n            !isArray(keys = vals[n - 1])\n                ? (vals = isArray(vals[0]) ? vals[0] : vals, keys = [])\n                : (vals = isArray(vals[0]) ? vals[0] : vals.slice(0, n - 1));\n    }\n\n    let fieldIndex = -1;\n    let valueIndex = -1;\n    let idx = -1, len = vals.length;\n    let field: number | string | Field<T[keyof T]>;\n    let val: Vector<T[keyof T]> | Data<T[keyof T]>;\n    let [fields, values] = ret as [Field<T[keyof T]>[], any[]];\n\n    while (++idx < len) {\n        val = vals[idx];\n        if (val instanceof Column && (values[++valueIndex] = val)) {\n            fields[++fieldIndex] = val.field.clone(keys[idx], val.type, true);\n        } else {\n            ({ [idx]: field = idx } = keys);\n            if (val instanceof DataType && (values[++valueIndex] = val)) {\n                fields[++fieldIndex] = Field.new(field, val as DataType, true) as Field<T[keyof T]>;\n            } else if (val && val.type && (values[++valueIndex] = val)) {\n                val instanceof Data && (values[valueIndex] = val = Vector.new(val) as Vector);\n                fields[++fieldIndex] = Field.new(field, val.type, true) as Field<T[keyof T]>;\n            }\n        }\n    }\n    return ret;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Vector } from './vector';\nimport { DataType } from './type';\nimport { selectArgs } from './util/args';\nimport { selectFieldArgs } from './util/args';\nimport { instance as comparer } from './visitor/typecomparator';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = T[keyof T][] | Data<T[keyof T]>[] | Vector<T[keyof T]>[];\n\nexport class Schema<T extends { [key: string]: DataType } = any> {\n\n    public static from<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static from<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static from<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static from(...args: any[]) {\n        return Schema.new(args[0], args[1]);\n    }\n\n    public static new<T extends { [key: string]: DataType } = any>(children: T): Schema<T>;\n    public static new<T extends VectorMap = any>(children: T): Schema<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Schema<T>;\n    /** @nocollapse */\n    public static new(...args: any[]) {\n        return new Schema(selectFieldArgs(args)[0]);\n    }\n\n    public readonly fields: Field<T[keyof T]>[];\n    public readonly metadata: Map<string, string>;\n    public readonly dictionaries: Map<number, DataType>;\n\n    constructor(fields: Field[] = [],\n                metadata?: Map<string, string> | null,\n                dictionaries?: Map<number, DataType> | null) {\n        this.fields = (fields || []) as Field<T[keyof T]>[];\n        this.metadata = metadata || new Map();\n        if (!dictionaries) {\n            dictionaries = generateDictionaryMap(fields);\n        }\n        this.dictionaries = dictionaries;\n    }\n    public get [Symbol.toStringTag]() { return 'Schema'; }\n    public toString() {\n        return `Schema<{ ${this.fields.map((f, i) => `${i}: ${f}`).join(', ')} }>`;\n    }\n\n    public compareTo(other?: Schema | null): other is Schema<T> {\n        return comparer.compareSchemas(this, other);\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const names = columnNames.reduce((xs, x) => (xs[x] = true) && xs, Object.create(null));\n        return new Schema<{ [P in K]: T[P] }>(this.fields.filter((f) => names[f.name]), this.metadata);\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        return new Schema<{ [key: string]: K }>(columnIndices.map((i) => this.fields[i]).filter(Boolean), this.metadata);\n    }\n\n    public assign<R extends { [key: string]: DataType } = any>(schema: Schema<R>): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...fields: (Field<R[keyof R]> | Field<R[keyof R]>[])[]): Schema<T & R>;\n    public assign<R extends { [key: string]: DataType } = any>(...args: (Schema<R> | Field<R[keyof R]> | Field<R[keyof R]>[])[]) {\n\n        const other = args[0] instanceof Schema ? args[0] as Schema<R>\n            : new Schema<R>(selectArgs<Field<R[keyof R]>>(Field, args));\n\n        const curFields = [...this.fields] as Field[];\n        const metadata = mergeMaps(mergeMaps(new Map(), this.metadata), other.metadata);\n        const newFields = other.fields.filter((f2) => {\n            const i = curFields.findIndex((f) => f.name === f2.name);\n            return ~i ? (curFields[i] = f2.clone({\n                metadata: mergeMaps(mergeMaps(new Map(), curFields[i].metadata), f2.metadata)\n            })) && false : true;\n        }) as Field[];\n\n        const newDictionaries = generateDictionaryMap(newFields, new Map());\n\n        return new Schema<T & R>(\n            [...curFields, ...newFields], metadata,\n            new Map([...this.dictionaries, ...newDictionaries])\n        );\n    }\n}\n\nexport class Field<T extends DataType = any> {\n\n    public static new<T extends DataType = any>(props: { name: string | number, type: T, nullable?: boolean, metadata?: Map<string, string> | null }): Field<T>;\n    public static new<T extends DataType = any>(name: string | number | Field<T>, type: T, nullable?: boolean, metadata?: Map<string, string> | null): Field<T>;\n    /** @nocollapse */\n    public static new<T extends DataType = any>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        if (args[0] && typeof args[0] === 'object') {\n            ({ name } = args[0]);\n            (type === undefined) && (type = args[0].type);\n            (nullable === undefined) && (nullable = args[0].nullable);\n            (metadata === undefined) && (metadata = args[0].metadata);\n        }\n        return new Field<T>(`${name}`, type, nullable, metadata);\n    }\n\n    public readonly type: T;\n    public readonly name: string;\n    public readonly nullable: boolean;\n    public readonly metadata: Map<string, string>;\n\n    constructor(name: string, type: T, nullable = false, metadata?: Map<string, string> | null) {\n        this.name = name;\n        this.type = type;\n        this.nullable = nullable;\n        this.metadata = metadata || new Map();\n    }\n\n    public get typeId() { return this.type.typeId; }\n    public get [Symbol.toStringTag]() { return 'Field'; }\n    public toString() { return `${this.name}: ${this.type}`; }\n    public compareTo(other?: Field | null): other is Field<T> {\n        return comparer.compareField(this, other);\n    }\n    public clone<R extends DataType = T>(props: { name?: string | number, type?: R, nullable?: boolean, metadata?: Map<string, string> | null }): Field<R>;\n    public clone<R extends DataType = T>(name?: string | number | Field<T>, type?: R, nullable?: boolean, metadata?: Map<string, string> | null): Field<R>;\n    public clone<R extends DataType = T>(...args: any[]) {\n        let [name, type, nullable, metadata] = args;\n        (!args[0] || typeof args[0] !== 'object')\n            ? ([name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata] = args)\n            : ({name = this.name, type = this.type, nullable = this.nullable, metadata = this.metadata} = args[0]);\n        return Field.new<R>(name, type, nullable, metadata);\n    }\n}\n\n/** @ignore */\nfunction mergeMaps<TKey, TVal>(m1?: Map<TKey, TVal> | null, m2?: Map<TKey, TVal> | null): Map<TKey, TVal> {\n    return new Map([...(m1 || new Map()), ...(m2 || new Map())]);\n}\n\n/** @ignore */\nfunction generateDictionaryMap(fields: Field[], dictionaries = new Map<number, DataType>()): Map<number, DataType> {\n\n    for (let i = -1, n = fields.length; ++i < n;) {\n        const field = fields[i];\n        const type = field.type;\n        if (DataType.isDictionary(type)) {\n            if (!dictionaries.has(type.id)) {\n                dictionaries.set(type.id, type.dictionary);\n            } else if (dictionaries.get(type.id) !== type.dictionary) {\n                throw new Error(`Cannot create Schema containing two different dictionaries with the same Id`);\n            }\n        }\n        if (type.children && type.children.length > 0) {\n            generateDictionaryMap(type.children, dictionaries);\n        }\n    }\n\n    return dictionaries;\n}\n\n// Add these here so they're picked up by the externs creator\n// in the build, and closure-compiler doesn't minify them away\n(Schema.prototype as any).fields = null;\n(Schema.prototype as any).metadata = null;\n(Schema.prototype as any).dictionaries = null;\n\n(Field.prototype as any).type = null;\n(Field.prototype as any).name = null;\n(Field.prototype as any).nullable = null;\n(Field.prototype as any).metadata = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { DataType, List } from '../type';\nimport { OffsetsBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions, VariableWidthBuilder } from '../builder';\n\n/** @ignore */\nexport class ListBuilder<T extends DataType = any, TNull = any> extends VariableWidthBuilder<List<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    protected _offsets: OffsetsBufferBuilder;\n    constructor(opts: BuilderOptions<List<T>, TNull>) {\n        super(opts);\n        this._offsets = new OffsetsBufferBuilder();\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new List(new Field(name, child.type, true));\n        return this.numChildren - 1;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n    protected _flushPending(pending: Map<number, T['TValue'] | undefined>) {\n        const run = this._run;\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        let index = 0, value: Uint8Array | undefined;\n        for ([index, value] of pending) {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.length);\n                setValue(this, index, run.bind(value));\n            }\n        }\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Run } from './run';\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListBuilder<T extends DataType = any, TNull = any> extends Builder<FixedSizeList<T>, TNull> {\n    protected _run = new Run<T, TNull>();\n    public setValue(index: number, value: T['TValue']) {\n        super.setValue(index, this._run.bind(value));\n    }\n    public addChild(child: Builder<T>, name = '0') {\n        if (this.numChildren > 0) {\n            throw new Error('FixedSizeListBuilder can only have one child.');\n        }\n        const childIndex = this.children.push(child);\n        this.type = new FixedSizeList(this.type.listSize, new Field(name, child.type, true));\n        return childIndex;\n    }\n    public clear() {\n        this._run.clear();\n        return super.clear();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataType, Map_, Struct } from '../type';\nimport { Builder, VariableWidthBuilder } from '../builder';\n\n/** @ignore */ type MapValue<K extends DataType = any, V extends DataType = any> = Map_<K, V>['TValue'];\n/** @ignore */ type MapValues<K extends DataType = any, V extends DataType = any> = Map<number, MapValue<K, V> | undefined>;\n/** @ignore */ type MapValueExt<K extends DataType = any, V extends DataType = any> = MapValue<K, V> | { [key: string]: V } | { [key: number]: V } ;\n\n/** @ignore */\nexport class MapBuilder<K extends DataType = any, V extends DataType = any, TNull = any> extends VariableWidthBuilder<Map_<K, V>, TNull> {\n\n    protected _pending: MapValues<K, V> | undefined;\n    public set(index: number, value: MapValueExt<K, V> | TNull) {\n        return super.set(index, value as MapValue<K, V> | TNull);\n    }\n\n    public setValue(index: number, value: MapValueExt<K, V>) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map() as MapValues<K, V>);\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n\n    public addChild(child: Builder<Struct<{ key: K, value: V }>>, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_<K, V>(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n\n    protected _flushPending(pending: MapValues<K, V>) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { Builder } from '../builder';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */\nexport class StructBuilder<T extends { [key: string]: DataType } = any, TNull = any> extends Builder<Struct<T>, TNull> {\n    public addChild(child: Builder, name = `${this.numChildren}`) {\n        const childIndex = this.children.push(child);\n        this.type = new Struct([...this.type.children, new Field(name, child.type, true)]);\n        return childIndex;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataBufferBuilder } from './buffer';\nimport { Builder, BuilderOptions } from '../builder';\nimport { Union, SparseUnion, DenseUnion } from '../type';\n\nexport interface UnionBuilderOptions<T extends Union = any, TNull = any> extends BuilderOptions<T, TNull> {\n    valueToChildTypeId?: (builder: UnionBuilder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport abstract class UnionBuilder<T extends Union, TNull = any> extends Builder<T, TNull> {\n\n    protected _typeIds: DataBufferBuilder<Int8Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._typeIds = new DataBufferBuilder(new Int8Array(0), 1);\n        if (typeof options['valueToChildTypeId'] === 'function') {\n            this._valueToChildTypeId = options['valueToChildTypeId'];\n        }\n    }\n\n    public get typeIdToChildIndex() { return this.type.typeIdToChildIndex; }\n\n    public append(value: T['TValue'] | TNull, childTypeId?: number) {\n        return this.set(this.length, value, childTypeId);\n    }\n\n    public set(index: number, value: T['TValue'] | TNull, childTypeId?: number) {\n        if (childTypeId === undefined) {\n            childTypeId = this._valueToChildTypeId(this, value, index);\n        }\n        if (this.setValid(index, this.isValid(value))) {\n            this.setValue(index, value, childTypeId);\n        }\n        return this;\n    }\n\n    // @ts-ignore\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        this._typeIds.set(index, childTypeId!);\n        super.setValue(index, value);\n    }\n\n    // @ts-ignore\n    public addChild(child: Builder, name = `${this.children.length}`) {\n        const childTypeId = this.children.push(child);\n        const { type: { children, mode, typeIds } } = this;\n        const fields = [...children, new Field(name, child.type)];\n        this.type = <T> new Union(mode, [...typeIds, childTypeId], fields);\n        return childTypeId;\n    }\n\n    /** @ignore */\n    // @ts-ignore\n    protected _valueToChildTypeId(builder: UnionBuilder<T, TNull>, value: any, offset: number): number {\n        throw new Error(`Cannot map UnionBuilder value to child typeId. \\\nPass the \\`childTypeId\\` as the second argument to unionBuilder.append(), \\\nor supply a \\`valueToChildTypeId\\` function as part of the UnionBuilder constructor options.`);\n    }\n}\n\n/** @ignore */\nexport class SparseUnionBuilder<T extends SparseUnion, TNull = any> extends UnionBuilder<T, TNull> {}\n/** @ignore */\nexport class DenseUnionBuilder<T extends DenseUnion, TNull = any> extends UnionBuilder<T, TNull> {\n\n    protected _offsets: DataBufferBuilder<Int32Array>;\n\n    constructor(options: UnionBuilderOptions<T, TNull>) {\n        super(options);\n        this._offsets = new DataBufferBuilder(new Int32Array(0));\n    }\n\n    /** @ignore */\n    public setValue(index: number, value: T['TValue'], childTypeId?: number) {\n        const childIndex = this.type.typeIdToChildIndex[childTypeId!];\n        this._offsets.set(index, this.getChildAt(childIndex)!.length);\n        return super.setValue(index, value, childTypeId);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { encodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { float64ToUint16 } from '../util/math';\nimport { toArrayBufferView } from '../util/buffer';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface SetVisitor extends Visitor {\n    visit<T extends VectorType>(node: T, index: number, value: T['TValue']): void;\n    visitMany<T extends VectorType>(nodes: T[], indices: number[], values: T['TValue'][]): void[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number, value: VectorType<T>['TValue']) => void;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitList                 <T extends List>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, index: number, value: T['TValue']): void;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, index: number, value: T['TValue']): void;\n}\n\n/** @ignore */\nexport class SetVisitor extends Visitor {}\n\n/** @ignore */\nconst setEpochMsToDays = (data: Int32Array, index: number, epochMs: number) => { data[index] = (epochMs / 86400000) | 0; };\n/** @ignore */\nconst setEpochMsToMillisecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = (epochMs % 4294967296) | 0;\n    data[index + 1] = (epochMs / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToMicrosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000) / 4294967296) | 0;\n};\n/** @ignore */\nconst setEpochMsToNanosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = ((epochMs * 1000000) % 4294967296) | 0;\n    data[index + 1] = ((epochMs * 1000000) / 4294967296) | 0;\n};\n\n/** @ignore */\nconst setVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number, value: Uint8Array) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    if (x != null && y != null) {\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n\n/** @ignore */\nconst setBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number, val: boolean) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |=  (1 << (idx % 8)))  // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n\n};\n\n/** @ignore */ type Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */ type Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst setDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nconst setDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nconst setNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = float64ToUint16(value); };\n/** @ignore */\nconst setNumericX2       = <T extends Numeric2X>      (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (typeof value) {\n        case 'bigint': vector.values64[index] = value; break;\n        case 'number': vector.values[index * vector.stride] = value; break;\n        default:\n            const val = value as T['TArray'];\n            const { stride, ArrayType } = vector;\n            const long = toArrayBufferView<T['TArray']>(ArrayType, val);\n            vector.values.set(long.subarray(0, stride), stride * index);\n    }\n};\n/** @ignore */\nconst setFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, stride), stride * index); };\n\n/** @ignore */\nconst setBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number, value: T['TValue']) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setInt = <T extends Int>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.bitWidth < 64\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value as Numeric1X['TValue'])\n        : setNumericX2(vector as VectorType<Numeric2X>, index, value as Numeric2X['TValue']);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setFloat = <T extends Float>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.precision !== Precision.HALF\n        ? setNumeric(vector as VectorType<Numeric1X>, index, value)\n        : setFloat16(vector as VectorType<Float16>, index, value);\n};\n\n/* istanbul ignore next */\nconst setDate = <T extends Date_> (vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    vector.type.unit === DateUnit.DAY\n        ? setDateDay(vector as VectorType<DateDay>, index, value)\n        : setDateMillisecond(vector as VectorType<DateMillisecond>, index, value);\n};\n\n/** @ignore */\nconst setTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nconst setTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nconst setTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number, value: T['TValue']): void => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nconst setTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimestampSecond(vector as VectorType<TimestampSecond>, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index, value);\n        case TimeUnit.NANOSECOND:  return  setTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index, value);\n    }\n};\n\n/** @ignore */\nconst setTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number, value: T['TValue']): void => { values[stride * index] = value; };\n/** @ignore */\nconst setTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/* istanbul ignore next */\n/** @ignore */\nconst setTime            = <T extends Time>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      setTimeSecond(vector as VectorType<TimeSecond>, index, value as TimeSecond['TValue']);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(vector as VectorType<TimeMillisecond>, index, value as TimeMillisecond['TValue']);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index, value as TimeMicrosecond['TValue']);\n        case TimeUnit.NANOSECOND:  return  setTimeNanosecond(vector as VectorType<TimeNanosecond>, index, value as TimeNanosecond['TValue']);\n    }\n};\n\n/** @ignore */\nconst setDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 4), 4 * index); };\n\n/** @ignore */\nconst setList = <T extends List>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, value.get(++idx));\n    }\n};\n\n/** @ignore */\nconst setMap = <T extends Map_>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n    const values = vector.getChildAt(0)!, valueOffsets = vector.valueOffsets;\n    const entries = value instanceof Map ? [...value] : Object.entries(value);\n    for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n        values.set(itr++, entries[++idx]);\n    }\n};\n\n/** @ignore */ const _setStructArrayValue = (o: number, v: any[]) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v[i]);\n/** @ignore */ const _setStructVectorValue = (o: number, v: Vector) => (c: Vector | null, _: Field, i: number) => c && c.set(o, v.get(i));\n/** @ignore */ const _setStructMapValue = (o: number, v: Map<string, any>) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v.get(f.name));\n/** @ignore */ const _setStructObjectValue = (o: number, v: { [key: string]: any }) => (c: Vector | null, f: Field, _: number) => c && c.set(o, v[f.name]);\n/** @ignore */\nconst setStruct = <T extends Struct>(vector: VectorType<T>, index: number, value: T['TValue']) => {\n\n    const setValue = value instanceof Map    ? _setStructMapValue(index, value)    :\n                     value instanceof Vector ? _setStructVectorValue(index, value) :\n                     Array.isArray(value)    ? _setStructArrayValue(index, value)  :\n                                               _setStructObjectValue(index, value) ;\n\n    vector.type.children.forEach((f: Field, i: number) => setValue(vector.getChildAt(i), f, i));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number, value: V['TValue']) => {\n    vector.type.mode === UnionMode.Dense ?\n        setDenseUnion(vector as VectorType<DenseUnion>, index, value) :\n        setSparseUnion(vector as VectorType<SparseUnion>, index, value);\n};\n\n/** @ignore */\nconst setDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(vector.valueOffsets[index], value);\n};\n\n/** @ignore */\nconst setSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    child && child.set(index, value);\n};\n\n/** @ignore */\nconst setDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const key = vector.getKey(index);\n    if (key !== null) {\n        vector.setValue(key, value);\n    }\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setIntervalValue = <T extends Interval>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(vector as VectorType<IntervalDayTime>, index, value)\n        : setIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index, value);\n};\n\n/** @ignore */\nconst setIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nconst setIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number, value: T['TValue']): void => { values[index] = (value[0] * 12) + (value[1] % 12); };\n\n/** @ignore */\nconst setFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number, value: T['TValue']): void => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    for (let idx = -1, offset = index * stride; ++idx < stride;) {\n        child.set(offset + idx, value.get(idx));\n    }\n};\n\nSetVisitor.prototype.visitBool                 =                 setBool;\nSetVisitor.prototype.visitInt                  =                  setInt;\nSetVisitor.prototype.visitInt8                 =              setNumeric;\nSetVisitor.prototype.visitInt16                =              setNumeric;\nSetVisitor.prototype.visitInt32                =              setNumeric;\nSetVisitor.prototype.visitInt64                =            setNumericX2;\nSetVisitor.prototype.visitUint8                =              setNumeric;\nSetVisitor.prototype.visitUint16               =              setNumeric;\nSetVisitor.prototype.visitUint32               =              setNumeric;\nSetVisitor.prototype.visitUint64               =            setNumericX2;\nSetVisitor.prototype.visitFloat                =                setFloat;\nSetVisitor.prototype.visitFloat16              =              setFloat16;\nSetVisitor.prototype.visitFloat32              =              setNumeric;\nSetVisitor.prototype.visitFloat64              =              setNumeric;\nSetVisitor.prototype.visitUtf8                 =                 setUtf8;\nSetVisitor.prototype.visitBinary               =               setBinary;\nSetVisitor.prototype.visitFixedSizeBinary      =      setFixedSizeBinary;\nSetVisitor.prototype.visitDate                 =                 setDate;\nSetVisitor.prototype.visitDateDay              =              setDateDay;\nSetVisitor.prototype.visitDateMillisecond      =      setDateMillisecond;\nSetVisitor.prototype.visitTimestamp            =            setTimestamp;\nSetVisitor.prototype.visitTimestampSecond      =      setTimestampSecond;\nSetVisitor.prototype.visitTimestampMillisecond = setTimestampMillisecond;\nSetVisitor.prototype.visitTimestampMicrosecond = setTimestampMicrosecond;\nSetVisitor.prototype.visitTimestampNanosecond  =  setTimestampNanosecond;\nSetVisitor.prototype.visitTime                 =                 setTime;\nSetVisitor.prototype.visitTimeSecond           =           setTimeSecond;\nSetVisitor.prototype.visitTimeMillisecond      =      setTimeMillisecond;\nSetVisitor.prototype.visitTimeMicrosecond      =      setTimeMicrosecond;\nSetVisitor.prototype.visitTimeNanosecond       =       setTimeNanosecond;\nSetVisitor.prototype.visitDecimal              =              setDecimal;\nSetVisitor.prototype.visitList                 =                 setList;\nSetVisitor.prototype.visitStruct               =               setStruct;\nSetVisitor.prototype.visitUnion                =                setUnion;\nSetVisitor.prototype.visitDenseUnion           =           setDenseUnion;\nSetVisitor.prototype.visitSparseUnion          =          setSparseUnion;\nSetVisitor.prototype.visitDictionary           =           setDictionary;\nSetVisitor.prototype.visitInterval             =        setIntervalValue;\nSetVisitor.prototype.visitIntervalDayTime      =      setIntervalDayTime;\nSetVisitor.prototype.visitIntervalYearMonth    =    setIntervalYearMonth;\nSetVisitor.prototype.visitFixedSizeList        =        setFixedSizeList;\nSetVisitor.prototype.visitMap                  =                  setMap;\n\n/** @ignore */\nexport const instance = new SetVisitor();\n","// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Footer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Footer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Footer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Footer= obj\n         * @returns Footer\n         */\n        static getRootAsFooter(bb: flatbuffers.ByteBuffer, obj?: Footer): Footer {\n            return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.Schema= obj\n         * @returns org.apache.arrow.flatbuf.Schema|null\n         */\n        schema(obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Schema): NS7624605610262437867.org.apache.arrow.flatbuf.Schema | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        dictionaries(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        dictionariesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        recordBatches(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        recordBatchesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFooter(builder: flatbuffers.Builder) {\n            builder.startObject(4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset schemaOffset\n         */\n        static addSchema(builder: flatbuffers.Builder, schemaOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionariesOffset\n         */\n        static addDictionaries(builder: flatbuffers.Builder, dictionariesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDictionariesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset recordBatchesOffset\n         */\n        static addRecordBatches(builder: flatbuffers.Builder, recordBatchesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startRecordBatchesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFooter(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishFooterBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createFooter(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, schemaOffset: flatbuffers.Offset, dictionariesOffset: flatbuffers.Offset, recordBatchesOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Block {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Block\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Block {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * Index to the start of the RecordBlock (note this is past the Message header)\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * Length of the metadata\n         *\n         * @returns number\n         */\n        metaDataLength(): number {\n            return this.bb!.readInt32(this.bb_pos + 8);\n        }\n\n        /**\n         * Length of the data (this is aligned so there can be a gap between this and\n         * the metatdata).\n         *\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 16);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param number metaDataLength\n         * @param flatbuffers.Long bodyLength\n         * @returns flatbuffers.Offset\n         */\n        static createBlock(builder: flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, BuilderCtor } from '../interfaces';\nimport { BinaryBuilder } from '../builder/binary';\nimport { BoolBuilder } from '../builder/bool';\nimport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from '../builder/date';\nimport { DecimalBuilder } from '../builder/decimal';\nimport { DictionaryBuilder } from '../builder/dictionary';\nimport { FixedSizeBinaryBuilder } from '../builder/fixedsizebinary';\nimport { FixedSizeListBuilder } from '../builder/fixedsizelist';\nimport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from '../builder/float';\nimport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from '../builder/interval';\nimport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from '../builder/int';\nimport { ListBuilder } from '../builder/list';\nimport { MapBuilder } from '../builder/map';\nimport { NullBuilder } from '../builder/null';\nimport { StructBuilder } from '../builder/struct';\nimport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from '../builder/timestamp';\nimport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from '../builder/time';\nimport { UnionBuilder, DenseUnionBuilder, SparseUnionBuilder } from '../builder/union';\nimport { Utf8Builder } from '../builder/utf8';\n\n/** @ignore */\nexport interface GetBuilderCtor extends Visitor {\n    visit<T extends Type>(type: T): BuilderCtor<T>;\n    visitMany<T extends Type>(types: T[]): BuilderCtor<T>[];\n    getVisitFn<T extends Type>(type: T): () => BuilderCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => BuilderCtor<T>;\n}\n\n/** @ignore */\nexport class GetBuilderCtor extends Visitor {\n    public visitNull                 () { return NullBuilder;                 }\n    public visitBool                 () { return BoolBuilder;                 }\n    public visitInt                  () { return IntBuilder;                  }\n    public visitInt8                 () { return Int8Builder;                 }\n    public visitInt16                () { return Int16Builder;                }\n    public visitInt32                () { return Int32Builder;                }\n    public visitInt64                () { return Int64Builder;                }\n    public visitUint8                () { return Uint8Builder;                }\n    public visitUint16               () { return Uint16Builder;               }\n    public visitUint32               () { return Uint32Builder;               }\n    public visitUint64               () { return Uint64Builder;               }\n    public visitFloat                () { return FloatBuilder;                }\n    public visitFloat16              () { return Float16Builder;              }\n    public visitFloat32              () { return Float32Builder;              }\n    public visitFloat64              () { return Float64Builder;              }\n    public visitUtf8                 () { return Utf8Builder;                 }\n    public visitBinary               () { return BinaryBuilder;               }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryBuilder;      }\n    public visitDate                 () { return DateBuilder;                 }\n    public visitDateDay              () { return DateDayBuilder;              }\n    public visitDateMillisecond      () { return DateMillisecondBuilder;      }\n    public visitTimestamp            () { return TimestampBuilder;            }\n    public visitTimestampSecond      () { return TimestampSecondBuilder;      }\n    public visitTimestampMillisecond () { return TimestampMillisecondBuilder; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondBuilder; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondBuilder;  }\n    public visitTime                 () { return TimeBuilder;                 }\n    public visitTimeSecond           () { return TimeSecondBuilder;           }\n    public visitTimeMillisecond      () { return TimeMillisecondBuilder;      }\n    public visitTimeMicrosecond      () { return TimeMicrosecondBuilder;      }\n    public visitTimeNanosecond       () { return TimeNanosecondBuilder;       }\n    public visitDecimal              () { return DecimalBuilder;              }\n    public visitList                 () { return ListBuilder;                 }\n    public visitStruct               () { return StructBuilder;               }\n    public visitUnion                () { return UnionBuilder;                }\n    public visitDenseUnion           () { return DenseUnionBuilder;           }\n    public visitSparseUnion          () { return SparseUnionBuilder;          }\n    public visitDictionary           () { return DictionaryBuilder;           }\n    public visitInterval             () { return IntervalBuilder;             }\n    public visitIntervalDayTime      () { return IntervalDayTimeBuilder;      }\n    public visitIntervalYearMonth    () { return IntervalYearMonthBuilder;    }\n    public visitFixedSizeList        () { return FixedSizeListBuilder;        }\n    public visitMap                  () { return MapBuilder;                  }\n}\n\n/** @ignore */\nexport const instance = new GetBuilderCtor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport { Builder, BuilderOptions } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\n\nimport { Type } from '../enum';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Utf8Builder } from './utf8';\nimport { BuilderType as B } from '../interfaces';\nimport { Builder, BuilderOptions } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n\n/** @nocollapse */\nBuilder.new = newBuilder;\n\nfunction newBuilder<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {\n\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn<T>(type)())(options) as Builder<T, TNull>;\n\n    if (type.children && type.children.length > 0) {\n\n        const children = options['children'] || [] as BuilderOptions[];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_: Field, i: number) => children[i] || defaultOptions)\n            : (({ name }: Field) => children[name] || defaultOptions);\n\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n\n    return builder as B<T, TNull>;\n}\n\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n        const BuilderCtor = getBuilderConstructor.visit(typeId);\n        BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n    });\n\n(Utf8Builder.prototype as any)._setValue = setVisitor.visitBinary;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/* tslint:disable:class-name */\n\nimport * as File_ from '../../fb/File';\nimport { flatbuffers } from 'flatbuffers';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Block = File_.org.apache.arrow.flatbuf.Block;\nimport _Footer = File_.org.apache.arrow.flatbuf.Footer;\n\nimport { Schema } from '../../schema';\nimport { MetadataVersion } from '../../enum';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\n\n/** @ignore */\nclass Footer_ {\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const footer = _Footer.getRootAsFooter(buf);\n        const schema = Schema.decode(footer.schema()!);\n        return new OffHeapFooter(schema, footer) as Footer_;\n    }\n\n    /** @nocollapse */\n    public static encode(footer: Footer_) {\n\n        const b: Builder = new Builder();\n        const schemaOffset = Schema.encode(b, footer.schema);\n\n        _Footer.startRecordBatchesVector(b, footer.numRecordBatches);\n        [...footer.recordBatches()].slice().reverse().forEach((rb) => FileBlock.encode(b, rb));\n        const recordBatchesOffset = b.endVector();\n\n        _Footer.startDictionariesVector(b, footer.numDictionaries);\n        [...footer.dictionaryBatches()].slice().reverse().forEach((db) => FileBlock.encode(b, db));\n\n        const dictionaryBatchesOffset = b.endVector();\n\n        _Footer.startFooter(b);\n        _Footer.addSchema(b, schemaOffset);\n        _Footer.addVersion(b, MetadataVersion.V4);\n        _Footer.addRecordBatches(b, recordBatchesOffset);\n        _Footer.addDictionaries(b, dictionaryBatchesOffset);\n        _Footer.finishFooterBuffer(b, _Footer.endFooter(b));\n\n        return b.asUint8Array();\n    }\n\n    // @ts-ignore\n    protected _recordBatches: FileBlock[];\n    // @ts-ignore\n    protected _dictionaryBatches: FileBlock[];\n    public get numRecordBatches() { return this._recordBatches.length; }\n    public get numDictionaries() { return this._dictionaryBatches.length; }\n\n    constructor(public schema: Schema,\n                public version: MetadataVersion = MetadataVersion.V4,\n                recordBatches?: FileBlock[], dictionaryBatches?: FileBlock[]) {\n        recordBatches && (this._recordBatches = recordBatches);\n        dictionaryBatches && (this._dictionaryBatches = dictionaryBatches);\n    }\n\n    public *recordBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numRecordBatches; ++i < n;) {\n            if (block = this.getRecordBatch(i)) { yield block; }\n        }\n    }\n\n    public *dictionaryBatches(): Iterable<FileBlock> {\n        for (let block, i = -1, n = this.numDictionaries; ++i < n;) {\n            if (block = this.getDictionaryBatch(i)) { yield block; }\n        }\n    }\n\n    public getRecordBatch(index: number) {\n        return index >= 0\n            && index < this.numRecordBatches\n            && this._recordBatches[index] || null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        return index >= 0\n            && index < this.numDictionaries\n            && this._dictionaryBatches[index] || null;\n    }\n}\n\nexport { Footer_ as Footer };\n\n/** @ignore */\nclass OffHeapFooter extends Footer_ {\n\n    public get numRecordBatches() { return this._footer.recordBatchesLength(); }\n    public get numDictionaries() { return this._footer.dictionariesLength(); }\n\n    constructor(schema: Schema, protected _footer: _Footer) {\n        super(schema, _footer.version());\n    }\n\n    public getRecordBatch(index: number) {\n        if (index >= 0 && index < this.numRecordBatches) {\n            const fileBlock = this._footer.recordBatches(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n\n    public getDictionaryBatch(index: number) {\n        if (index >= 0 && index < this.numDictionaries) {\n            const fileBlock = this._footer.dictionaries(index);\n            if (fileBlock) { return FileBlock.decode(fileBlock); }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nexport class FileBlock {\n\n    /** @nocollapse */\n    public static decode(block: _Block) {\n        return new FileBlock(block.metaDataLength(), block.bodyLength(), block.offset());\n    }\n\n    /** @nocollapse */\n    public static encode(b: Builder, fileBlock: FileBlock) {\n        const { metaDataLength } = fileBlock;\n        const offset = new Long(fileBlock.offset, 0);\n        const bodyLength = new Long(fileBlock.bodyLength, 0);\n        return _Block.createBlock(b, offset, metaDataLength, bodyLength);\n    }\n\n    public offset: number;\n    public bodyLength: number;\n    public metaDataLength: number;\n\n    constructor(metaDataLength: number, bodyLength: Long | number, offset: Long | number) {\n        this.metaDataLength = metaDataLength;\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, Readable, Writable, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays, ArrayBufferViewInput } from '../util/buffer';\n\nimport {\n    isPromise, isFetchResponse,\n    isIterable, isAsyncIterable,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */\nexport type WritableSink<T> = Writable<T> | WritableStream<T> | NodeJS.WritableStream | null;\n/** @ignore */\nexport type ReadableSource<T> = Readable<T> | PromiseLike<T> | AsyncIterable<T> | ReadableStream<T> | NodeJS.ReadableStream | null;\n\n/** @ignore */\nexport class AsyncByteQueue<T extends ArrayBufferViewInput = Uint8Array> extends AsyncQueue<Uint8Array, T> {\n    public write(value: ArrayBufferViewInput | Uint8Array) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value as T);\n        }\n    }\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values as any[])[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n\n/** @ignore */\nexport class ByteStream implements IterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: ByteStreamSource<Uint8Array>;\n    constructor(source?: Iterable<ArrayBufferViewInput> | ArrayBufferViewInput) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\nexport class AsyncByteStream implements Readable<Uint8Array>, AsyncIterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: AsyncByteStreamSource<Uint8Array>;\n    constructor(source?: PromiseLike<ArrayBufferViewInput> | Response | ReadableStream<ArrayBufferViewInput> | NodeJS.ReadableStream | AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput>) {\n        if (source instanceof AsyncByteStream) {\n            this.source = (source as AsyncByteStream).source;\n        } else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        } else if (isReadableDOMStream<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        } else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body!));\n        } else if (isIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        } else if (isPromise<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isAsyncIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public get closed(): Promise<void> { return this.source.closed; }\n    public cancel(reason?: any) { return this.source.cancel(reason); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\ninterface ByteStreamSourceIterator<T> extends IterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): IteratorResult<T>;\n}\n\n/** @ignore */\ninterface AsyncByteStreamSourceIterator<T> extends AsyncIterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nclass ByteStreamSource<T> {\n    constructor(protected source: ByteStreamSourceIterator<T>) {}\n    public cancel(reason?: any) { this.return(reason); }\n    public peek(size?: number | null): T | null { return this.next(size, 'peek').value; }\n    public read(size?: number | null): T | null { return this.next(size, 'read').value; }\n    public next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return this.source.next({ cmd, size }); }\n    public throw(value?: any) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    public return(value?: any) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n\n/** @ignore */\nclass AsyncByteStreamSource<T> implements Readable<T> {\n\n    private _closedPromise: Promise<void>;\n    private _closedPromiseResolve?: (value?: any) => void;\n    constructor (protected source: ByteStreamSourceIterator<T> | AsyncByteStreamSourceIterator<T>) {\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async read(size?: number | null): Promise<T | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<T | null> { return (await this.next(size, 'peek')).value; }\n    public async next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return (await this.source.next({ cmd, size })); }\n    public async throw(value?: any) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    public async return(value?: any) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { FileHandle } from './interfaces';\nimport { ByteStream, AsyncByteStream } from './stream';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\n\n/** @ignore */\nexport class RandomAccessFile extends ByteStream {\n    public size: number;\n    public position: number = 0;\n    protected buffer: Uint8Array | null;\n    constructor(buffer: ArrayBufferViewInput, byteLength?: number) {\n        super();\n        this.buffer = toUint8Array(buffer);\n        this.size = typeof byteLength === 'undefined' ? this.buffer.byteLength : byteLength;\n    }\n    public readInt32(position: number) {\n        const { buffer, byteOffset } = this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public seek(position: number) {\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public read(nBytes?: number | null) {\n        const { buffer, size, position } = this;\n        if (buffer && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            this.position = Math.min(size,\n                 position + Math.min(size - position, nBytes));\n            return buffer.subarray(position, this.position);\n        }\n        return null;\n    }\n    public readAt(position: number, nBytes: number) {\n        const buf = this.buffer;\n        const end = Math.min(this.size, position + nBytes);\n        return buf ? buf.subarray(position, end) : new Uint8Array(nBytes);\n    }\n    public close() { this.buffer && (this.buffer = null); }\n    public throw(value?: any) { this.close(); return { done: true, value }; }\n    public return(value?: any) { this.close(); return { done: true, value }; }\n}\n\n/** @ignore */\nexport class AsyncRandomAccessFile extends AsyncByteStream {\n    // @ts-ignore\n    public size: number;\n    public position: number = 0;\n    public _pending?: Promise<void>;\n    protected _handle: FileHandle | null;\n    constructor(file: FileHandle, byteLength?: number) {\n        super();\n        this._handle = file;\n        if (typeof byteLength === 'number') {\n            this.size = byteLength;\n        } else {\n            this._pending = (async () => {\n                this.size = (await file.stat()).size;\n                delete this._pending;\n            })();\n        }\n    }\n    public async readInt32(position: number) {\n        const { buffer, byteOffset } = await this.readAt(position, 4);\n        return new DataView(buffer, byteOffset).getInt32(0, true);\n    }\n    public async seek(position: number) {\n        this._pending && await this._pending;\n        this.position = Math.min(position, this.size);\n        return position < this.size;\n    }\n    public async read(nBytes?: number | null) {\n        this._pending && await this._pending;\n        const { _handle: file, size, position } = this;\n        if (file && position < size) {\n            if (typeof nBytes !== 'number') { nBytes = Infinity; }\n            let pos = position, offset = 0, bytesRead = 0;\n            let end = Math.min(size, pos + Math.min(size - pos, nBytes));\n            let buffer = new Uint8Array(Math.max(0, (this.position = end) - pos));\n            while ((pos += bytesRead) < end && (offset += bytesRead) < buffer.byteLength) {\n                ({ bytesRead } = await file.read(buffer, offset, buffer.byteLength - offset, pos));\n            }\n            return buffer;\n        }\n        return null;\n    }\n    public async readAt(position: number, nBytes: number) {\n        this._pending && await this._pending;\n        const { _handle: file, size } = this;\n        if (file && (position + nBytes) < size) {\n            const end = Math.min(size, position + nBytes);\n            const buffer = new Uint8Array(end - position);\n            return (await file.read(buffer, 0, nBytes, position)).buffer;\n        }\n        return new Uint8Array(nBytes);\n    }\n    public async close() { const f = this._handle; this._handle = null; f && await f.close(); }\n    public async throw(value?: any) { await this.close(); return { done: true, value }; }\n    public async return(value?: any) { await this.close(); return { done: true, value }; }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nconst carryBit16 = 1 << 16;\n\n/** @ignore */\nfunction intAsHex(value: number): string {\n    if (value < 0) {\n        value = 0xFFFFFFFF + value + 1;\n    }\n    return `0x${value.toString(16)}`;\n}\n\n/** @ignore */\nconst kInt32DecimalDigits = 8;\n/** @ignore */\nconst kPowersOfTen = [1,\n                      10,\n                      100,\n                      1000,\n                      10000,\n                      100000,\n                      1000000,\n                      10000000,\n                      100000000];\n\n/** @ignore */\nexport class BaseInt64 {\n    constructor (protected buffer: Uint32Array) {}\n\n    public high(): number { return this.buffer[1]; }\n    public low (): number { return this.buffer[0]; }\n\n    protected _times(other: BaseInt64) {\n        // Break the left and right numbers into 16 bit chunks\n        // so that we can multiply them without overflow.\n        const L = new Uint32Array([\n            this.buffer[1] >>> 16,\n            this.buffer[1] & 0xFFFF,\n            this.buffer[0] >>> 16,\n            this.buffer[0] & 0xFFFF\n        ]);\n\n        const R = new Uint32Array([\n            other.buffer[1] >>> 16,\n            other.buffer[1] & 0xFFFF,\n            other.buffer[0] >>> 16,\n            other.buffer[0] & 0xFFFF\n        ]);\n\n        let product = L[3] * R[3];\n        this.buffer[0] = product & 0xFFFF;\n\n        let sum = product >>> 16;\n\n        product = L[2] * R[3];\n        sum += product;\n\n        product = (L[3] * R[2]) >>> 0;\n        sum += product;\n\n        this.buffer[0] += sum << 16;\n\n        this.buffer[1] = (sum >>> 0 < product ? carryBit16 : 0);\n\n        this.buffer[1] += sum >>> 16;\n        this.buffer[1] += L[1] * R[3] + L[2] * R[2] + L[3] * R[1];\n        this.buffer[1] += (L[0] * R[3] + L[1] * R[2] + L[2] * R[1] + L[3] * R[0]) << 16;\n\n        return this;\n      }\n\n    protected _plus(other: BaseInt64) {\n        const sum = (this.buffer[0] + other.buffer[0]) >>> 0;\n        this.buffer[1] += other.buffer[1];\n        if (sum < (this.buffer[0] >>> 0)) {\n          ++this.buffer[1];\n        }\n        this.buffer[0] = sum;\n    }\n\n    public lessThan(other: BaseInt64): boolean {\n        return this.buffer[1] < other.buffer[1] ||\n            (this.buffer[1] === other.buffer[1] && this.buffer[0] < other.buffer[0]);\n    }\n\n    public equals(other: BaseInt64): boolean {\n        return this.buffer[1] === other.buffer[1] && this.buffer[0] == other.buffer[0];\n    }\n\n    public greaterThan(other: BaseInt64): boolean {\n        return other.lessThan(this);\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n}\n\n/** @ignore */\nexport class Uint64 extends BaseInt64 {\n    public times(other: Uint64): Uint64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Uint64): Uint64 {\n        this._plus(other);\n        return this;\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Uint64 {\n        return Uint64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Uint64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Uint64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Uint64 {\n        const length = str.length;\n\n        let out = new Uint64(out_buffer);\n        for (let posn = 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Uint64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Uint64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Uint64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Uint64, right: Uint64): Uint64 {\n        let rtrn = new Uint64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int64 extends BaseInt64 {\n    public negate(): Int64 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        return this;\n    }\n\n    public times(other: Int64): Int64 {\n        this._times(other);\n        return this;\n    }\n\n    public plus(other: Int64): Int64 {\n        this._plus(other);\n        return this;\n    }\n\n    public lessThan(other: Int64): boolean {\n        // force high bytes to be signed\n        const this_high = this.buffer[1] << 0;\n        const other_high = other.buffer[1] << 0;\n        return this_high < other_high ||\n            (this_high === other_high && this.buffer[0] < other.buffer[0]);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(2)): Int64 {\n        return Int64.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(2)): Int64 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int64.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(2)): Int64 {\n        // TODO: Assert that out_buffer is 0 and length = 2\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int64(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int64(new Uint32Array([parseInt(str.substr(posn, group), 10), 0]));\n            const multiple = new Int64(new Uint32Array([kPowersOfTen[group], 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        const data = new Uint32Array(values.length * 2);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int64.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 2 * i * 4, 2));\n        }\n        return data;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int64, right: Int64): Int64 {\n        let rtrn = new Int64(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n}\n\n/** @ignore */\nexport class Int128 {\n    constructor (private buffer: Uint32Array) {\n        // buffer[3] MSB (high)\n        // buffer[2]\n        // buffer[1]\n        // buffer[0] LSB (low)\n    }\n\n    public high(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n    }\n\n    public low(): Int64 {\n        return new Int64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset, 2));\n    }\n\n    public negate(): Int128 {\n        this.buffer[0] = ~this.buffer[0] + 1;\n        this.buffer[1] = ~this.buffer[1];\n        this.buffer[2] = ~this.buffer[2];\n        this.buffer[3] = ~this.buffer[3];\n\n        if (this.buffer[0] == 0) { ++this.buffer[1]; }\n        if (this.buffer[1] == 0) { ++this.buffer[2]; }\n        if (this.buffer[2] == 0) { ++this.buffer[3]; }\n        return this;\n    }\n\n    public times(other: Int128): Int128 {\n        // Break the left and right numbers into 32 bit chunks\n        // so that we can multiply them without overflow.\n        const L0 = new Uint64(new Uint32Array([this.buffer[3],  0]));\n        const L1 = new Uint64(new Uint32Array([this.buffer[2],  0]));\n        const L2 = new Uint64(new Uint32Array([this.buffer[1],  0]));\n        const L3 = new Uint64(new Uint32Array([this.buffer[0],  0]));\n\n        const R0 = new Uint64(new Uint32Array([other.buffer[3], 0]));\n        const R1 = new Uint64(new Uint32Array([other.buffer[2], 0]));\n        const R2 = new Uint64(new Uint32Array([other.buffer[1], 0]));\n        const R3 = new Uint64(new Uint32Array([other.buffer[0], 0]));\n\n        let product = Uint64.multiply(L3, R3);\n        this.buffer[0] = product.low();\n\n        let sum = new Uint64(new Uint32Array([product.high(), 0]));\n\n        product = Uint64.multiply(L2, R3);\n        sum.plus(product);\n\n        product = Uint64.multiply(L3, R2);\n        sum.plus(product);\n\n        this.buffer[1] = sum.low();\n\n        this.buffer[3] = (sum.lessThan(product) ? 1 : 0);\n\n        this.buffer[2] = sum.high();\n        let high = new Uint64(new Uint32Array(this.buffer.buffer, this.buffer.byteOffset + 8, 2));\n\n        high.plus(Uint64.multiply(L1, R3))\n            .plus(Uint64.multiply(L2, R2))\n            .plus(Uint64.multiply(L3, R1));\n        this.buffer[3] += Uint64.multiply(L0, R3)\n                        .plus(Uint64.multiply(L1, R2))\n                        .plus(Uint64.multiply(L2, R1))\n                        .plus(Uint64.multiply(L3, R0)).low();\n\n        return this;\n    }\n\n    public plus(other: Int128): Int128 {\n        let sums = new Uint32Array(4);\n        sums[3] = (this.buffer[3] + other.buffer[3]) >>> 0;\n        sums[2] = (this.buffer[2] + other.buffer[2]) >>> 0;\n        sums[1] = (this.buffer[1] + other.buffer[1]) >>> 0;\n        sums[0] = (this.buffer[0] + other.buffer[0]) >>> 0;\n\n        if (sums[0] < (this.buffer[0] >>> 0)) {\n            ++sums[1];\n        }\n        if (sums[1] < (this.buffer[1] >>> 0)) {\n            ++sums[2];\n        }\n        if (sums[2] < (this.buffer[2] >>> 0)) {\n            ++sums[3];\n        }\n\n        this.buffer[3] = sums[3];\n        this.buffer[2] = sums[2];\n        this.buffer[1] = sums[1];\n        this.buffer[0] = sums[0];\n\n        return this;\n    }\n\n    public hex(): string {\n        return `${intAsHex(this.buffer[3])} ${intAsHex(this.buffer[2])} ${intAsHex(this.buffer[1])} ${intAsHex(this.buffer[0])}`;\n    }\n\n    /** @nocollapse */\n    public static multiply(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.times(right);\n    }\n\n    /** @nocollapse */\n    public static add(left: Int128, right: Int128): Int128 {\n        let rtrn = new Int128(new Uint32Array(left.buffer));\n        return rtrn.plus(right);\n    }\n\n    /** @nocollapse */\n    public static from(val: any, out_buffer = new Uint32Array(4)): Int128 {\n        return Int128.fromString(\n            typeof(val) === 'string' ? val : val.toString(),\n            out_buffer\n        );\n    }\n\n    /** @nocollapse */\n    public static fromNumber(num: number, out_buffer = new Uint32Array(4)): Int128 {\n        // Always parse numbers as strings - pulling out high and low bits\n        // directly seems to lose precision sometimes\n        // For example:\n        //     > -4613034156400212000 >>> 0\n        //     721782784\n        // The correct lower 32-bits are 721782752\n        return Int128.fromString(num.toString(), out_buffer);\n    }\n\n    /** @nocollapse */\n    public static fromString(str: string, out_buffer = new Uint32Array(4)): Int128 {\n        // TODO: Assert that out_buffer is 0 and length = 4\n        const negate = str.startsWith('-');\n        const length = str.length;\n\n        let out = new Int128(out_buffer);\n        for (let posn = negate ? 1 : 0; posn < length;) {\n            const group = kInt32DecimalDigits < length - posn ?\n                          kInt32DecimalDigits : length - posn;\n            const chunk = new Int128(new Uint32Array([parseInt(str.substr(posn, group), 10), 0, 0, 0]));\n            const multiple = new Int128(new Uint32Array([kPowersOfTen[group], 0, 0, 0]));\n\n            out.times(multiple);\n            out.plus(chunk);\n\n            posn += group;\n        }\n\n        return negate ? out.negate() : out;\n    }\n\n    /** @nocollapse */\n    public static convertArray(values: (string|number)[]): Uint32Array {\n        // TODO: Distinguish between string and number at compile-time\n        const data = new Uint32Array(values.length * 4);\n        for (let i = -1, n = values.length; ++i < n;) {\n            Int128.from(values[i], new Uint32Array(data.buffer, data.byteOffset + 4 * 4 * i, 4));\n        }\n        return data;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport * as type from '../type';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { packBools } from '../util/bit';\nimport { encodeUtf8 } from '../util/utf8';\nimport { Int64, Int128 } from '../util/int';\nimport { UnionMode, DateUnit } from '../enum';\nimport { toArrayBufferView } from '../util/buffer';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\n\n/** @ignore */\nexport interface VectorLoader extends Visitor {\n    visit<T extends DataType>(node: Field<T> | T): Data<T>;\n    visitMany<T extends DataType>(nodes: (Field<T> | T)[]): Data<T>[];\n}\n\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    private bytes: Uint8Array;\n    private nodes: FieldNode[];\n    private nodesIndex: number = -1;\n    private buffers: BufferRegion[];\n    private buffersIndex: number = -1;\n    private dictionaries: Map<number, Vector<any>>;\n    constructor(bytes: Uint8Array, nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super();\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n\n    public visit<T extends DataType>(node: Field<T> | T): Data<T> {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n\n    public visitNull            <T extends type.Null>            (type: T, { length,           } = this.nextFieldNode()) { return            Data.Null(type, 0, length);                                                                                                                                 }\n    public visitBool            <T extends type.Bool>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Bool(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitInt             <T extends type.Int>             (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Int(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFloat           <T extends type.Float>           (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Float(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitUtf8            <T extends type.Utf8>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Utf8(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitBinary          <T extends type.Binary>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Binary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.readData(type));                                   }\n    public visitFixedSizeBinary <T extends type.FixedSizeBinary> (type: T, { length, nullCount } = this.nextFieldNode()) { return Data.FixedSizeBinary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDate            <T extends type.Date_>           (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Date(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTimestamp       <T extends type.Timestamp>       (type: T, { length, nullCount } = this.nextFieldNode()) { return       Data.Timestamp(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitTime            <T extends type.Time>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.Time(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitDecimal         <T extends type.Decimal>         (type: T, { length, nullCount } = this.nextFieldNode()) { return         Data.Decimal(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitList            <T extends type.List>            (type: T, { length, nullCount } = this.nextFieldNode()) { return            Data.List(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n    public visitStruct          <T extends type.Struct>          (type: T, { length, nullCount } = this.nextFieldNode()) { return          Data.Struct(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visitMany(type.children));                                                 }\n    public visitUnion           <T extends type.Union>           (type: T                                              ) { return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type as type.SparseUnion) : this.visitDenseUnion(type as type.DenseUnion);                                      }\n    public visitDenseUnion      <T extends type.DenseUnion>      (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.readOffsets(type), this.visitMany(type.children)); }\n    public visitSparseUnion     <T extends type.SparseUnion>     (type: T, { length, nullCount } = this.nextFieldNode()) { return           Data.Union(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readTypeIds(type), this.visitMany(type.children));                         }\n    public visitDictionary      <T extends type.Dictionary>      (type: T, { length, nullCount } = this.nextFieldNode()) { return      Data.Dictionary(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type.indices), this.readDictionary(type));                        }\n    public visitInterval        <T extends type.Interval>        (type: T, { length, nullCount } = this.nextFieldNode()) { return        Data.Interval(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readData(type));                                                           }\n    public visitFixedSizeList   <T extends type.FixedSizeList>   (type: T, { length, nullCount } = this.nextFieldNode()) { return   Data.FixedSizeList(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.visit(type.children[0]));                                                  }\n    public visitMap             <T extends type.Map_>            (type: T, { length, nullCount } = this.nextFieldNode()) { return             Data.Map(type, 0, length, nullCount, this.readNullBitmap(type, nullCount), this.readOffsets(type), this.visit(type.children[0]));                          }\n\n    protected nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    protected nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    protected readNullBitmap<T extends DataType>(type: T, nullCount: number, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    protected readOffsets<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readTypeIds<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readData<T extends DataType>(_type: T, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    protected readDictionary<T extends type.Dictionary>(type: T): Vector<T['dictionary']> {\n        return this.dictionaries.get(type.id)!;\n    }\n}\n\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    private sources: any[][];\n    constructor(sources: any[][], nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    protected readNullBitmap<T extends DataType>(_type: T, nullCount: number, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    protected readOffsets<T extends DataType>(_type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    protected readTypeIds<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    protected readData<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset] as string[]));\n        } else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset] as string[]);\n        } else if (DataType.isBool(type)) {\n            return packBools(sources[offset] as number[]);\n        } else if (DataType.isUtf8(type)) {\n            return encodeUtf8((sources[offset] as string[]).join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n\n/** @ignore */\nfunction binaryDataFromJSON(values: string[]) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = parseInt(joined.substr(i, 2), 16);\n    }\n    return data;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport * as Schema_ from '../fb/Schema';\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\n\nimport Null = Schema_.org.apache.arrow.flatbuf.Null;\nimport Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport FloatingPoint = Schema_.org.apache.arrow.flatbuf.FloatingPoint;\nimport Binary = Schema_.org.apache.arrow.flatbuf.Binary;\nimport Bool = Schema_.org.apache.arrow.flatbuf.Bool;\nimport Utf8 = Schema_.org.apache.arrow.flatbuf.Utf8;\nimport Decimal = Schema_.org.apache.arrow.flatbuf.Decimal;\nimport Date = Schema_.org.apache.arrow.flatbuf.Date;\nimport Time = Schema_.org.apache.arrow.flatbuf.Time;\nimport Timestamp = Schema_.org.apache.arrow.flatbuf.Timestamp;\nimport Interval = Schema_.org.apache.arrow.flatbuf.Interval;\nimport List = Schema_.org.apache.arrow.flatbuf.List;\nimport Struct = Schema_.org.apache.arrow.flatbuf.Struct_;\nimport Union = Schema_.org.apache.arrow.flatbuf.Union;\nimport DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\nimport FixedSizeBinary = Schema_.org.apache.arrow.flatbuf.FixedSizeBinary;\nimport FixedSizeList = Schema_.org.apache.arrow.flatbuf.FixedSizeList;\nimport Map_ = Schema_.org.apache.arrow.flatbuf.Map;\n\n/** @ignore */\nexport interface TypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T, builder: Builder): number | undefined;\n}\n\n/** @ignore */\nexport class TypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T, builder: Builder): number | undefined {\n        return (node == null || builder == null) ? undefined : super.visit(node, builder);\n    }\n    public visitNull<T extends type.Null>(_node: T, b: Builder) {\n        Null.startNull(b);\n        return Null.endNull(b);\n    }\n    public visitInt<T extends type.Int>(node: T, b: Builder) {\n        Int.startInt(b);\n        Int.addBitWidth(b, node.bitWidth);\n        Int.addIsSigned(b, node.isSigned);\n        return Int.endInt(b);\n    }\n    public visitFloat<T extends type.Float>(node: T, b: Builder) {\n        FloatingPoint.startFloatingPoint(b);\n        FloatingPoint.addPrecision(b, node.precision);\n        return FloatingPoint.endFloatingPoint(b);\n    }\n    public visitBinary<T extends type.Binary>(_node: T, b: Builder) {\n        Binary.startBinary(b);\n        return Binary.endBinary(b);\n    }\n    public visitBool<T extends type.Bool>(_node: T, b: Builder) {\n        Bool.startBool(b);\n        return Bool.endBool(b);\n    }\n    public visitUtf8<T extends type.Utf8>(_node: T, b: Builder) {\n        Utf8.startUtf8(b);\n        return Utf8.endUtf8(b);\n    }\n    public visitDecimal<T extends type.Decimal>(node: T, b: Builder) {\n        Decimal.startDecimal(b);\n        Decimal.addScale(b, node.scale);\n        Decimal.addPrecision(b, node.precision);\n        return Decimal.endDecimal(b);\n    }\n    public visitDate<T extends type.Date_>(node: T, b: Builder) {\n        Date.startDate(b);\n        Date.addUnit(b, node.unit);\n        return Date.endDate(b);\n    }\n    public visitTime<T extends type.Time>(node: T, b: Builder) {\n        Time.startTime(b);\n        Time.addUnit(b, node.unit);\n        Time.addBitWidth(b, node.bitWidth);\n        return Time.endTime(b);\n    }\n    public visitTimestamp<T extends type.Timestamp>(node: T, b: Builder) {\n        const timezone = (node.timezone && b.createString(node.timezone)) || undefined;\n        Timestamp.startTimestamp(b);\n        Timestamp.addUnit(b, node.unit);\n        if (timezone !== undefined) {\n            Timestamp.addTimezone(b, timezone);\n        }\n        return Timestamp.endTimestamp(b);\n    }\n    public visitInterval<T extends type.Interval>(node: T, b: Builder) {\n        Interval.startInterval(b);\n        Interval.addUnit(b, node.unit);\n        return Interval.endInterval(b);\n    }\n    public visitList<T extends type.List>(_node: T, b: Builder) {\n        List.startList(b);\n        return List.endList(b);\n    }\n    public visitStruct<T extends type.Struct>(_node: T, b: Builder) {\n        Struct.startStruct_(b);\n        return Struct.endStruct_(b);\n    }\n    public visitUnion<T extends type.Union>(node: T, b: Builder) {\n        Union.startTypeIdsVector(b, node.typeIds.length);\n        const typeIds = Union.createTypeIdsVector(b, node.typeIds);\n        Union.startUnion(b);\n        Union.addMode(b, node.mode);\n        Union.addTypeIds(b, typeIds);\n        return Union.endUnion(b);\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T, b: Builder) {\n        const indexType = this.visit(node.indices, b);\n        DictionaryEncoding.startDictionaryEncoding(b);\n        DictionaryEncoding.addId(b, new Long(node.id, 0));\n        DictionaryEncoding.addIsOrdered(b, node.isOrdered);\n        if (indexType !== undefined) {\n            DictionaryEncoding.addIndexType(b, indexType);\n        }\n        return DictionaryEncoding.endDictionaryEncoding(b);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>(node: T, b: Builder) {\n        FixedSizeBinary.startFixedSizeBinary(b);\n        FixedSizeBinary.addByteWidth(b, node.byteWidth);\n        return FixedSizeBinary.endFixedSizeBinary(b);\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>(node: T, b: Builder) {\n        FixedSizeList.startFixedSizeList(b);\n        FixedSizeList.addListSize(b, node.listSize);\n        return FixedSizeList.endFixedSizeList(b);\n    }\n    public visitMap<T extends type.Map_>(node: T, b: Builder) {\n        Map_.startMap(b);\n        Map_.addKeysSorted(b, node.keysSorted);\n        return Map_.endMap(b);\n    }\n}\n\n/** @ignore */\nexport const instance = new TypeAssembler();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Schema, Field } from '../../schema';\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\nimport { DictionaryBatch, RecordBatch, FieldNode, BufferRegion } from './message';\nimport { TimeUnit, Precision, IntervalUnit, UnionMode, DateUnit } from '../../enum';\n\n/** @ignore */\nexport function schemaFromJSON(_schema: any, dictionaries: Map<number, DataType> = new Map()) {\n    return new Schema(\n        schemaFieldsFromJSON(_schema, dictionaries),\n        customMetadataFromJSON(_schema['customMetadata']),\n        dictionaries\n    );\n}\n\n/** @ignore */\nexport function recordBatchFromJSON(b: any) {\n    return new RecordBatch(\n        b['count'],\n        fieldNodesFromJSON(b['columns']),\n        buffersFromJSON(b['columns'])\n    );\n}\n\n/** @ignore */\nexport function dictionaryBatchFromJSON(b: any) {\n    return new DictionaryBatch(\n        recordBatchFromJSON(b['data']),\n        b['id'], b['isDelta']\n    );\n}\n\n/** @ignore */\nfunction schemaFieldsFromJSON(_schema: any, dictionaries?: Map<number, DataType>) {\n    return (_schema['fields'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldChildrenFromJSON(_field: any, dictionaries?: Map<number, DataType>): Field[] {\n    return (_field['children'] || []).filter(Boolean).map((f: any) => Field.fromJSON(f, dictionaries));\n}\n\n/** @ignore */\nfunction fieldNodesFromJSON(xs: any[]): FieldNode[] {\n    return (xs || []).reduce<FieldNode[]>((fieldNodes, column: any) => [\n        ...fieldNodes,\n        new FieldNode(\n            column['count'],\n            nullCountFromJSON(column['VALIDITY'])\n        ),\n        ...fieldNodesFromJSON(column['children'])\n    ], [] as FieldNode[]);\n}\n\n/** @ignore */\nfunction buffersFromJSON(xs: any[], buffers: BufferRegion[] = []): BufferRegion[] {\n    for (let i = -1, n = (xs || []).length; ++i < n;) {\n        const column = xs[i];\n        column['VALIDITY'] && buffers.push(new BufferRegion(buffers.length, column['VALIDITY'].length));\n        column['TYPE'] && buffers.push(new BufferRegion(buffers.length, column['TYPE'].length));\n        column['OFFSET'] && buffers.push(new BufferRegion(buffers.length, column['OFFSET'].length));\n        column['DATA'] && buffers.push(new BufferRegion(buffers.length, column['DATA'].length));\n        buffers = buffersFromJSON(column['children'], buffers);\n    }\n    return buffers;\n}\n\n/** @ignore */\nfunction nullCountFromJSON(validity: number[]) {\n    return (validity || []).reduce((sum, val) => sum + +(val === 0), 0);\n}\n\n/** @ignore */\nexport function fieldFromJSON(_field: any, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let keys: TKeys | null;\n    let field: Field | void;\n    let dictMeta: any;\n    let type: DataType<any>;\n    let dictType: Dictionary;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = _field['dictionary'])) {\n        type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries));\n        field = new Field(_field['name'], type, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta['id'])) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = typeFromJSON(_field, fieldChildrenFromJSON(_field, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta['indexType']) ? indexTypeFromJSON(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta['isOrdered']);\n        field = new Field(_field['name'], dictType, _field['nullable'], customMetadataFromJSON(_field['customMetadata']));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction customMetadataFromJSON(_metadata?: object) {\n    return new Map<string, string>(Object.entries(_metadata || {}));\n}\n\n/** @ignore */\nfunction indexTypeFromJSON(_type: any) {\n    return new Int(_type['isSigned'], _type['bitWidth']);\n}\n\n/** @ignore */\nfunction typeFromJSON(f: any, children?: Field[]): DataType<any> {\n\n    const typeId = f['type']['name'];\n\n    switch (typeId) {\n        case 'NONE':   return new Null();\n        case 'null':   return new Null();\n        case 'binary': return new Binary();\n        case 'utf8':   return new Utf8();\n        case 'bool':   return new Bool();\n        case 'list':   return new List((children || [])[0]);\n        case 'struct': return new Struct(children || []);\n        case 'struct_': return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case 'int': {\n            const t = f['type'];\n            return new Int(t['isSigned'], t['bitWidth'] as IntBitWidth);\n        }\n        case 'floatingpoint': {\n            const t = f['type'];\n            return new Float(Precision[t['precision']] as any);\n        }\n        case 'decimal': {\n            const t = f['type'];\n            return new Decimal(t['scale'], t['precision']);\n        }\n        case 'date': {\n            const t = f['type'];\n            return new Date_(DateUnit[t['unit']] as any);\n        }\n        case 'time': {\n            const t = f['type'];\n            return new Time(TimeUnit[t['unit']] as any, t['bitWidth'] as TimeBitWidth);\n        }\n        case 'timestamp': {\n            const t = f['type'];\n            return new Timestamp(TimeUnit[t['unit']] as any, t['timezone']);\n        }\n        case 'interval': {\n            const t = f['type'];\n            return new Interval(IntervalUnit[t['unit']] as any);\n        }\n        case 'union': {\n            const t = f['type'];\n            return new Union(UnionMode[t['mode']] as any, (t['typeIds'] || []), children || []);\n        }\n        case 'fixedsizebinary': {\n            const t = f['type'];\n            return new FixedSizeBinary(t['byteWidth']);\n        }\n        case 'fixedsizelist': {\n            const t = f['type'];\n            return new FixedSizeList(t['listSize'], (children || [])[0]);\n        }\n        case 'map': {\n            const t = f['type'];\n            return new Map_((children || [])[0], t['keysSorted']);\n        }\n    }\n    throw new Error(`Unrecognized type: \"${typeId}\"`);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as Schema_ from '../../fb/Schema';\nimport * as Message_ from '../../fb/Message';\n\nimport { Schema, Field } from '../../schema';\nimport { toUint8Array } from '../../util/buffer';\nimport { ArrayBufferViewInput } from '../../util/buffer';\nimport { MessageHeader, MetadataVersion } from '../../enum';\nimport { instance as typeAssembler } from '../../visitor/typeassembler';\nimport { fieldFromJSON, schemaFromJSON, recordBatchFromJSON, dictionaryBatchFromJSON } from './json';\n\nimport Long = flatbuffers.Long;\nimport Builder = flatbuffers.Builder;\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport _Int = Schema_.org.apache.arrow.flatbuf.Int;\nimport Type = Schema_.org.apache.arrow.flatbuf.Type;\nimport _Field = Schema_.org.apache.arrow.flatbuf.Field;\nimport _Schema = Schema_.org.apache.arrow.flatbuf.Schema;\nimport _Buffer = Schema_.org.apache.arrow.flatbuf.Buffer;\nimport _Message = Message_.org.apache.arrow.flatbuf.Message;\nimport _KeyValue = Schema_.org.apache.arrow.flatbuf.KeyValue;\nimport _FieldNode = Message_.org.apache.arrow.flatbuf.FieldNode;\nimport _Endianness = Schema_.org.apache.arrow.flatbuf.Endianness;\nimport _RecordBatch = Message_.org.apache.arrow.flatbuf.RecordBatch;\nimport _DictionaryBatch = Message_.org.apache.arrow.flatbuf.DictionaryBatch;\nimport _DictionaryEncoding = Schema_.org.apache.arrow.flatbuf.DictionaryEncoding;\n\nimport {\n    DataType, Dictionary, TimeBitWidth,\n    Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n    Bool, Null, Int, Float, Date_, Time, Interval, Timestamp, IntBitWidth, Int32, TKeys,\n} from '../../type';\n\n/**\n * @ignore\n * @private\n **/\nexport class Message<T extends MessageHeader = any> {\n\n    /** @nocollapse */\n    public static fromJSON<T extends MessageHeader>(msg: any, headerType: T): Message<T> {\n        const message = new Message(0, MetadataVersion.V4, headerType);\n        message._createHeader = messageHeaderFromJSON(msg, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static decode(buf: ArrayBufferViewInput) {\n        buf = new ByteBuffer(toUint8Array(buf));\n        const _message = _Message.getRootAsMessage(buf);\n        const bodyLength: Long = _message.bodyLength()!;\n        const version: MetadataVersion = _message.version();\n        const headerType: MessageHeader = _message.headerType();\n        const message = new Message(bodyLength, version, headerType);\n        message._createHeader = decodeMessageHeader(_message, headerType);\n        return message;\n    }\n\n    /** @nocollapse */\n    public static encode<T extends MessageHeader>(message: Message<T>) {\n        let b = new Builder(), headerOffset = -1;\n        if (message.isSchema()) {\n            headerOffset = Schema.encode(b, message.header() as Schema);\n        } else if (message.isRecordBatch()) {\n            headerOffset = RecordBatch.encode(b, message.header() as RecordBatch);\n        } else if (message.isDictionaryBatch()) {\n            headerOffset = DictionaryBatch.encode(b, message.header() as DictionaryBatch);\n        }\n        _Message.startMessage(b);\n        _Message.addVersion(b, MetadataVersion.V4);\n        _Message.addHeader(b, headerOffset);\n        _Message.addHeaderType(b, message.headerType);\n        _Message.addBodyLength(b, new Long(message.bodyLength, 0));\n        _Message.finishMessageBuffer(b, _Message.endMessage(b));\n        return b.asUint8Array();\n    }\n\n    /** @nocollapse */\n    public static from(header: Schema | RecordBatch | DictionaryBatch, bodyLength = 0) {\n        if (header instanceof Schema) {\n            return new Message(0, MetadataVersion.V4, MessageHeader.Schema, header);\n        }\n        if (header instanceof RecordBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.RecordBatch, header);\n        }\n        if (header instanceof DictionaryBatch) {\n            return new Message(bodyLength, MetadataVersion.V4, MessageHeader.DictionaryBatch, header);\n        }\n        throw new Error(`Unrecognized Message header: ${header}`);\n    }\n\n    // @ts-ignore\n    public body: Uint8Array;\n    protected _headerType: T;\n    protected _bodyLength: number;\n    protected _version: MetadataVersion;\n    public get type() { return this.headerType; }\n    public get version() { return this._version; }\n    public get headerType() { return this._headerType; }\n    public get bodyLength() { return this._bodyLength; }\n    // @ts-ignore\n    protected _createHeader: MessageHeaderDecoder;\n    public header() { return this._createHeader<T>(); }\n    public isSchema(): this is Message<MessageHeader.Schema> { return this.headerType === MessageHeader.Schema; }\n    public isRecordBatch(): this is Message<MessageHeader.RecordBatch> { return this.headerType === MessageHeader.RecordBatch; }\n    public isDictionaryBatch(): this is Message<MessageHeader.DictionaryBatch> { return this.headerType === MessageHeader.DictionaryBatch; }\n\n    constructor(bodyLength: Long | number, version: MetadataVersion, headerType: T, header?: any) {\n        this._version = version;\n        this._headerType = headerType;\n        this.body = new Uint8Array(0);\n        header && (this._createHeader = () => header);\n        this._bodyLength = typeof bodyLength === 'number' ? bodyLength : bodyLength.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class RecordBatch {\n    protected _length: number;\n    protected _nodes: FieldNode[];\n    protected _buffers: BufferRegion[];\n    public get nodes() { return this._nodes; }\n    public get length() { return this._length; }\n    public get buffers() { return this._buffers; }\n    constructor(length: Long | number, nodes: FieldNode[], buffers: BufferRegion[]) {\n        this._nodes = nodes;\n        this._buffers = buffers;\n        this._length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class DictionaryBatch {\n\n    protected _id: number;\n    protected _isDelta: boolean;\n    protected _data: RecordBatch;\n    public get id() { return this._id; }\n    public get data() { return this._data; }\n    public get isDelta() { return this._isDelta; }\n    public get length(): number { return this.data.length; }\n    public get nodes(): FieldNode[] { return this.data.nodes; }\n    public get buffers(): BufferRegion[] { return this.data.buffers; }\n\n    constructor(data: RecordBatch, id: Long | number, isDelta: boolean = false) {\n        this._data = data;\n        this._isDelta = isDelta;\n        this._id = typeof id === 'number' ? id : id.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class BufferRegion {\n    public offset: number;\n    public length: number;\n    constructor(offset: Long | number, length: Long | number) {\n        this.offset = typeof offset === 'number' ? offset : offset.low;\n        this.length = typeof length === 'number' ? length : length.low;\n    }\n}\n\n/**\n * @ignore\n * @private\n **/\nexport class FieldNode {\n    public length: number;\n    public nullCount: number;\n    constructor(length: Long | number, nullCount: Long | number) {\n        this.length = typeof length === 'number' ? length : length.low;\n        this.nullCount = typeof nullCount === 'number' ? nullCount : nullCount.low;\n    }\n}\n\n/** @ignore */\nfunction messageHeaderFromJSON(message: any, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.fromJSON(message);\n            case MessageHeader.RecordBatch: return RecordBatch.fromJSON(message);\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.fromJSON(message);\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\n/** @ignore */\nfunction decodeMessageHeader(message: _Message, type: MessageHeader) {\n    return (() => {\n        switch (type) {\n            case MessageHeader.Schema: return Schema.decode(message.header(new _Schema())!);\n            case MessageHeader.RecordBatch: return RecordBatch.decode(message.header(new _RecordBatch())!, message.version());\n            case MessageHeader.DictionaryBatch: return DictionaryBatch.decode(message.header(new _DictionaryBatch())!, message.version());\n        }\n        throw new Error(`Unrecognized Message type: { name: ${MessageHeader[type]}, type: ${type} }`);\n    }) as MessageHeaderDecoder;\n}\n\nField['encode'] = encodeField;\nField['decode'] = decodeField;\nField['fromJSON'] = fieldFromJSON;\n\nSchema['encode'] = encodeSchema;\nSchema['decode'] = decodeSchema;\nSchema['fromJSON'] = schemaFromJSON;\n\nRecordBatch['encode'] = encodeRecordBatch;\nRecordBatch['decode'] = decodeRecordBatch;\nRecordBatch['fromJSON'] = recordBatchFromJSON;\n\nDictionaryBatch['encode'] = encodeDictionaryBatch;\nDictionaryBatch['decode'] = decodeDictionaryBatch;\nDictionaryBatch['fromJSON'] = dictionaryBatchFromJSON;\n\nFieldNode['encode'] = encodeFieldNode;\nFieldNode['decode'] = decodeFieldNode;\n\nBufferRegion['encode'] = encodeBufferRegion;\nBufferRegion['decode'] = decodeBufferRegion;\n\ndeclare module '../../schema' {\n    namespace Field {\n        export { encodeField as encode };\n        export { decodeField as decode };\n        export { fieldFromJSON as fromJSON };\n    }\n    namespace Schema {\n        export { encodeSchema as encode };\n        export { decodeSchema as decode };\n        export { schemaFromJSON as fromJSON };\n    }\n}\n\ndeclare module './message' {\n    namespace RecordBatch {\n        export { encodeRecordBatch as encode };\n        export { decodeRecordBatch as decode };\n        export { recordBatchFromJSON as fromJSON };\n    }\n    namespace DictionaryBatch {\n        export { encodeDictionaryBatch as encode };\n        export { decodeDictionaryBatch as decode };\n        export { dictionaryBatchFromJSON as fromJSON };\n    }\n    namespace FieldNode {\n        export { encodeFieldNode as encode };\n        export { decodeFieldNode as decode };\n    }\n    namespace BufferRegion {\n        export { encodeBufferRegion as encode };\n        export { decodeBufferRegion as decode };\n    }\n}\n\n/** @ignore */\nfunction decodeSchema(_schema: _Schema, dictionaries: Map<number, DataType> = new Map()) {\n    const fields = decodeSchemaFields(_schema, dictionaries);\n    return new Schema(fields, decodeCustomMetadata(_schema), dictionaries);\n}\n\n/** @ignore */\nfunction decodeRecordBatch(batch: _RecordBatch, version = MetadataVersion.V4) {\n    return new RecordBatch(batch.length(), decodeFieldNodes(batch), decodeBuffers(batch, version));\n}\n\n/** @ignore */\nfunction decodeDictionaryBatch(batch: _DictionaryBatch, version = MetadataVersion.V4) {\n    return new DictionaryBatch(RecordBatch.decode(batch.data()!, version), batch.id(), batch.isDelta());\n}\n\n/** @ignore */\nfunction decodeBufferRegion(b: _Buffer) {\n    return new BufferRegion(b.offset(), b.length());\n}\n\n/** @ignore */\nfunction decodeFieldNode(f: _FieldNode) {\n    return new FieldNode(f.length(), f.nullCount());\n}\n\n/** @ignore */\nfunction decodeFieldNodes(batch: _RecordBatch) {\n    const nodes = [] as FieldNode[];\n    for (let f, i = -1, j = -1, n = batch.nodesLength(); ++i < n;) {\n        if (f = batch.nodes(i)) {\n            nodes[++j] = FieldNode.decode(f);\n        }\n    }\n    return nodes;\n}\n\n/** @ignore */\nfunction decodeBuffers(batch: _RecordBatch, version: MetadataVersion) {\n    const bufferRegions = [] as BufferRegion[];\n    for (let b, i = -1, j = -1, n = batch.buffersLength(); ++i < n;) {\n        if (b = batch.buffers(i)) {\n        // If this Arrow buffer was written before version 4,\n        // advance the buffer's bb_pos 8 bytes to skip past\n        // the now-removed page_id field\n        if (version < MetadataVersion.V4) {\n                b.bb_pos += (8 * (i + 1));\n            }\n            bufferRegions[++j] = BufferRegion.decode(b);\n        }\n    }\n    return bufferRegions;\n}\n\n/** @ignore */\nfunction decodeSchemaFields(schema: _Schema, dictionaries?: Map<number, DataType>) {\n    const fields = [] as Field[];\n    for (let f, i = -1, j = -1, n = schema.fieldsLength(); ++i < n;) {\n        if (f = schema.fields(i)) {\n            fields[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return fields;\n}\n\n/** @ignore */\nfunction decodeFieldChildren(field: _Field, dictionaries?: Map<number, DataType>): Field[] {\n    const children = [] as Field[];\n    for (let f, i = -1, j = -1, n = field.childrenLength(); ++i < n;) {\n        if (f = field.children(i)) {\n            children[++j] = Field.decode(f, dictionaries);\n        }\n    }\n    return children;\n}\n\n/** @ignore */\nfunction decodeField(f: _Field, dictionaries?: Map<number, DataType>) {\n\n    let id: number;\n    let field: Field | void;\n    let type: DataType<any>;\n    let keys: _Int | TKeys | null;\n    let dictType: Dictionary;\n    let dictMeta: _DictionaryEncoding | null;\n\n    // If no dictionary encoding\n    if (!dictionaries || !(dictMeta = f.dictionary())) {\n        type = decodeFieldType(f, decodeFieldChildren(f, dictionaries));\n        field = new Field(f.name()!, type, f.nullable(), decodeCustomMetadata(f));\n    }\n    // tslint:disable\n    // If dictionary encoded and the first time we've seen this dictionary id, decode\n    // the data type and child fields, then wrap in a Dictionary type and insert the\n    // data type into the dictionary types map.\n    else if (!dictionaries.has(id = dictMeta.id().low)) {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictionaries.set(id, type = decodeFieldType(f, decodeFieldChildren(f, dictionaries)));\n        dictType = new Dictionary(type, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    // If dictionary encoded, and have already seen this dictionary Id in the schema, then reuse the\n    // data type and wrap in a new Dictionary type and field.\n    else {\n        // a dictionary index defaults to signed 32 bit int if unspecified\n        keys = (keys = dictMeta.indexType()) ? decodeIndexType(keys) as TKeys : new Int32();\n        dictType = new Dictionary(dictionaries.get(id)!, keys, id, dictMeta.isOrdered());\n        field = new Field(f.name()!, dictType, f.nullable(), decodeCustomMetadata(f));\n    }\n    return field || null;\n}\n\n/** @ignore */\nfunction decodeCustomMetadata(parent?: _Schema | _Field | null) {\n    const data = new Map<string, string>();\n    if (parent) {\n        for (let entry, key, i = -1, n = parent.customMetadataLength() | 0; ++i < n;) {\n            if ((entry = parent.customMetadata(i)) && (key = entry.key()) != null) {\n                data.set(key, entry.value()!);\n            }\n        }\n    }\n    return data;\n}\n\n/** @ignore */\nfunction decodeIndexType(_type: _Int) {\n    return new Int(_type.isSigned(), _type.bitWidth() as IntBitWidth);\n}\n\n/** @ignore */\nfunction decodeFieldType(f: _Field, children?: Field[]): DataType<any> {\n\n    const typeId = f.typeType();\n\n    switch (typeId) {\n        case Type.NONE:    return new Null();\n        case Type.Null:    return new Null();\n        case Type.Binary:  return new Binary();\n        case Type.Utf8:    return new Utf8();\n        case Type.Bool:    return new Bool();\n        case Type.List:    return new List((children || [])[0]);\n        case Type.Struct_: return new Struct(children || []);\n    }\n\n    switch (typeId) {\n        case Type.Int: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Int())!;\n            return new Int(t.isSigned(), t.bitWidth());\n        }\n        case Type.FloatingPoint: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FloatingPoint())!;\n            return new Float(t.precision());\n        }\n        case Type.Decimal: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Decimal())!;\n            return new Decimal(t.scale(), t.precision());\n        }\n        case Type.Date: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Date())!;\n            return new Date_(t.unit());\n        }\n        case Type.Time: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Time())!;\n            return new Time(t.unit(), t.bitWidth() as TimeBitWidth);\n        }\n        case Type.Timestamp: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Timestamp())!;\n            return new Timestamp(t.unit(), t.timezone());\n        }\n        case Type.Interval: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Interval())!;\n            return new Interval(t.unit());\n        }\n        case Type.Union: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Union())!;\n            return new Union(t.mode(), t.typeIdsArray() || [], children || []);\n        }\n        case Type.FixedSizeBinary: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeBinary())!;\n            return new FixedSizeBinary(t.byteWidth());\n        }\n        case Type.FixedSizeList: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.FixedSizeList())!;\n            return new FixedSizeList(t.listSize(), (children || [])[0]);\n        }\n        case Type.Map: {\n            const t = f.type(new Schema_.org.apache.arrow.flatbuf.Map())!;\n            return new Map_((children || [])[0], t.keysSorted());\n        }\n    }\n    throw new Error(`Unrecognized type: \"${Type[typeId]}\" (${typeId})`);\n}\n\n/** @ignore */\nfunction encodeSchema(b: Builder, schema: Schema) {\n\n    const fieldOffsets = schema.fields.map((f) => Field.encode(b, f));\n\n    _Schema.startFieldsVector(b, fieldOffsets.length);\n\n    const fieldsVectorOffset = _Schema.createFieldsVector(b, fieldOffsets);\n\n    const metadataOffset = !(schema.metadata && schema.metadata.size > 0) ? -1 :\n        _Schema.createCustomMetadataVector(b, [...schema.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    _Schema.startSchema(b);\n    _Schema.addFields(b, fieldsVectorOffset);\n    _Schema.addEndianness(b, platformIsLittleEndian ? _Endianness.Little : _Endianness.Big);\n\n    if (metadataOffset !== -1) { _Schema.addCustomMetadata(b, metadataOffset); }\n\n    return _Schema.endSchema(b);\n}\n\n/** @ignore */\nfunction encodeField(b: Builder, field: Field) {\n\n    let nameOffset = -1;\n    let typeOffset = -1;\n    let dictionaryOffset = -1;\n\n    let type = field.type;\n    let typeId: Type = <any> field.typeId;\n\n    if (!DataType.isDictionary(type)) {\n        typeOffset = typeAssembler.visit(type, b)!;\n    } else {\n        typeId = type.dictionary.typeId;\n        dictionaryOffset = typeAssembler.visit(type, b)!;\n        typeOffset = typeAssembler.visit(type.dictionary, b)!;\n    }\n\n    const childOffsets = (type.children || []).map((f: Field) => Field.encode(b, f));\n    const childrenVectorOffset = _Field.createChildrenVector(b, childOffsets);\n\n    const metadataOffset = !(field.metadata && field.metadata.size > 0) ? -1 :\n        _Field.createCustomMetadataVector(b, [...field.metadata].map(([k, v]) => {\n            const key = b.createString(`${k}`);\n            const val = b.createString(`${v}`);\n            _KeyValue.startKeyValue(b);\n            _KeyValue.addKey(b, key);\n            _KeyValue.addValue(b, val);\n            return _KeyValue.endKeyValue(b);\n        }));\n\n    if (field.name) {\n        nameOffset = b.createString(field.name);\n    }\n\n    _Field.startField(b);\n    _Field.addType(b, typeOffset);\n    _Field.addTypeType(b, typeId);\n    _Field.addChildren(b, childrenVectorOffset);\n    _Field.addNullable(b, !!field.nullable);\n\n    if (nameOffset !== -1) { _Field.addName(b, nameOffset); }\n    if (dictionaryOffset !== -1) { _Field.addDictionary(b, dictionaryOffset); }\n    if (metadataOffset !== -1) { _Field.addCustomMetadata(b, metadataOffset); }\n\n    return _Field.endField(b);\n}\n\n/** @ignore */\nfunction encodeRecordBatch(b: Builder, recordBatch: RecordBatch) {\n\n    const nodes = recordBatch.nodes || [];\n    const buffers = recordBatch.buffers || [];\n\n    _RecordBatch.startNodesVector(b, nodes.length);\n    nodes.slice().reverse().forEach((n) => FieldNode.encode(b, n));\n\n    const nodesVectorOffset = b.endVector();\n\n    _RecordBatch.startBuffersVector(b, buffers.length);\n    buffers.slice().reverse().forEach((b_) => BufferRegion.encode(b, b_));\n\n    const buffersVectorOffset = b.endVector();\n\n    _RecordBatch.startRecordBatch(b);\n    _RecordBatch.addLength(b, new Long(recordBatch.length, 0));\n    _RecordBatch.addNodes(b, nodesVectorOffset);\n    _RecordBatch.addBuffers(b, buffersVectorOffset);\n    return _RecordBatch.endRecordBatch(b);\n}\n\n/** @ignore */\nfunction encodeDictionaryBatch(b: Builder, dictionaryBatch: DictionaryBatch) {\n    const dataOffset = RecordBatch.encode(b, dictionaryBatch.data);\n    _DictionaryBatch.startDictionaryBatch(b);\n    _DictionaryBatch.addId(b, new Long(dictionaryBatch.id, 0));\n    _DictionaryBatch.addIsDelta(b, dictionaryBatch.isDelta);\n    _DictionaryBatch.addData(b, dataOffset);\n    return _DictionaryBatch.endDictionaryBatch(b);\n}\n\n/** @ignore */\nfunction encodeFieldNode(b: Builder, node: FieldNode) {\n    return _FieldNode.createFieldNode(b, new Long(node.length, 0), new Long(node.nullCount, 0));\n}\n\n/** @ignore */\nfunction encodeBufferRegion(b: Builder, node: BufferRegion) {\n    return _Buffer.createBuffer(b, new Long(node.offset, 0), new Long(node.length, 0));\n}\n\n/** @ignore */\nconst platformIsLittleEndian = (function() {\n    const buffer = new ArrayBuffer(2);\n    new DataView(buffer).setInt16(0, 256, true /* littleEndian */);\n    // Int16Array uses the platform's endianness.\n    return new Int16Array(buffer)[0] === 256;\n})();\n\n/** @ignore */\ntype MessageHeaderDecoder = <T extends MessageHeader>() => T extends MessageHeader.Schema ? Schema\n                                                         : T extends MessageHeader.RecordBatch ? RecordBatch\n                                                         : T extends MessageHeader.DictionaryBatch ? DictionaryBatch : never;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MessageHeader } from '../enum';\nimport { flatbuffers } from 'flatbuffers';\nimport ByteBuffer = flatbuffers.ByteBuffer;\nimport { Message } from './metadata/message';\nimport { isFileHandle } from '../util/compat';\nimport { AsyncRandomAccessFile } from '../io/file';\nimport { toUint8Array, ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, ReadableSource, AsyncByteStream } from '../io/stream';\nimport { ArrowJSON, ArrowJSONLike, ITERATOR_DONE, FileHandle } from '../io/interfaces';\n\n/** @ignore */ const invalidMessageType       = (type: MessageHeader) => `Expected ${MessageHeader[type]} Message in stream, but was null or length 0.`;\n/** @ignore */ const nullMessage              = (type: MessageHeader) => `Header pointer of flatbuffer-encoded ${MessageHeader[type]} Message is null or length 0.`;\n/** @ignore */ const invalidMessageMetadata   = (expected: number, actual: number) => `Expected to read ${expected} metadata bytes, but only read ${actual}.`;\n/** @ignore */ const invalidMessageBodyLength = (expected: number, actual: number) => `Expected to read ${expected} bytes for message body, but only read ${actual}.`;\n\n/** @ignore */\nexport class MessageReader implements IterableIterator<Message> {\n    protected source: ByteStream;\n    constructor(source: ByteStream | ArrayBufferViewInput | Iterable<ArrayBufferViewInput>) {\n        this.source = source instanceof ByteStream ? source : new ByteStream(source);\n    }\n    public [Symbol.iterator](): IterableIterator<Message> { return this as IterableIterator<Message>; }\n    public next(): IteratorResult<Message> {\n        let r;\n        if ((r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readMessageBody(bodyLength: number): Uint8Array {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected readMetadataLength(): IteratorResult<number> {\n        const buf = this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected readMetadata(metadataLength: number): IteratorResult<Message> {\n        const buf = this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class AsyncMessageReader implements AsyncIterableIterator<Message> {\n    protected source: AsyncByteStream;\n    constructor(source: ReadableSource<Uint8Array>);\n    constructor(source: FileHandle, byteLength?: number);\n    constructor(source: any, byteLength?: number) {\n        this.source = source instanceof AsyncByteStream ? source\n            : isFileHandle(source)\n            ? new AsyncRandomAccessFile(source, byteLength!)\n            : new AsyncByteStream(source);\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<Message> { return this as AsyncIterableIterator<Message>; }\n    public async next(): Promise<IteratorResult<Message>> {\n        let r;\n        if ((r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        // ARROW-6313: If the first 4 bytes are continuation indicator (-1), read\n        // the next 4 for the 32-bit metadata length. Otherwise, assume this is a\n        // pre-v0.15 message, where the first 4 bytes are the metadata length.\n        if ((r.value === -1) &&\n            (r = await this.readMetadataLength()).done) { return ITERATOR_DONE; }\n        if ((r = await this.readMetadata(r.value)).done) { return ITERATOR_DONE; }\n        return (<any> r) as IteratorResult<Message>;\n    }\n    public async throw(value?: any) { return await this.source.throw(value); }\n    public async return(value?: any) { return await this.source.return(value); }\n    public async readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = await this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public async readMessageBody(bodyLength: number): Promise<Uint8Array> {\n        if (bodyLength <= 0) { return new Uint8Array(0); }\n        const buf = toUint8Array(await this.source.read(bodyLength));\n        if (buf.byteLength < bodyLength) {\n            throw new Error(invalidMessageBodyLength(bodyLength, buf.byteLength));\n        }\n        // 1. Work around bugs in fs.ReadStream's internal Buffer pooling, see: https://github.com/nodejs/node/issues/24817\n        // 2. Work around https://github.com/whatwg/streams/blob/0ebe4b042e467d9876d80ae045de3843092ad797/reference-implementation/lib/helpers.js#L126\n        return /* 1. */ (buf.byteOffset % 8 === 0) &&\n               /* 2. */ (buf.byteOffset + buf.byteLength) <= buf.buffer.byteLength ? buf : buf.slice();\n    }\n    public async readSchema(throwIfNull = false) {\n        const type = MessageHeader.Schema;\n        const message = await this.readMessage(type);\n        const schema = message && message.header();\n        if (throwIfNull && !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n    protected async readMetadataLength(): Promise<IteratorResult<number>> {\n        const buf = await this.source.read(PADDING);\n        const bb = buf && new ByteBuffer(buf);\n        const len = bb && bb.readInt32(0) || 0;\n        return { done: len === 0, value: len };\n    }\n    protected async readMetadata(metadataLength: number): Promise<IteratorResult<Message>> {\n        const buf = await this.source.read(metadataLength);\n        if (!buf) { return ITERATOR_DONE; }\n        if (buf.byteLength < metadataLength) {\n            throw new Error(invalidMessageMetadata(metadataLength, buf.byteLength));\n        }\n        return { done: false, value: Message.decode(buf) };\n    }\n}\n\n/** @ignore */\nexport class JSONMessageReader extends MessageReader {\n    private _schema = false;\n    private _json: ArrowJSON;\n    private _body: any[] = [];\n    private _batchIndex = 0;\n    private _dictionaryIndex = 0;\n    constructor(source: ArrowJSON | ArrowJSONLike) {\n        super(new Uint8Array(0));\n        this._json = source instanceof ArrowJSON ? source : new ArrowJSON(source);\n    }\n    public next() {\n        const { _json } = this;\n        if (!this._schema) {\n            this._schema = true;\n            const message = Message.fromJSON(_json.schema, MessageHeader.Schema);\n            return { done: false, value: message };\n        }\n        if (this._dictionaryIndex < _json.dictionaries.length) {\n            const batch = _json.dictionaries[this._dictionaryIndex++];\n            this._body = batch['data']['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.DictionaryBatch);\n            return { done: false, value: message };\n        }\n        if (this._batchIndex < _json.batches.length) {\n            const batch = _json.batches[this._batchIndex++];\n            this._body = batch['columns'];\n            const message = Message.fromJSON(batch, MessageHeader.RecordBatch);\n            return { done: false, value: message };\n        }\n        this._body = [];\n        return ITERATOR_DONE;\n    }\n    public readMessageBody(_bodyLength?: number) {\n        return flattenDataSources(this._body) as any;\n        function flattenDataSources(xs: any[]): any[][] {\n            return (xs || []).reduce<any[][]>((buffers, column: any) => [\n                ...buffers,\n                ...(column['VALIDITY'] && [column['VALIDITY']] || []),\n                ...(column['TYPE'] && [column['TYPE']] || []),\n                ...(column['OFFSET'] && [column['OFFSET']] || []),\n                ...(column['DATA'] && [column['DATA']] || []),\n                ...flattenDataSources(column['children'])\n            ], [] as any[][]);\n        }\n    }\n    public readMessage<T extends MessageHeader>(type?: T | null) {\n        let r: IteratorResult<Message<T>>;\n        if ((r = this.next()).done) { return null; }\n        if ((type != null) && r.value.headerType !== type) {\n            throw new Error(invalidMessageType(type));\n        }\n        return r.value;\n    }\n    public readSchema() {\n        const type = MessageHeader.Schema;\n        const message = this.readMessage(type);\n        const schema = message && message.header();\n        if (!message || !schema) {\n            throw new Error(nullMessage(type));\n        }\n        return schema;\n    }\n}\n\n/** @ignore */\nexport const PADDING = 4;\n/** @ignore */\nexport const MAGIC_STR = 'ARROW1';\n/** @ignore */\nexport const MAGIC = new Uint8Array(MAGIC_STR.length);\n\nfor (let i = 0; i < MAGIC_STR.length; i += 1 | 0) {\n    MAGIC[i] = MAGIC_STR.charCodeAt(i);\n}\n\n/** @ignore */\nexport function checkForMagicArrowString(buffer: Uint8Array, index = 0) {\n    for (let i = -1, n = MAGIC.length; ++i < n;) {\n        if (MAGIC[i] !== buffer[index + i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/** @ignore */\nexport const magicLength = MAGIC.length;\n/** @ignore */\nexport const magicAndPadding = magicLength + PADDING;\n/** @ignore */\nexport const magicX2AndPadding = magicLength * 2 + PADDING;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Visitor } from '../visitor';\nimport { Type, UnionMode } from '../enum';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { rebaseValueOffsets } from '../util/buffer';\nimport { packBools, truncateBitmap } from '../util/bit';\nimport { selectVectorChildrenArgs } from '../util/args';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp, Union,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n} from '../type';\n\n/** @ignore */\nexport interface VectorAssembler extends Visitor {\n    visit<T extends Vector>(node: T): this;\n    visitMany<T extends Vector>(nodes: T[]): this[];\n    getVisitFn<T extends Type>(node: T): (vector: V<T>) => this;\n    getVisitFn<T extends DataType>(node: V<T> | Data<T> | T): (vector: V<T>) => this;\n\n    visitBool                 <T extends Bool>            (vector: V<T>): this;\n    visitInt                  <T extends Int>             (vector: V<T>): this;\n    visitFloat                <T extends Float>           (vector: V<T>): this;\n    visitUtf8                 <T extends Utf8>            (vector: V<T>): this;\n    visitBinary               <T extends Binary>          (vector: V<T>): this;\n    visitFixedSizeBinary      <T extends FixedSizeBinary> (vector: V<T>): this;\n    visitDate                 <T extends Date_>           (vector: V<T>): this;\n    visitTimestamp            <T extends Timestamp>       (vector: V<T>): this;\n    visitTime                 <T extends Time>            (vector: V<T>): this;\n    visitDecimal              <T extends Decimal>         (vector: V<T>): this;\n    visitList                 <T extends List>            (vector: V<T>): this;\n    visitStruct               <T extends Struct>          (vector: V<T>): this;\n    visitUnion                <T extends Union>           (vector: V<T>): this;\n    visitInterval             <T extends Interval>        (vector: V<T>): this;\n    visitFixedSizeList        <T extends FixedSizeList>   (vector: V<T>): this;\n    visitMap                  <T extends Map_>            (vector: V<T>): this;\n}\n\n/** @ignore */\nexport class VectorAssembler extends Visitor {\n\n    /** @nocollapse */\n    public static assemble<T extends Vector | RecordBatch>(...args: (T | T[])[]) {\n        const assembler = new VectorAssembler();\n        const vectorChildren = selectVectorChildrenArgs(RecordBatch, args);\n        const [assembleResult = assembler] = assembler.visitMany(vectorChildren);\n        return assembleResult;\n    }\n\n    private constructor() { super(); }\n\n    public visit<T extends Vector>(vector: T): this {\n        if (!DataType.isDictionary(vector.type)) {\n            const { data, length, nullCount } = vector;\n            if (length > 2147483647) {\n                /* istanbul ignore next */\n                throw new RangeError('Cannot write arrays larger than 2^31 - 1 in length');\n            }\n            if (!DataType.isNull(vector.type)) {\n                addBuffer.call(this, nullCount <= 0\n                    ? new Uint8Array(0) // placeholder validity buffer\n                    : truncateBitmap(data.offset, length, data.nullBitmap)\n                );\n            }\n            this.nodes.push(new FieldNode(length, nullCount));\n        }\n        return super.visit(vector);\n    }\n\n    public visitNull<T extends Null>(_nullV: V<T>) {\n        return this;\n    }\n    public visitDictionary<T extends Dictionary>(vector: V<T>) {\n        // Assemble the indices here, Dictionary assembled separately.\n        return this.visit(vector.indices);\n    }\n\n    public get nodes() { return this._nodes; }\n    public get buffers() { return this._buffers; }\n    public get byteLength() { return this._byteLength; }\n    public get bufferRegions() { return this._bufferRegions; }\n\n    protected _byteLength = 0;\n    protected _nodes: FieldNode[] = [];\n    protected _buffers: ArrayBufferView[] = [];\n    protected _bufferRegions: BufferRegion[] = [];\n}\n\n/** @ignore */\nfunction addBuffer(this: VectorAssembler, values: ArrayBufferView) {\n    const byteLength = (values.byteLength + 7) & ~7; // Round up to a multiple of 8\n    this.buffers.push(values);\n    this.bufferRegions.push(new BufferRegion(this._byteLength, byteLength));\n    this._byteLength += byteLength;\n    return this;\n}\n\n/** @ignore */\nfunction assembleUnion<T extends Union>(this: VectorAssembler, vector: V<T>) {\n    const { type, length, typeIds, valueOffsets } = vector;\n    // All Union Vectors have a typeIds buffer\n    addBuffer.call(this, typeIds);\n    // If this is a Sparse Union, treat it like all other Nested types\n    if (type.mode === UnionMode.Sparse) {\n        return assembleNestedVector.call(this, vector);\n    } else if (type.mode === UnionMode.Dense) {\n        // If this is a Dense Union, add the valueOffsets buffer and potentially slice the children\n        if (vector.offset <= 0) {\n            // If the Vector hasn't been sliced, write the existing valueOffsets\n            addBuffer.call(this, valueOffsets);\n            // We can treat this like all other Nested types\n            return assembleNestedVector.call(this, vector);\n        } else {\n            // A sliced Dense Union is an unpleasant case. Because the offsets are different for\n            // each child vector, we need to \"rebase\" the valueOffsets for each child\n            // Union typeIds are not necessary 0-indexed\n            const maxChildTypeId = typeIds.reduce((x, y) => Math.max(x, y), typeIds[0]);\n            const childLengths = new Int32Array(maxChildTypeId + 1);\n            // Set all to -1 to indicate that we haven't observed a first occurrence of a particular child yet\n            const childOffsets = new Int32Array(maxChildTypeId + 1).fill(-1);\n            const shiftedOffsets = new Int32Array(length);\n            // If we have a non-zero offset, then the value offsets do not start at\n            // zero. We must a) create a new offsets array with shifted offsets and\n            // b) slice the values array accordingly\n            const unshiftedOffsets = rebaseValueOffsets(-valueOffsets[0], length, valueOffsets);\n            for (let typeId, shift, index = -1; ++index < length;) {\n                if ((shift = childOffsets[typeId = typeIds[index]]) === -1) {\n                    shift = childOffsets[typeId] = unshiftedOffsets[typeId];\n                }\n                shiftedOffsets[index] = unshiftedOffsets[index] - shift;\n                ++childLengths[typeId];\n            }\n            addBuffer.call(this, shiftedOffsets);\n            // Slice and visit children accordingly\n            for (let child: Vector | null, childIndex = -1, numChildren = type.children.length; ++childIndex < numChildren;) {\n                if (child = vector.getChildAt(childIndex)) {\n                    const typeId = type.typeIds[childIndex];\n                    const childLength = Math.min(length, childLengths[typeId]);\n                    this.visit(child.slice(childOffsets[typeId], childLength));\n                }\n            }\n        }\n    }\n    return this;\n}\n\n/** @ignore */\nfunction assembleBoolVector<T extends Bool>(this: VectorAssembler, vector: V<T>) {\n    // Bool vector is a special case of FlatVector, as its data buffer needs to stay packed\n    let values: Uint8Array;\n    if (vector.nullCount >= vector.length) {\n        // If all values are null, just insert a placeholder empty data buffer (fastest path)\n        return addBuffer.call(this, new Uint8Array(0));\n    } else if ((values = vector.values) instanceof Uint8Array) {\n        // If values is already a Uint8Array, slice the bitmap (fast path)\n        return addBuffer.call(this, truncateBitmap(vector.offset, vector.length, values));\n    }\n    // Otherwise if the underlying data *isn't* a Uint8Array, enumerate the\n    // values as bools and re-pack them into a Uint8Array. This code isn't\n    // reachable unless you're trying to manipulate the Data internals,\n    // we we're only doing this for safety.\n    /* istanbul ignore next */\n    return addBuffer.call(this, packBools(vector));\n}\n\n/** @ignore */\nfunction assembleFlatVector<T extends Int | Float | FixedSizeBinary | Date_ | Timestamp | Time | Decimal | Interval>(this: VectorAssembler, vector: V<T>) {\n    return addBuffer.call(this, vector.values.subarray(0, vector.length * vector.stride));\n}\n\n/** @ignore */\nfunction assembleFlatListVector<T extends Utf8 | Binary>(this: VectorAssembler, vector: V<T>) {\n    const { length, values, valueOffsets } = vector;\n    const firstOffset = valueOffsets[0];\n    const lastOffset = valueOffsets[length];\n    const byteLength = Math.min(lastOffset - firstOffset, values.byteLength - firstOffset);\n    // Push in the order FlatList types read their buffers\n    addBuffer.call(this, rebaseValueOffsets(-valueOffsets[0], length, valueOffsets)); // valueOffsets buffer first\n    addBuffer.call(this, values.subarray(firstOffset, firstOffset + byteLength)); // sliced values buffer second\n    return this;\n}\n\n/** @ignore */\nfunction assembleListVector<T extends Map_ | List | FixedSizeList>(this: VectorAssembler, vector: V<T>) {\n    const { length, valueOffsets } = vector;\n    // If we have valueOffsets (MapVector, ListVector), push that buffer first\n    if (valueOffsets) {\n        addBuffer.call(this, rebaseValueOffsets(valueOffsets[0], length, valueOffsets));\n    }\n    // Then insert the List's values child\n    return this.visit(vector.getChildAt(0)!);\n}\n\n/** @ignore */\nfunction assembleNestedVector<T extends Struct | Union>(this: VectorAssembler, vector: V<T>) {\n    return this.visitMany(vector.type.children.map((_, i) => vector.getChildAt(i)!).filter(Boolean))[0];\n}\n\nVectorAssembler.prototype.visitBool            =     assembleBoolVector;\nVectorAssembler.prototype.visitInt             =     assembleFlatVector;\nVectorAssembler.prototype.visitFloat           =     assembleFlatVector;\nVectorAssembler.prototype.visitUtf8            = assembleFlatListVector;\nVectorAssembler.prototype.visitBinary          = assembleFlatListVector;\nVectorAssembler.prototype.visitFixedSizeBinary =     assembleFlatVector;\nVectorAssembler.prototype.visitDate            =     assembleFlatVector;\nVectorAssembler.prototype.visitTimestamp       =     assembleFlatVector;\nVectorAssembler.prototype.visitTime            =     assembleFlatVector;\nVectorAssembler.prototype.visitDecimal         =     assembleFlatVector;\nVectorAssembler.prototype.visitList            =     assembleListVector;\nVectorAssembler.prototype.visitStruct          =   assembleNestedVector;\nVectorAssembler.prototype.visitUnion           =          assembleUnion;\nVectorAssembler.prototype.visitInterval        =     assembleFlatVector;\nVectorAssembler.prototype.visitFixedSizeList   =     assembleListVector;\nVectorAssembler.prototype.visitMap             =     assembleListVector;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { MAGIC } from './message';\nimport { Vector } from '../vector';\nimport { Column } from '../column';\nimport { DataType } from '../type';\nimport { Schema, Field } from '../schema';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { FileBlock, Footer } from './metadata/file';\nimport { MessageHeader, MetadataVersion } from '../enum';\nimport { WritableSink, AsyncByteQueue } from '../io/stream';\nimport { VectorAssembler } from '../visitor/vectorassembler';\nimport { JSONTypeAssembler } from '../visitor/jsontypeassembler';\nimport { JSONVectorAssembler } from '../visitor/jsonvectorassembler';\nimport { ArrayBufferViewInput, toUint8Array } from '../util/buffer';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport { Writable, ReadableInterop, ReadableDOMStreamOptions } from '../io/interfaces';\nimport { isPromise, isAsyncIterable, isWritableDOMStream, isWritableNodeStream, isIterable, isObject } from '../util/compat';\n\nexport interface RecordBatchStreamWriterOptions {\n    /**\n     *\n     */\n    autoDestroy?: boolean;\n    /**\n     * A flag indicating whether the RecordBatchWriter should construct pre-0.15.0\n     * encapsulated IPC Messages, which reserves  4 bytes for the Message metadata\n     * length instead of 8.\n     * @see https://issues.apache.org/jira/browse/ARROW-6313\n     */\n    writeLegacyIpcFormat?: boolean;\n}\n\nexport class RecordBatchWriter<T extends { [key: string]: DataType } = any> extends ReadableInterop<Uint8Array> implements Writable<RecordBatch<T>> {\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n        // @ts-ignore\n        readableStrategy?: { highWaterMark?: number, size?: any }\n    ): { writable: WritableStream<Table<T> | RecordBatch<T>>, readable: ReadableStream<Uint8Array> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    constructor(options?: RecordBatchStreamWriterOptions) {\n        super();\n        isObject(options) || (options = { autoDestroy: true, writeLegacyIpcFormat: false });\n        this._autoDestroy = (typeof options.autoDestroy === 'boolean') ? options.autoDestroy : true;\n        this._writeLegacyIpcFormat = (typeof options.writeLegacyIpcFormat === 'boolean') ? options.writeLegacyIpcFormat : false;\n    }\n\n    protected _position = 0;\n    protected _started = false;\n    protected _autoDestroy: boolean;\n    protected _writeLegacyIpcFormat: boolean;\n    // @ts-ignore\n    protected _sink = new AsyncByteQueue();\n    protected _schema: Schema | null = null;\n    protected _dictionaryBlocks: FileBlock[] = [];\n    protected _recordBatchBlocks: FileBlock[] = [];\n    protected _dictionaryDeltaOffsets = new Map<number, number>();\n\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync: any = false) {\n        return this._sink.toString(sync) as Promise<string> | string;\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync: any = false) {\n        return this._sink.toUint8Array(sync) as Promise<Uint8Array> | Uint8Array;\n    }\n\n    public writeAll(input: Table<T> | Iterable<RecordBatch<T>>): this;\n    public writeAll(input: AsyncIterable<RecordBatch<T>>): Promise<this>;\n    public writeAll(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<this>;\n    public writeAll(input: PromiseLike<any> | Table<T> | Iterable<RecordBatch<T>> | AsyncIterable<RecordBatch<T>>) {\n        if (isPromise<any>(input)) {\n            return input.then((x) => this.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(this, input);\n        }\n        return writeAll(this, <any> input);\n    }\n\n    public get closed() { return this._sink.closed; }\n    public [Symbol.asyncIterator]() { return this._sink[Symbol.asyncIterator](); }\n    public toDOMStream(options?: ReadableDOMStreamOptions) { return this._sink.toDOMStream(options); }\n    public toNodeStream(options?: import('stream').ReadableOptions) { return this._sink.toNodeStream(options); }\n\n    public close() {\n        return this.reset()._sink.close();\n    }\n    public abort(reason?: any) {\n        return this.reset()._sink.abort(reason);\n    }\n    public finish() {\n        this._autoDestroy ? this.close() : this.reset(this._sink, this._schema);\n        return this;\n    }\n    public reset(sink: WritableSink<ArrayBufferViewInput> = this._sink, schema: Schema<T> | null = null) {\n\n        if ((sink === this._sink) || (sink instanceof AsyncByteQueue)) {\n            this._sink = sink as AsyncByteQueue;\n        } else {\n            this._sink = new AsyncByteQueue();\n            if (sink && isWritableDOMStream(sink)) {\n                this.toDOMStream({ type: 'bytes' }).pipeTo(sink);\n            } else if (sink && isWritableNodeStream(sink)) {\n                this.toNodeStream({ objectMode: false }).pipe(sink);\n            }\n        }\n\n        if (this._started && this._schema) {\n            this._writeFooter(this._schema);\n        }\n\n        this._started = false;\n        this._dictionaryBlocks = [];\n        this._recordBatchBlocks = [];\n        this._dictionaryDeltaOffsets = new Map();\n\n        if (!schema || !(schema.compareTo(this._schema))) {\n            if (schema === null) {\n                this._position = 0;\n                this._schema = null;\n            } else {\n                this._started = true;\n                this._schema = schema;\n                this._writeSchema(schema);\n            }\n        }\n\n        return this;\n    }\n\n    public write(payload?: Table<T> | RecordBatch<T> | Iterable<RecordBatch<T>> | null) {\n\n        let schema: Schema<T> | null = null;\n\n        if (!this._sink) {\n            throw new Error(`RecordBatchWriter is closed`);\n        } else if (payload === null || payload === undefined) {\n            return this.finish() && undefined;\n        } else if (payload instanceof Table && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        } else if (payload instanceof RecordBatch && !(schema = payload.schema)) {\n            return this.finish() && undefined;\n        }\n\n        if (schema && !schema.compareTo(this._schema)) {\n            if (this._started && this._autoDestroy) {\n                return this.close();\n            }\n            this.reset(this._sink, schema);\n        }\n\n        if (payload instanceof RecordBatch) {\n            if (!(payload instanceof _InternalEmptyPlaceholderRecordBatch)) {\n                this._writeRecordBatch(payload);\n            }\n        } else if (payload instanceof Table) {\n            this.writeAll(payload.chunks);\n        } else if (isIterable(payload)) {\n            this.writeAll(payload);\n        }\n    }\n\n    protected _writeMessage<T extends MessageHeader>(message: Message<T>, alignment = 8) {\n\n        const a = alignment - 1;\n        const buffer = Message.encode(message);\n        const flatbufferSize = buffer.byteLength;\n        const prefixSize = !this._writeLegacyIpcFormat ? 8 : 4;\n        const alignedSize = (flatbufferSize + prefixSize + a) & ~a;\n        const nPaddingBytes = alignedSize - flatbufferSize - prefixSize;\n\n        if (message.headerType === MessageHeader.RecordBatch) {\n            this._recordBatchBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        } else if (message.headerType === MessageHeader.DictionaryBatch) {\n            this._dictionaryBlocks.push(new FileBlock(alignedSize, message.bodyLength, this._position));\n        }\n\n        // If not in legacy pre-0.15.0 mode, write the stream continuation indicator\n        if (!this._writeLegacyIpcFormat) {\n            this._write(Int32Array.of(-1));\n        }\n        // Write the flatbuffer size prefix including padding\n        this._write(Int32Array.of(alignedSize - prefixSize));\n        // Write the flatbuffer\n        if (flatbufferSize > 0) { this._write(buffer); }\n        // Write any padding\n        return this._writePadding(nPaddingBytes);\n    }\n\n    protected _write(chunk: ArrayBufferViewInput) {\n        if (this._started) {\n            const buffer = toUint8Array(chunk);\n            if (buffer && buffer.byteLength > 0) {\n                this._sink.write(buffer);\n                this._position += buffer.byteLength;\n            }\n        }\n        return this;\n    }\n\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMessage(Message.from(schema));\n    }\n\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) {\n        // eos bytes\n        return this._writeLegacyIpcFormat\n            ? this._write(Int32Array.of(0))\n            : this._write(Int32Array.of(-1, 0));\n    }\n\n    protected _writeMagic() {\n        return this._write(MAGIC);\n    }\n\n    protected _writePadding(nBytes: number) {\n        return nBytes > 0 ? this._write(new Uint8Array(nBytes)) : this;\n    }\n\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(batch);\n        const recordBatch = new metadata.RecordBatch(batch.length, nodes, bufferRegions);\n        const message = Message.from(recordBatch, byteLength);\n        return this\n            ._writeDictionaries(batch)\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        const { byteLength, nodes, bufferRegions, buffers } = VectorAssembler.assemble(dictionary);\n        const recordBatch = new metadata.RecordBatch(dictionary.length, nodes, bufferRegions);\n        const dictionaryBatch = new metadata.DictionaryBatch(recordBatch, id, isDelta);\n        const message = Message.from(dictionaryBatch, byteLength);\n        return this\n            ._writeMessage(message)\n            ._writeBodyBuffers(buffers);\n    }\n\n    protected _writeBodyBuffers(buffers: ArrayBufferView[]) {\n        let buffer: ArrayBufferView;\n        let size: number, padding: number;\n        for (let i = -1, n = buffers.length; ++i < n;) {\n            if ((buffer = buffers[i]) && (size = buffer.byteLength) > 0) {\n                this._write(buffer);\n                if ((padding = ((size + 7) & ~7) - size) > 0) {\n                    this._writePadding(padding);\n                }\n            }\n        }\n        return this;\n    }\n\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        for (let [id, dictionary] of batch.dictionaries) {\n            let offset = this._dictionaryDeltaOffsets.get(id) || 0;\n            if (offset === 0 || (dictionary = dictionary.slice(offset)).length > 0) {\n                const chunks = 'chunks' in dictionary ? (dictionary as any).chunks : [dictionary];\n                for (const chunk of chunks) {\n                    this._writeDictionaryBatch(chunk, id, offset > 0);\n                    offset += chunk.length;\n                }\n            }\n        }\n        return this;\n    }\n}\n\n/** @ignore */\nexport class RecordBatchStreamWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): RecordBatchStreamWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>, options?: RecordBatchStreamWriterOptions): Promise<RecordBatchStreamWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any, options?: RecordBatchStreamWriterOptions) {\n        const writer = new RecordBatchStreamWriter<T>(options);\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n}\n\n/** @ignore */\nexport class RecordBatchFileWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchFileWriter<T>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchFileWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(input: any) {\n        const writer = new RecordBatchFileWriter<T>();\n        if (isPromise<any>(input)) {\n            return input.then((x) => writer.writeAll(x));\n        } else if (isAsyncIterable<RecordBatch<T>>(input)) {\n            return writeAllAsync(writer, input);\n        }\n        return writeAll(writer, input);\n    }\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n    }\n\n    // @ts-ignore\n    protected _writeSchema(schema: Schema<T>) {\n        return this._writeMagic()._writePadding(2);\n    }\n\n    protected _writeFooter(schema: Schema<T>) {\n        const buffer = Footer.encode(new Footer(\n            schema, MetadataVersion.V4,\n            this._recordBatchBlocks, this._dictionaryBlocks\n        ));\n        return super\n            ._writeFooter(schema) // EOS bytes for sequential readers\n            ._write(buffer) // Write the flatbuffer\n            ._write(Int32Array.of(buffer.byteLength)) // then the footer size suffix\n            ._writeMagic(); // then the magic suffix\n    }\n}\n\n/** @ignore */\nexport class RecordBatchJSONWriter<T extends { [key: string]: DataType } = any> extends RecordBatchWriter<T> {\n\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: Table<T> | Iterable<RecordBatch<T>>): RecordBatchJSONWriter<T>;\n    // @ts-ignore\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: AsyncIterable<RecordBatch<T>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<AsyncIterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: PromiseLike<Table<T> | Iterable<RecordBatch<T>>>): Promise<RecordBatchJSONWriter<T>>;\n    /** @nocollapse */\n    public static writeAll<T extends { [key: string]: DataType } = any>(this: typeof RecordBatchWriter, input: any) {\n        return new RecordBatchJSONWriter<T>().writeAll(input as any);\n    }\n\n    private _recordBatches: RecordBatch[];\n    private _dictionaries: RecordBatch[];\n\n    constructor() {\n        super();\n        this._autoDestroy = true;\n        this._recordBatches = [];\n        this._dictionaries = [];\n    }\n\n    protected _writeMessage() { return this; }\n    // @ts-ignore\n    protected _writeFooter(schema: Schema<T>) { return this; }\n    protected _writeSchema(schema: Schema<T>) {\n        return this._write(`{\\n  \"schema\": ${\n            JSON.stringify({ fields: schema.fields.map(fieldToJSON) }, null, 2)\n        }`);\n    }\n    protected _writeDictionaries(batch: RecordBatch<T>) {\n        if (batch.dictionaries.size > 0) {\n            this._dictionaries.push(batch);\n        }\n        return this;\n    }\n    protected _writeDictionaryBatch(dictionary: Vector, id: number, isDelta = false) {\n        this._dictionaryDeltaOffsets.set(id, dictionary.length + (this._dictionaryDeltaOffsets.get(id) || 0));\n        this._write(this._dictionaryBlocks.length === 0 ? `    ` : `,\\n    `);\n        this._write(`${dictionaryBatchToJSON(dictionary, id, isDelta)}`);\n        this._dictionaryBlocks.push(new FileBlock(0, 0, 0));\n        return this;\n    }\n    protected _writeRecordBatch(batch: RecordBatch<T>) {\n        this._writeDictionaries(batch);\n        this._recordBatches.push(batch);\n        return this;\n    }\n    public close() {\n\n        if (this._dictionaries.length > 0) {\n            this._write(`,\\n  \"dictionaries\": [\\n`);\n            for (const batch of this._dictionaries) {\n                super._writeDictionaries(batch);\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._recordBatches.length > 0) {\n            for (let i = -1, n = this._recordBatches.length; ++i < n;) {\n                this._write(i === 0 ? `,\\n  \"batches\": [\\n    ` : `,\\n    `);\n                this._write(`${recordBatchToJSON(this._recordBatches[i])}`);\n                this._recordBatchBlocks.push(new FileBlock(0, 0, 0));\n            }\n            this._write(`\\n  ]`);\n        }\n\n        if (this._schema) {\n            this._write(`\\n}`);\n        }\n\n        this._dictionaries = [];\n        this._recordBatches = [];\n\n        return super.close();\n    }\n}\n\n/** @ignore */\nfunction writeAll<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, input: Table<T> | Iterable<RecordBatch<T>>) {\n    let chunks = input as Iterable<RecordBatch<T>>;\n    if (input instanceof Table) {\n        chunks = input.chunks;\n        writer.reset(undefined, input.schema);\n    }\n    for (const batch of chunks) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nasync function writeAllAsync<T extends { [key: string]: DataType } = any>(writer: RecordBatchWriter<T>, batches: AsyncIterable<RecordBatch<T>>) {\n    for await (const batch of batches) {\n        writer.write(batch);\n    }\n    return writer.finish();\n}\n\n/** @ignore */\nfunction fieldToJSON({ name, type, nullable }: Field): object {\n    const assembler = new JSONTypeAssembler();\n    return {\n        'name': name, 'nullable': nullable,\n        'type': assembler.visit(type),\n        'children': (type.children || []).map(fieldToJSON),\n        'dictionary': !DataType.isDictionary(type) ? undefined : {\n            'id': type.id,\n            'isOrdered': type.isOrdered,\n            'indexType': assembler.visit(type.indices)\n        }\n    };\n}\n\n/** @ignore */\nfunction dictionaryBatchToJSON(dictionary: Vector, id: number, isDelta = false) {\n    const field = new Field(`${id}`, dictionary.type, dictionary.nullCount > 0);\n    const columns = JSONVectorAssembler.assemble(new Column(field, [dictionary]));\n    return JSON.stringify({\n        'id': id,\n        'isDelta': isDelta,\n        'data': {\n            'count': dictionary.length,\n            'columns': columns\n        }\n    }, null, 2);\n}\n\n/** @ignore */\nfunction recordBatchToJSON(records: RecordBatch) {\n    return JSON.stringify({\n        'count': records.length,\n        'columns': JSONVectorAssembler.assemble(records)\n    }, null, 2);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Column } from '../column';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Data, Buffers } from '../data';\nimport { Schema, Field } from '../schema';\nimport { Chunked } from '../vector/chunked';\nimport { RecordBatch } from '../recordbatch';\n\nconst noopBuf = new Uint8Array(0);\nconst nullBufs = (bitmapLength: number) => <unknown> [\n    noopBuf, noopBuf, new Uint8Array(bitmapLength), noopBuf\n] as Buffers<any>;\n\n/** @ignore */\nexport function ensureSameLengthData<T extends { [key: string]: DataType } = any>(\n    schema: Schema<T>,\n    chunks: Data<T[keyof T]>[],\n    batchLength = chunks.reduce((l, c) => Math.max(l, c.length), 0)\n) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let i = -1, n = chunks.length;\n    const fields = [...schema.fields];\n    const batchData = [] as Data<T[keyof T]>[];\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = chunks[i]) && data.length === batchLength) {\n            batchData[i] = data;\n        } else {\n            (field = fields[i]).nullable || (fields[i] = fields[i].clone({ nullable: true }) as Field<T[keyof T]>);\n            batchData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return [new Schema<T>(fields), batchLength, batchData] as [Schema<T>, number, Data<T[keyof T]>[]];\n}\n\n/** @ignore */\nexport function distributeColumnsIntoRecordBatches<T extends { [key: string]: DataType } = any>(columns: Column<T[keyof T]>[]): [Schema<T>, RecordBatch<T>[]] {\n    return distributeVectorsIntoRecordBatches<T>(new Schema<T>(columns.map(({ field }) => field)), columns);\n}\n\n/** @ignore */\nexport function distributeVectorsIntoRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, vecs: (Vector<T[keyof T]> | Chunked<T[keyof T]>)[]): [Schema<T>, RecordBatch<T>[]] {\n    return uniformlyDistributeChunksAcrossRecordBatches<T>(schema, vecs.map((v) => v instanceof Chunked ? v.chunks.map((c) => c.data) : [v.data]));\n}\n\n/** @ignore */\nfunction uniformlyDistributeChunksAcrossRecordBatches<T extends { [key: string]: DataType } = any>(schema: Schema<T>, columns: Data<T[keyof T]>[][]): [Schema<T>, RecordBatch<T>[]] {\n\n    const fields = [...schema.fields];\n    const batchArgs = [] as [number, Data<T[keyof T]>[]][];\n    const memo = { numBatches: columns.reduce((n, c) => Math.max(n, c.length), 0) };\n\n    let numBatches = 0, batchLength = 0;\n    let i: number = -1, numColumns = columns.length;\n    let child: Data<T[keyof T]>, childData: Data<T[keyof T]>[] = [];\n\n    while (memo.numBatches-- > 0) {\n\n        for (batchLength = Number.POSITIVE_INFINITY, i = -1; ++i < numColumns;) {\n            childData[i] = child = columns[i].shift()!;\n            batchLength = Math.min(batchLength, child ? child.length : batchLength);\n        }\n\n        if (isFinite(batchLength)) {\n            childData = distributeChildData(fields, batchLength, childData, columns, memo);\n            if (batchLength > 0) {\n                batchArgs[numBatches++] = [batchLength, childData.slice()];\n            }\n        }\n    }\n    return [\n        schema = new Schema<T>(fields, schema.metadata),\n        batchArgs.map((xs) => new RecordBatch(schema, ...xs))\n    ];\n}\n\n/** @ignore */\nfunction distributeChildData<T extends { [key: string]: DataType } = any>(fields: Field<T[keyof T]>[], batchLength: number, childData: Data<T[keyof T]>[], columns: Data<T[keyof T]>[][], memo: { numBatches: number }) {\n    let data: Data<T[keyof T]>;\n    let field: Field<T[keyof T]>;\n    let length = 0, i = -1, n = columns.length;\n    const bitmapLength = ((batchLength + 63) & ~63) >> 3;\n    while (++i < n) {\n        if ((data = childData[i]) && ((length = data.length) >= batchLength)) {\n            if (length === batchLength) {\n                childData[i] = data;\n            } else {\n                childData[i] = data.slice(0, batchLength);\n                data = data.slice(batchLength, length - batchLength);\n                memo.numBatches = Math.max(memo.numBatches, columns[i].unshift(data));\n            }\n        } else {\n            (field = fields[i]).nullable || (fields[i] = field.clone({ nullable: true }) as Field<T[keyof T]>);\n            childData[i] = data ? data._changeLengthAndBackfillNullBitmap(batchLength)\n                : Data.new(field.type, 0, batchLength, batchLength, nullBufs(bitmapLength)) as Data<T[keyof T]>;\n        }\n    }\n    return childData;\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { clampRange } from '../util/vector';\nimport { VectorType as V } from '../interfaces';\nimport { AbstractVector, Vector, Clonable, Sliceable, Applicative } from '../vector';\n\n/** @ignore */\nexport interface BaseVector<T extends DataType = any> extends Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n    slice(begin?: number, end?: number): V<T>;\n    concat(...others: Vector<T>[]): Chunked<T>;\n    clone<R extends DataType = T>(data: Data<R>, children?: Vector<R>[]): V<R>;\n}\n\n/** @ignore */\nexport abstract class BaseVector<T extends DataType = any> extends AbstractVector<T>\n    implements Clonable<V<T>>, Sliceable<V<T>>, Applicative<T, Chunked<T>> {\n\n    protected _children?: Vector[];\n\n    constructor(data: Data<T>, children?: Vector[]) {\n        super();\n        this._children = children;\n        this.numChildren = data.childData.length;\n        this._bindDataAccessors(this.data = data);\n    }\n\n    public readonly data: Data<T>;\n    public readonly numChildren: number;\n\n    public get type() { return this.data.type; }\n    public get typeId() { return this.data.typeId; }\n    public get length() { return this.data.length; }\n    public get offset() { return this.data.offset; }\n    public get stride() { return this.data.stride; }\n    public get nullCount() { return this.data.nullCount; }\n    public get byteLength() { return this.data.byteLength; }\n    public get VectorName() { return `${Type[this.typeId]}Vector`; }\n\n    public get ArrayType(): T['ArrayType'] { return this.type.ArrayType; }\n\n    public get values() { return this.data.values; }\n    public get typeIds() { return this.data.typeIds; }\n    public get nullBitmap() { return this.data.nullBitmap; }\n    public get valueOffsets() { return this.data.valueOffsets; }\n\n    public get [Symbol.toStringTag]() { return `${this.VectorName}<${this.type[Symbol.toStringTag]}>`; }\n\n    public clone<R extends DataType = T>(data: Data<R>, children = this._children) {\n        return Vector.new<R>(data, children) as any;\n    }\n\n    public concat(...others: Vector<T>[]) {\n        return Chunked.concat<T>(this, ...others);\n    }\n\n    public slice(begin?: number, end?: number) {\n        // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n        // clamp between 0 and length, and wrap around on negative indices, e.g.\n        // slice(-1, 5) or slice(5, -1)\n        return clampRange(this, begin, end, this._sliceInternal);\n    }\n\n    public isValid(index: number): boolean {\n        if (this.nullCount > 0) {\n            const idx = this.offset + index;\n            const val = this.nullBitmap[idx >> 3];\n            const mask = (val & (1 << (idx % 8)));\n            return mask !== 0;\n        }\n        return true;\n    }\n\n    public getChildAt<R extends DataType = any>(index: number): Vector<R> | null {\n        return index < 0 || index >= this.numChildren ? null : (\n            (this._children || (this._children = []))[index] ||\n            (this._children[index] = Vector.new<R>(this.data.childData[index] as Data<R>))\n        ) as Vector<R>;\n    }\n\n    public toJSON(): any { return [...this]; }\n\n    protected _sliceInternal(self: this, begin: number, end: number) {\n        return self.clone(self.data.slice(begin, end - begin), null!);\n    }\n\n    // @ts-ignore\n    protected _bindDataAccessors(data: Data<T>) {\n        // Implementation in src/vectors/index.ts due to circular dependency/packaging shenanigans\n    }\n}\n\n(BaseVector.prototype as any)[Symbol.isConcatSpreadable] = true;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\n\n/** @ignore */\nexport class BinaryVector extends BaseVector<Binary> {\n    public asUtf8() {\n        return Vector.new(this.data.clone(new Utf8()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Bool } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class BoolVector extends BaseVector<Bool> {\n    public static from<TNull = any>(input: Iterable<boolean | TNull>): BoolVector;\n    public static from<TNull = any>(input: AsyncIterable<boolean | TNull>): Promise<BoolVector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Bool, TNull>): Chunked<Bool>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Bool, TNull>): Promise<Chunked<Bool>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<boolean | TNull> | AsyncIterable<boolean | TNull> | VectorBuilderOptions<Bool, TNull> | VectorBuilderOptionsAsync<Bool, TNull>) {\n        return vectorFromValuesWithType(() => new Bool(), input);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DateUnit } from '../enum';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Date_, DateDay, DateMillisecond  } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends Date_> = [Iterable<Date>, T['unit']];\n\n/** @ignore */\nexport class DateVector<T extends Date_ = Date_> extends BaseVector<T> {\n    public static from<T extends DateUnit.DAY>(...args: FromArgs<DateDay>): V<DateDay>;\n    public static from<T extends DateUnit.MILLISECOND>(...args: FromArgs<DateMillisecond>): V<DateMillisecond>;\n    public static from<T extends Date_, TNull = any>(input: Iterable<Date | TNull>): V<T>;\n    public static from<T extends Date_, TNull = any>(input: AsyncIterable<Date | TNull>): Promise<V<T>>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Date_, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Date_, TNull = any>(...args: FromArgs<T> | [Iterable<Date | TNull> | AsyncIterable<Date | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>]) {\n        if (args.length === 2) {\n            return vectorFromValuesWithType(() => args[1] === DateUnit.DAY ? new DateDay() : new DateMillisecond() as T, args[0]);\n        }\n        return vectorFromValuesWithType(() => new DateMillisecond() as T, args[0]);\n    }\n}\n\n/** @ignore */\nexport class DateDayVector extends DateVector<DateDay> {}\n\n/** @ignore */\nexport class DateMillisecondVector extends DateVector<DateMillisecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Decimal } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class DecimalVector extends BaseVector<Decimal> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { VectorType as V } from '../interfaces';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { DataType, Dictionary, TKeys } from '../type';\n\n/** @ignore */\ntype FromArgs<T extends DataType = any, TKey extends TKeys = TKeys> = [Vector<T>, TKey, ArrayLike<number> | TKey['TArray']];\n\n/** @ignore */\nexport class DictionaryVector<T extends DataType = any, TKey extends TKeys = TKeys> extends BaseVector<Dictionary<T, TKey>> {\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: FromArgs<T, TKey>): V<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptions<Dictionary<T, TKey>>): Vector<Dictionary<T, TKey>>;\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(input: VectorBuilderOptionsAsync<Dictionary<T, TKey>>): Promise<Vector<Dictionary<T, TKey>>>;\n    /** @nocollapse */\n    public static from<T extends DataType = any, TKey extends TKeys = TKeys>(...args: any[]) {\n        if (args.length === 3) {\n            const [values, indices, keys] = args as FromArgs<T, TKey>;\n            const type = new Dictionary(values.type, indices, null, null);\n            return Vector.new(Data.Dictionary(type, 0, keys.length, 0, null, keys, values));\n        }\n        return vectorFromValuesWithType(() => args[0].type, args[0]);\n    }\n\n    constructor(data: Data<Dictionary<T, TKey>>) {\n        super(data);\n        this.indices = Vector.new(data.clone(this.type.indices));\n    }\n\n    public readonly indices: V<TKey>;\n\n    public get dictionary() { return <Vector<T>> this.data.dictionary; }\n    public reverseLookup(value: T) { return this.dictionary.indexOf(value); }\n    public getKey(idx: number): TKey['TValue'] | null { return this.indices.get(idx); }\n    public getValue(key: number): T['TValue'] | null { return this.dictionary.get(key); }\n    public setKey(idx: number, key: TKey['TValue'] | null) { return this.indices.set(idx, key); }\n    public setValue(key: number, value: T['TValue'] | null) { return this.dictionary.set(key, value); }\n}\n\n(DictionaryVector.prototype as any).indices = null;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { FixedSizeBinary } from '../type';\n\n/** @ignore */\nexport class FixedSizeBinaryVector extends BaseVector<FixedSizeBinary> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, FixedSizeList } from '../type';\n\n/** @ignore */\nexport class FixedSizeListVector<T extends DataType = any> extends BaseVector<FixedSizeList<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { Float, Float16, Float32, Float64, FloatArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor } from '../interfaces';\n\n/** @ignore */\ntype FloatVectorConstructors =\n    typeof FloatVector   |\n    typeof Float16Vector |\n    typeof Float32Vector |\n    typeof Float64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Float, TNull = any> =\n    FloatArray                          |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FloatArrayCtor = TypedArrayConstructor<FloatArray>;\n\n/** @ignore */\nexport class FloatVector<T extends Float = Float> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof FloatVector, input: Uint16Array): Float16Vector;\n    public static from(this: typeof FloatVector, input: Float32Array): Float32Vector;\n    public static from(this: typeof FloatVector, input: Float64Array): Float64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Float16Vector,  input: FromInput<Float16, TNull>): Float16Vector;\n    public static from<TNull = any>(this: typeof Float32Vector,  input: FromInput<Float32, TNull>): Float32Vector;\n    public static from<TNull = any>(this: typeof Float64Vector,  input: FromInput<Float64, TNull>): Float64Vector;\n\n    // Not zero-copy\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Float, TNull = any>(this: typeof FloatVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Float, TNull = any>(this: FloatVectorConstructors, input: FromInput<T, TNull>) {\n\n        let ArrowType = vectorTypeToDataType(this);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as FloatArrayCtor) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // FloatVector.from with a TypedArray, e.g. `FloatVector.from(new Float32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is Float16 but the input type isn't a Uint16Array,\n                // let the Float16Builder handle casting the input values to Uint16s.\n                if (!convertTo16Bit(ArrowType, input.constructor)) {\n                    return Vector.new(Data.Float(type, 0, length, 0, null, input as FloatArray));\n                }\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer float type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized FloatVector input');\n    }\n}\n\n/** @ignore */\nexport class Float16Vector extends FloatVector<Float16> {\n    // Since JS doesn't have half floats, `toArray()` returns a zero-copy slice\n    // of the underlying Uint16Array data. This behavior ensures we don't incur\n    // extra compute or copies if you're calling `toArray()` in order to create\n    // a buffer for something like WebGL. Buf if you're using JS and want typed\n    // arrays of 4-to-8-byte precision, these methods will enumerate the values\n    // and clamp to the desired byte lengths.\n    public toFloat32Array() { return new Float32Array(this as Iterable<number>); }\n    public toFloat64Array() { return new Float64Array(this as Iterable<number>); }\n}\n\n/** @ignore */\nexport class Float32Vector extends FloatVector<Float32> {}\n/** @ignore */\nexport class Float64Vector extends FloatVector<Float64> {}\n\nconst convertTo16Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Float16) && (dataCtor !== Uint16Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: FloatArrayCtor) => {\n    switch (ctor) {\n        case Uint16Array:    return Float16;\n        case Float32Array:   return Float32;\n        case Float64Array:   return Float64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: FloatVectorConstructors) => {\n    switch (ctor) {\n        case Float16Vector: return Float16;\n        case Float32Vector: return Float32;\n        case Float64Vector: return Float64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Interval, IntervalDayTime, IntervalYearMonth } from '../type';\n\n/** @ignore */\nexport class IntervalVector<T extends Interval = Interval> extends BaseVector<T> {}\n/** @ignore */\nexport class IntervalDayTimeVector extends IntervalVector<IntervalDayTime> {}\n/** @ignore */\nexport class IntervalYearMonthVector extends IntervalVector<IntervalYearMonth> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\nimport { BigInt64Array, BigUint64Array } from '../util/compat';\nimport { toBigInt64Array, toBigUint64Array } from '../util/buffer';\nimport { Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64, IntArray } from '../type';\nimport { VectorType as V, TypedArrayConstructor, BigIntArrayConstructor, BigIntArray } from '../interfaces';\n\n/** @ignore */\ntype IntVectorConstructors =\n    typeof IntVector    |\n    typeof Int8Vector   |\n    typeof Int16Vector  |\n    typeof Int32Vector  |\n    typeof Uint8Vector  |\n    typeof Uint16Vector |\n    typeof Uint32Vector |\n    typeof Int64Vector  |\n    typeof Uint64Vector ;\n\n/** @ignore */\ntype FromInput<T extends Int, TNull = any> =\n    IntArray | BigIntArray              |\n    Iterable<T['TValue'] | TNull>       |\n    AsyncIterable<T['TValue'] | TNull>  |\n    VectorBuilderOptions<T, TNull>      |\n    VectorBuilderOptionsAsync<T, TNull> ;\n\n/** @ignore */\ntype FromArgs<T extends Int, TNull = any> = [FromInput<T, TNull>, boolean?];\n\n/** @ignore */\ntype IntArrayCtor = TypedArrayConstructor<IntArray> | BigIntArrayConstructor<BigIntArray>;\n\n/** @ignore */\nexport class IntVector<T extends Int = Int> extends BaseVector<T> {\n\n    // Guaranteed zero-copy variants\n    public static from(this: typeof IntVector, input: Int8Array): Int8Vector;\n    public static from(this: typeof IntVector, input: Int16Array): Int16Vector;\n    public static from(this: typeof IntVector, input: Int32Array): Int32Vector;\n    public static from(this: typeof IntVector, input: BigInt64Array): Int64Vector;\n    public static from(this: typeof IntVector, input: Int32Array, is64bit: true): Int64Vector;\n    public static from(this: typeof IntVector, input: Uint8Array): Uint8Vector;\n    public static from(this: typeof IntVector, input: Uint16Array): Uint16Vector;\n    public static from(this: typeof IntVector, input: Uint32Array): Uint32Vector;\n    public static from(this: typeof IntVector, input: BigUint64Array): Uint64Vector;\n    public static from(this: typeof IntVector, input: Uint32Array, is64bit: true): Uint64Vector;\n\n    // Zero-copy if input is a TypedArray of the same type as the\n    // Vector that from is called on, otherwise uses the Builders\n    public static from<TNull = any>(this: typeof Int8Vector,   input: FromInput<Int8, TNull>): Int8Vector;\n    public static from<TNull = any>(this: typeof Int16Vector,  input: FromInput<Int16, TNull>): Int16Vector;\n    public static from<TNull = any>(this: typeof Int32Vector,  input: FromInput<Int32, TNull>): Int32Vector;\n    public static from<TNull = any>(this: typeof Int64Vector,  input: FromInput<Int64, TNull>): Int64Vector;\n    public static from<TNull = any>(this: typeof Uint8Vector,  input: FromInput<Uint8, TNull>): Uint8Vector;\n    public static from<TNull = any>(this: typeof Uint16Vector, input: FromInput<Uint16, TNull>): Uint16Vector;\n    public static from<TNull = any>(this: typeof Uint32Vector, input: FromInput<Uint32, TNull>): Uint32Vector;\n    public static from<TNull = any>(this: typeof Uint64Vector, input: FromInput<Uint64, TNull>): Uint64Vector;\n\n    // Not zero-copy\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: Iterable<T['TValue'] | TNull>): V<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: AsyncIterable<T['TValue'] | TNull>): Promise<V<T>>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptions<T, TNull>): Chunked<T>;\n    public static from<T extends Int, TNull = any>(this: typeof IntVector, input: VectorBuilderOptionsAsync<T, TNull>): Promise<Chunked<T>>;\n    /** @nocollapse */\n    public static from<T extends Int, TNull = any>(this: IntVectorConstructors, ...args: FromArgs<T, TNull>) {\n\n        let [input, is64bit = false] = args;\n        let ArrowType = vectorTypeToDataType(this, is64bit);\n\n        if ((input instanceof ArrayBuffer) || ArrayBuffer.isView(input)) {\n            let InputType = arrayTypeToDataType(input.constructor as IntArrayCtor, is64bit) || ArrowType;\n            // Special case, infer the Arrow DataType from the input if calling the base\n            // IntVector.from with a TypedArray, e.g. `IntVector.from(new Int32Array())`\n            if (ArrowType === null) {\n                ArrowType = InputType;\n            }\n            // If the DataType inferred from the Vector constructor matches the\n            // DataType inferred from the input arguments, return zero-copy view\n            if (ArrowType && ArrowType === InputType) {\n                let type = new ArrowType();\n                let length = input.byteLength / type.ArrayType.BYTES_PER_ELEMENT;\n                // If the ArrowType is 64bit but the input type is 32bit pairs, update the logical length\n                if (convert32To64Bit(ArrowType, input.constructor)) {\n                    length *= 0.5;\n                }\n                return Vector.new(Data.Int(type, 0, length, 0, null, input as IntArray));\n            }\n        }\n\n        if (ArrowType) {\n            // If the DataType inferred from the Vector constructor is different than\n            // the DataType inferred from the input TypedArray, or if input isn't a\n            // TypedArray, use the Builders to construct the result Vector\n            return vectorFromValuesWithType(() => new ArrowType!() as T, input);\n        }\n\n        if ((input instanceof DataView) || (input instanceof ArrayBuffer)) {\n            throw new TypeError(`Cannot infer integer type from instance of ${input.constructor.name}`);\n        }\n\n        throw new TypeError('Unrecognized IntVector input');\n    }\n}\n\n/** @ignore */\nexport class Int8Vector extends IntVector<Int8> {}\n/** @ignore */\nexport class Int16Vector extends IntVector<Int16> {}\n/** @ignore */\nexport class Int32Vector extends IntVector<Int32> {}\n/** @ignore */\nexport class Int64Vector extends IntVector<Int64> {\n    public toBigInt64Array() {\n        return toBigInt64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigInt64Array;\n    public get values64(): BigInt64Array {\n        return this._values64 || (this._values64 = this.toBigInt64Array());\n    }\n}\n\n/** @ignore */\nexport class Uint8Vector extends IntVector<Uint8> {}\n/** @ignore */\nexport class Uint16Vector extends IntVector<Uint16> {}\n/** @ignore */\nexport class Uint32Vector extends IntVector<Uint32> {}\n/** @ignore */\nexport class Uint64Vector extends IntVector<Uint64> {\n    public toBigUint64Array() {\n        return toBigUint64Array(this.values);\n    }\n    // @ts-ignore\n    private _values64: BigUint64Array;\n    public get values64(): BigUint64Array {\n        return this._values64 || (this._values64 = this.toBigUint64Array());\n    }\n}\n\nconst convert32To64Bit = (typeCtor: any, dataCtor: any) => {\n    return (typeCtor === Int64 || typeCtor === Uint64) &&\n           (dataCtor === Int32Array || dataCtor === Uint32Array);\n};\n\n/** @ignore */\nconst arrayTypeToDataType = (ctor: IntArrayCtor, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Array:      return Int8;\n        case Int16Array:     return Int16;\n        case Int32Array:     return is64bit ? Int64 : Int32;\n        case BigInt64Array:  return Int64;\n        case Uint8Array:     return Uint8;\n        case Uint16Array:    return Uint16;\n        case Uint32Array:    return is64bit ? Uint64 : Uint32;\n        case BigUint64Array: return Uint64;\n        default: return null;\n    }\n};\n\n/** @ignore */\nconst vectorTypeToDataType = (ctor: IntVectorConstructors, is64bit: boolean) => {\n    switch (ctor) {\n        case Int8Vector:   return Int8;\n        case Int16Vector:  return Int16;\n        case Int32Vector:  return is64bit ? Int64 : Int32;\n        case Int64Vector:  return Int64;\n        case Uint8Vector:  return Uint8;\n        case Uint16Vector: return Uint16;\n        case Uint32Vector: return is64bit ? Uint64 : Uint32;\n        case Uint64Vector: return Uint64;\n        default: return null;\n    }\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { DataType, List } from '../type';\n\n/** @ignore */\nexport class ListVector<T extends DataType = any> extends BaseVector<List<T>> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MapRow } from './row';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { DataType, Map_, Struct, List } from '../type';\n\n/** @ignore */\nexport class MapVector<K extends DataType = any, V extends DataType = any> extends BaseVector<Map_<K, V>> {\n    public asList() {\n        const child = this.type.children[0] as Field<Struct<{ key: K, value: V }>>;\n        return Vector.new(this.data.clone(new List<Struct<{ key: K, value: V }>>(child)));\n    }\n    public bind(index: number): Map_<K, V>['TValue'] {\n        const child = this.getChildAt<Struct<{ key: K, value: V }>>(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child!.slice(begin, end));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Null } from '../type';\nimport { BaseVector } from './base';\n\n/** @ignore */\nexport class NullVector extends BaseVector<Null> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { StructRow } from './row';\nimport { BaseVector } from './base';\nimport { DataType, Struct } from '../type';\n\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\nexport class StructVector<T extends { [key: string]: DataType } = any> extends BaseVector<Struct<T>> {\n    // @ts-ignore\n    private _row: StructRow<T>;\n    public bind(index: number): Struct<T>['TValue'] {\n        const proto = this._row || (this._row = new StructRow<T>(this));\n        const bound = Object.create(proto);\n        bound[kRowIndex] = index;\n        return bound;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond } from '../type';\n\n/** @ignore */\nexport class TimestampVector<T extends Timestamp = Timestamp> extends BaseVector<T> {}\n/** @ignore */\nexport class TimestampSecondVector extends TimestampVector<TimestampSecond> {}\n/** @ignore */\nexport class TimestampMillisecondVector extends TimestampVector<TimestampMillisecond> {}\n/** @ignore */\nexport class TimestampMicrosecondVector extends TimestampVector<TimestampMicrosecond> {}\n/** @ignore */\nexport class TimestampNanosecondVector extends TimestampVector<TimestampNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond } from '../type';\n\n/** @ignore */\nexport class TimeVector<T extends Time = Time> extends BaseVector<T> {}\n/** @ignore */\nexport class TimeSecondVector extends TimeVector<TimeSecond> {}\n/** @ignore */\nexport class TimeMillisecondVector extends TimeVector<TimeMillisecond> {}\n/** @ignore */\nexport class TimeMicrosecondVector extends TimeVector<TimeMicrosecond> {}\n/** @ignore */\nexport class TimeNanosecondVector extends TimeVector<TimeNanosecond> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { BaseVector } from './base';\nimport { Union, DenseUnion, SparseUnion} from '../type';\n\n/** @ignore */\nexport class UnionVector<T extends Union = Union> extends BaseVector<T> {\n    public get typeIdToChildIndex() { return this.data.type.typeIdToChildIndex; }\n}\n\n/** @ignore */\nexport class DenseUnionVector extends UnionVector<DenseUnion> {\n    public get valueOffsets() { return this.data.valueOffsets!; }\n}\n\n/** @ignore */\nexport class SparseUnionVector extends UnionVector<SparseUnion> {}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { Binary, Utf8 } from '../type';\nimport { VectorBuilderOptions } from './index';\nimport { vectorFromValuesWithType } from './index';\nimport { VectorBuilderOptionsAsync } from './index';\n\n/** @ignore */\nexport class Utf8Vector extends BaseVector<Utf8> {\n    public static from<TNull = any>(input: Iterable<string | TNull>): Utf8Vector;\n    public static from<TNull = any>(input: AsyncIterable<string | TNull>): Promise<Utf8Vector>;\n    public static from<TNull = any>(input: VectorBuilderOptions<Utf8, TNull>): Chunked<Utf8>;\n    public static from<TNull = any>(input: VectorBuilderOptionsAsync<Utf8, TNull>): Promise<Chunked<Utf8>>;\n    /** @nocollapse */\n    public static from<TNull = any>(input: Iterable<string | TNull> | AsyncIterable<string | TNull> | VectorBuilderOptions<Utf8, TNull> | VectorBuilderOptionsAsync<Utf8, TNull>) {\n        return vectorFromValuesWithType(() => new Utf8(), input);\n    }\n    public asBinary() {\n        return Vector.new(this.data.clone(new Binary()));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport function partial0<T>(visit: (node: T) => any) {\n    return function(this: T) { return visit(this); };\n}\n\n/** @ignore */\nexport function partial1<T>(visit: (node: T, a: any) => any) {\n    return function(this: T, a: any) { return visit(this, a); };\n}\n\n/** @ignore */\nexport function partial2<T>(visit: (node: T, a: any, b: any) => any) {\n    return function(this: T, a: any, b: any) { return visit(this, a, b); };\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { BN } from '../util/bn';\nimport { Visitor } from '../visitor';\nimport { decodeUtf8 } from '../util/utf8';\nimport { VectorType } from '../interfaces';\nimport { uint16ToFloat64 } from '../util/math';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface GetVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, index: number): T['TValue'];\n    visitMany<T extends VectorType>  (nodes: T[], indices: number[]): T['TValue'][];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, index: number) => VectorType<T>['TValue'];\n    visitNull                 <T extends Null>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt                  <T extends Int>                  (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt16                <T extends Int16>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt32                <T extends Int32>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitInt64                <T extends Int64>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat                <T extends Float>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitBinary               <T extends Binary>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitDate                 <T extends Date_>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>, index: number): T['TValue'];\n    visitTime                 <T extends Time>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>, index: number): T['TValue'];\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>, index: number): T['TValue'];\n    visitList                 <T extends List>                 (vector: VectorType<T>, index: number): T['TValue'];\n    visitStruct               <T extends Struct>               (vector: VectorType<T>, index: number): T['TValue'];\n    visitUnion                <T extends Union>                (vector: VectorType<T>, index: number): T['TValue'];\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>, index: number): T['TValue'];\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>, index: number): T['TValue'];\n    visitInterval             <T extends Interval>             (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>, index: number): T['TValue'];\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>, index: number): T['TValue'];\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>, index: number): T['TValue'];\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>, index: number): T['TValue'];\n}\n\n/** @ignore */\nexport class GetVisitor extends Visitor {}\n\n/** @ignore */const epochDaysToMs = (data: Int32Array, index: number) => 86400000 * data[index];\n/** @ignore */const epochMillisecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1]) + (data[index] >>> 0);\n/** @ignore */const epochMicrosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000) + ((data[index] >>> 0) / 1000);\n/** @ignore */const epochNanosecondsLongToMs = (data: Int32Array, index: number) => 4294967296 * (data[index + 1] / 1000000) + ((data[index] >>> 0) / 1000000);\n\n/** @ignore */const epochMillisecondsToDate = (epochMs: number) => new Date(epochMs);\n/** @ignore */const epochDaysToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochDaysToMs(data, index));\n/** @ignore */const epochMillisecondsLongToDate = (data: Int32Array, index: number) => epochMillisecondsToDate(epochMillisecondsLongToMs(data, index));\n\n/** @ignore */\nconst getNull = <T extends Null>(_vector: VectorType<T>, _index: number): T['TValue'] => null;\n/** @ignore */\nconst getVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number) => {\n    const { [index]: x, [index + 1]: y } = valueOffsets;\n    return x != null && y != null ? values.subarray(x, y) : null as any;\n};\n\n/** @ignore */\nconst getBool = <T extends Bool>({ offset, values }: VectorType<T>, index: number): T['TValue'] => {\n    const idx = offset + index;\n    const byte = values[idx >> 3];\n    return (byte & 1 << (idx % 8)) !== 0;\n};\n\n/** @ignore */\ntype Numeric1X = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32 | Float32 | Float64;\n/** @ignore */\ntype Numeric2X = Int64 | Uint64;\n\n/** @ignore */\nconst getDateDay         = <T extends DateDay>        ({ values         }: VectorType<T>, index: number): T['TValue'] => epochDaysToDate(values, index);\n/** @ignore */\nconst getDateMillisecond = <T extends DateMillisecond>({ values         }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToDate(values, index * 2);\n/** @ignore */\nconst getNumeric         = <T extends Numeric1X>      ({ stride, values }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getFloat16         = <T extends Float16>        ({ stride, values }: VectorType<T>, index: number): T['TValue'] => uint16ToFloat64(values[stride * index]);\n/** @ignore */\nconst getBigInts         = <T extends Numeric2X>({ stride, values, type }: VectorType<T>, index: number): T['TValue'] => <any> BN.new(values.subarray(stride * index, stride * (index + 1)), type.isSigned);\n/** @ignore */\nconst getFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: VectorType<T>, index: number): T['TValue'] => values.subarray(stride * index, stride * (index + 1));\n\n/** @ignore */\nconst getBinary = <T extends Binary>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => getVariableWidthBytes(values, valueOffsets, index);\n/** @ignore */\nconst getUtf8 = <T extends Utf8>({ values, valueOffsets }: VectorType<T>, index: number): T['TValue'] => {\n    const bytes = getVariableWidthBytes(values, valueOffsets, index);\n    return bytes !== null ? decodeUtf8(bytes) : null as any;\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInt = <T extends Int>(vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.bitWidth < 64\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getBigInts(vector as VectorType<Numeric2X>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getFloat = <T extends Float> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.precision !== Precision.HALF\n        ? getNumeric(vector as VectorType<Numeric1X>, index)\n        : getFloat16(vector as VectorType<Float16>, index)\n);\n\n/* istanbul ignore next */\n/** @ignore */\nconst getDate = <T extends Date_> (vector: VectorType<T>, index: number): T['TValue'] => (\n    vector.type.unit === DateUnit.DAY\n        ? getDateDay(vector as VectorType<DateDay>, index)\n        : getDateMillisecond(vector as VectorType<DateMillisecond>, index)\n);\n\n/** @ignore */\nconst getTimestampSecond      = <T extends TimestampSecond>     ({ values }: VectorType<T>, index: number): T['TValue'] => 1000 * epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMillisecond = <T extends TimestampMillisecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMillisecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: VectorType<T>, index: number): T['TValue'] => epochMicrosecondsLongToMs(values, index * 2);\n/** @ignore */\nconst getTimestampNanosecond  = <T extends TimestampNanosecond> ({ values }: VectorType<T>, index: number): T['TValue'] => epochNanosecondsLongToMs(values, index * 2);\n/* istanbul ignore next */\n/** @ignore */\nconst getTimestamp            = <T extends Timestamp>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimestampSecond(vector as VectorType<TimestampSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimestampMillisecond(vector as VectorType<TimestampMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimestampMicrosecond(vector as VectorType<TimestampMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimestampNanosecond(vector as VectorType<TimestampNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getTimeSecond      = <T extends TimeSecond>     ({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMillisecond = <T extends TimeMillisecond>({ values, stride }: VectorType<T>, index: number): T['TValue'] => values[stride * index];\n/** @ignore */\nconst getTimeMicrosecond = <T extends TimeMicrosecond>({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/** @ignore */\nconst getTimeNanosecond  = <T extends TimeNanosecond> ({ values         }: VectorType<T>, index: number): T['TValue'] => BN.signed(values.subarray(2 * index, 2 * (index + 1)));\n/* istanbul ignore next */\n/** @ignore */\nconst getTime            = <T extends Time>(vector: VectorType<T>, index: number): T['TValue'] => {\n    switch (vector.type.unit) {\n        case TimeUnit.SECOND:      return      getTimeSecond(vector as VectorType<TimeSecond>, index);\n        case TimeUnit.MILLISECOND: return getTimeMillisecond(vector as VectorType<TimeMillisecond>, index);\n        case TimeUnit.MICROSECOND: return getTimeMicrosecond(vector as VectorType<TimeMicrosecond>, index);\n        case TimeUnit.NANOSECOND:  return  getTimeNanosecond(vector as VectorType<TimeNanosecond>, index);\n    }\n};\n\n/** @ignore */\nconst getDecimal = <T extends Decimal>({ values }: VectorType<T>, index: number): T['TValue'] => BN.decimal(values.subarray(4 * index, 4 * (index + 1)));\n\n/** @ignore */\nconst getList = <T extends List>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { valueOffsets, stride } = vector;\n    return child.slice(valueOffsets[index * stride], valueOffsets[(index * stride) + 1]) as T['TValue'];\n};\n\n/** @ignore */\nconst getMap = <T extends Map_>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/** @ignore */\nconst getStruct = <T extends Struct>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.bind(index) as T['TValue'];\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getUnion = <\n    V extends VectorType<Union> | VectorType<DenseUnion> | VectorType<SparseUnion>\n>(vector: V, index: number): V['TValue'] => {\n    return vector.type.mode === UnionMode.Dense ?\n        getDenseUnion(vector as VectorType<DenseUnion>, index) :\n        getSparseUnion(vector as VectorType<SparseUnion>, index);\n};\n\n/** @ignore */\nconst getDenseUnion = <T extends DenseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(vector.valueOffsets[index]) : null;\n};\n\n/** @ignore */\nconst getSparseUnion = <T extends SparseUnion>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const childIndex = vector.typeIdToChildIndex[vector.typeIds[index]];\n    const child = vector.getChildAt(childIndex);\n    return child ? child.get(index) : null;\n};\n\n/** @ignore */\nconst getDictionary = <T extends Dictionary>(vector: VectorType<T>, index: number): T['TValue'] => {\n    return vector.getValue(vector.getKey(index)!);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst getInterval = <T extends Interval>(vector: VectorType<T>, index: number): T['TValue'] =>\n    (vector.type.unit === IntervalUnit.DAY_TIME)\n        ? getIntervalDayTime(vector as VectorType<IntervalDayTime>, index)\n        : getIntervalYearMonth(vector as VectorType<IntervalYearMonth>, index);\n\n/** @ignore */\nconst getIntervalDayTime = <T extends IntervalDayTime>({ values }: VectorType<T>, index: number): T['TValue'] => values.subarray(2 * index, 2 * (index + 1));\n\n/** @ignore */\nconst getIntervalYearMonth = <T extends IntervalYearMonth>({ values }: VectorType<T>, index: number): T['TValue'] => {\n    const interval = values[index];\n    const int32s = new Int32Array(2);\n    int32s[0] = interval / 12 | 0; /* years */\n    int32s[1] = interval % 12 | 0; /* months */\n    return int32s;\n};\n\n/** @ignore */\nconst getFixedSizeList = <T extends FixedSizeList>(vector: VectorType<T>, index: number): T['TValue'] => {\n    const child = vector.getChildAt(0)!, { stride } = vector;\n    return child.slice(index * stride, (index + 1) * stride) as T['TValue'];\n};\n\nGetVisitor.prototype.visitNull                 =                 getNull;\nGetVisitor.prototype.visitBool                 =                 getBool;\nGetVisitor.prototype.visitInt                  =                  getInt;\nGetVisitor.prototype.visitInt8                 =              getNumeric;\nGetVisitor.prototype.visitInt16                =              getNumeric;\nGetVisitor.prototype.visitInt32                =              getNumeric;\nGetVisitor.prototype.visitInt64                =              getBigInts;\nGetVisitor.prototype.visitUint8                =              getNumeric;\nGetVisitor.prototype.visitUint16               =              getNumeric;\nGetVisitor.prototype.visitUint32               =              getNumeric;\nGetVisitor.prototype.visitUint64               =              getBigInts;\nGetVisitor.prototype.visitFloat                =                getFloat;\nGetVisitor.prototype.visitFloat16              =              getFloat16;\nGetVisitor.prototype.visitFloat32              =              getNumeric;\nGetVisitor.prototype.visitFloat64              =              getNumeric;\nGetVisitor.prototype.visitUtf8                 =                 getUtf8;\nGetVisitor.prototype.visitBinary               =               getBinary;\nGetVisitor.prototype.visitFixedSizeBinary      =      getFixedSizeBinary;\nGetVisitor.prototype.visitDate                 =                 getDate;\nGetVisitor.prototype.visitDateDay              =              getDateDay;\nGetVisitor.prototype.visitDateMillisecond      =      getDateMillisecond;\nGetVisitor.prototype.visitTimestamp            =            getTimestamp;\nGetVisitor.prototype.visitTimestampSecond      =      getTimestampSecond;\nGetVisitor.prototype.visitTimestampMillisecond = getTimestampMillisecond;\nGetVisitor.prototype.visitTimestampMicrosecond = getTimestampMicrosecond;\nGetVisitor.prototype.visitTimestampNanosecond  =  getTimestampNanosecond;\nGetVisitor.prototype.visitTime                 =                 getTime;\nGetVisitor.prototype.visitTimeSecond           =           getTimeSecond;\nGetVisitor.prototype.visitTimeMillisecond      =      getTimeMillisecond;\nGetVisitor.prototype.visitTimeMicrosecond      =      getTimeMicrosecond;\nGetVisitor.prototype.visitTimeNanosecond       =       getTimeNanosecond;\nGetVisitor.prototype.visitDecimal              =              getDecimal;\nGetVisitor.prototype.visitList                 =                 getList;\nGetVisitor.prototype.visitStruct               =               getStruct;\nGetVisitor.prototype.visitUnion                =                getUnion;\nGetVisitor.prototype.visitDenseUnion           =           getDenseUnion;\nGetVisitor.prototype.visitSparseUnion          =          getSparseUnion;\nGetVisitor.prototype.visitDictionary           =           getDictionary;\nGetVisitor.prototype.visitInterval             =             getInterval;\nGetVisitor.prototype.visitIntervalDayTime      =      getIntervalDayTime;\nGetVisitor.prototype.visitIntervalYearMonth    =    getIntervalYearMonth;\nGetVisitor.prototype.visitFixedSizeList        =        getFixedSizeList;\nGetVisitor.prototype.visitMap                  =                  getMap;\n\n/** @ignore */\nexport const instance = new GetVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { getBool, iterateBits } from '../util/bit';\nimport { createElementComparator } from '../util/vector';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IndexOfVisitor extends Visitor {\n    visit<T extends VectorType>  (node: T, value: T['TValue'] | null, index?: number): number;\n    visitMany <T extends VectorType>  (nodes: T[], values: (T['TValue'] | null)[], indices: (number | undefined)[]): number[];\n    getVisitFn<T extends Type>    (node: T): (vector: VectorType<T>, value: VectorType<T>['TValue'] | null, index?: number) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>, value:         T['TValue'] | null, index?: number) => number;\n    visitNull                 <T extends Null>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBool                 <T extends Bool>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt                  <T extends Int>                 (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt8                 <T extends Int8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt16                <T extends Int16>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt32                <T extends Int32>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInt64                <T extends Int64>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint8                <T extends Uint8>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint16               <T extends Uint16>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint32               <T extends Uint32>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUint64               <T extends Uint64>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat                <T extends Float>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat16              <T extends Float16>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat32              <T extends Float32>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFloat64              <T extends Float64>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUtf8                 <T extends Utf8>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitBinary               <T extends Binary>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDate                 <T extends Date_>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateDay              <T extends DateDay>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDateMillisecond      <T extends DateMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestamp            <T extends Timestamp>           (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampSecond      <T extends TimestampSecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMillisecond <T extends TimestampMillisecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond>(vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimestampNanosecond  <T extends TimestampNanosecond> (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTime                 <T extends Time>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeSecond           <T extends TimeSecond>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMillisecond      <T extends TimeMillisecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitTimeNanosecond       <T extends TimeNanosecond>      (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDecimal              <T extends Decimal>             (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitList                 <T extends List>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitStruct               <T extends Struct>              (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitUnion                <T extends Union>               (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDenseUnion           <T extends DenseUnion>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitSparseUnion          <T extends SparseUnion>         (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitDictionary           <T extends Dictionary>          (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitInterval             <T extends Interval>            (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalDayTime      <T extends IntervalDayTime>     (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>   (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitFixedSizeList        <T extends FixedSizeList>       (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n    visitMap                  <T extends Map_>                (vector: VectorType<T>, value: T['TValue'] | null, index?: number): number;\n}\n\n/** @ignore */\nexport class IndexOfVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullIndexOf(vector: VectorType<Null>, searchElement?: null) {\n    // if you're looking for nulls and the vector isn't empty, we've got 'em!\n    return searchElement === null && vector.length > 0 ? 0 : -1;\n}\n\n/** @ignore */\nfunction indexOfNull<T extends DataType>(vector: VectorType<T>, fromIndex?: number): number {\n    const { nullBitmap } = vector;\n    if (!nullBitmap || vector.nullCount <= 0) {\n        return -1;\n    }\n    let i = 0;\n    for (const isValid of iterateBits(nullBitmap, vector.data.offset + (fromIndex || 0), vector.length, nullBitmap, getBool)) {\n        if (!isValid) { return i; }\n        ++i;\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfValue<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    if (searchElement === undefined) { return -1; }\n    if (searchElement === null) { return indexOfNull(vector, fromIndex); }\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n/** @ignore */\nfunction indexOfUnion<T extends DataType>(vector: VectorType<T>, searchElement?: T['TValue'] | null, fromIndex?: number): number {\n    // Unions are special -- they do have a nullBitmap, but so can their children.\n    // If the searchElement is null, we don't know whether it came from the Union's\n    // bitmap or one of its childrens'. So we don't interrogate the Union's bitmap,\n    // since that will report the wrong index if a child has a null before the Union.\n    const compare = createElementComparator(searchElement);\n    for (let i = (fromIndex || 0) - 1, n = vector.length; ++i < n;) {\n        if (compare(vector.get(i))) {\n            return i;\n        }\n    }\n    return -1;\n}\n\nIndexOfVisitor.prototype.visitNull                 =  nullIndexOf;\nIndexOfVisitor.prototype.visitBool                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt                  = indexOfValue;\nIndexOfVisitor.prototype.visitInt8                 = indexOfValue;\nIndexOfVisitor.prototype.visitInt16                = indexOfValue;\nIndexOfVisitor.prototype.visitInt32                = indexOfValue;\nIndexOfVisitor.prototype.visitInt64                = indexOfValue;\nIndexOfVisitor.prototype.visitUint8                = indexOfValue;\nIndexOfVisitor.prototype.visitUint16               = indexOfValue;\nIndexOfVisitor.prototype.visitUint32               = indexOfValue;\nIndexOfVisitor.prototype.visitUint64               = indexOfValue;\nIndexOfVisitor.prototype.visitFloat                = indexOfValue;\nIndexOfVisitor.prototype.visitFloat16              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat32              = indexOfValue;\nIndexOfVisitor.prototype.visitFloat64              = indexOfValue;\nIndexOfVisitor.prototype.visitUtf8                 = indexOfValue;\nIndexOfVisitor.prototype.visitBinary               = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeBinary      = indexOfValue;\nIndexOfVisitor.prototype.visitDate                 = indexOfValue;\nIndexOfVisitor.prototype.visitDateDay              = indexOfValue;\nIndexOfVisitor.prototype.visitDateMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestamp            = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampSecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMillisecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampMicrosecond = indexOfValue;\nIndexOfVisitor.prototype.visitTimestampNanosecond  = indexOfValue;\nIndexOfVisitor.prototype.visitTime                 = indexOfValue;\nIndexOfVisitor.prototype.visitTimeSecond           = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMillisecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeMicrosecond      = indexOfValue;\nIndexOfVisitor.prototype.visitTimeNanosecond       = indexOfValue;\nIndexOfVisitor.prototype.visitDecimal              = indexOfValue;\nIndexOfVisitor.prototype.visitList                 = indexOfValue;\nIndexOfVisitor.prototype.visitStruct               = indexOfValue;\nIndexOfVisitor.prototype.visitUnion                = indexOfValue;\nIndexOfVisitor.prototype.visitDenseUnion           = indexOfUnion;\nIndexOfVisitor.prototype.visitSparseUnion          = indexOfUnion;\nIndexOfVisitor.prototype.visitDictionary           = indexOfValue;\nIndexOfVisitor.prototype.visitInterval             = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalDayTime      = indexOfValue;\nIndexOfVisitor.prototype.visitIntervalYearMonth    = indexOfValue;\nIndexOfVisitor.prototype.visitFixedSizeList        = indexOfValue;\nIndexOfVisitor.prototype.visitMap                  = indexOfValue;\n\n/** @ignore */\nexport const instance = new IndexOfVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { iterateBits } from '../util/bit';\nimport { instance as getVisitor } from './get';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface IteratorVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): IterableIterator<T['TValue'] | null>;\n    visitMany <T extends VectorType>(nodes: T[]): IterableIterator<T['TValue'] | null>[];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => IterableIterator<VectorType<T>['TValue'] | null>;\n    visitNull                 <T extends Null>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBool                 <T extends Bool>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt                  <T extends Int>                  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt8                 <T extends Int8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt16                <T extends Int16>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt32                <T extends Int32>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInt64                <T extends Int64>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint8                <T extends Uint8>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint16               <T extends Uint16>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint32               <T extends Uint32>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUint64               <T extends Uint64>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat                <T extends Float>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat16              <T extends Float16>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat32              <T extends Float32>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFloat64              <T extends Float64>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUtf8                 <T extends Utf8>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitBinary               <T extends Binary>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeBinary      <T extends FixedSizeBinary>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDate                 <T extends Date_>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateDay              <T extends DateDay>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDateMillisecond      <T extends DateMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestamp            <T extends Timestamp>            (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampSecond      <T extends TimestampSecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMillisecond <T extends TimestampMillisecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampMicrosecond <T extends TimestampMicrosecond> (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimestampNanosecond  <T extends TimestampNanosecond>  (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTime                 <T extends Time>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeSecond           <T extends TimeSecond>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMillisecond      <T extends TimeMillisecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeMicrosecond      <T extends TimeMicrosecond>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitTimeNanosecond       <T extends TimeNanosecond>       (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDecimal              <T extends Decimal>              (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitList                 <T extends List>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitStruct               <T extends Struct>               (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitUnion                <T extends Union>                (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDenseUnion           <T extends DenseUnion>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitSparseUnion          <T extends SparseUnion>          (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitDictionary           <T extends Dictionary>           (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitInterval             <T extends Interval>             (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalDayTime      <T extends IntervalDayTime>      (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitIntervalYearMonth    <T extends IntervalYearMonth>    (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitFixedSizeList        <T extends FixedSizeList>        (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n    visitMap                  <T extends Map_>                 (vector: VectorType<T>): IterableIterator<T['TValue'] | null>;\n}\n\n/** @ignore */\nexport class IteratorVisitor extends Visitor {}\n\n/** @ignore */\nfunction nullableIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n    const getFn = getVisitor.getVisitFn(vector);\n    return iterateBits<T['TValue'] | null>(\n        vector.nullBitmap, vector.offset, vector.length, vector,\n        (vec: VectorType<T>, idx: number, nullByte: number, nullBit: number) =>\n            ((nullByte & 1 << nullBit) !== 0) ? getFn(vec, idx) : null\n    );\n}\n\n/** @ignore */\nfunction vectorIterator<T extends DataType>(vector: VectorType<T>): IterableIterator<T['TValue'] | null> {\n\n    // If nullable, iterate manually\n    if (vector.nullCount > 0) {\n        return nullableIterator<T>(vector);\n    }\n\n    const { type, typeId, length } = vector;\n\n    // Fast case, defer to native iterators if possible\n    if (vector.stride === 1 && (\n        (typeId === Type.Timestamp) ||\n        (typeId === Type.Int && (type as Int).bitWidth !== 64) ||\n        (typeId === Type.Time && (type as Time).bitWidth !== 64) ||\n        (typeId === Type.Float && (type as Float).precision > 0 /* Precision.HALF */)\n    )) {\n        return vector.values.subarray(0, length)[Symbol.iterator]();\n    }\n\n    // Otherwise, iterate manually\n    return (function* (getFn) {\n        for (let index = -1; ++index < length;) {\n            yield getFn(vector, index);\n        }\n    })(getVisitor.getVisitFn(vector));\n}\n\nIteratorVisitor.prototype.visitNull                 = vectorIterator;\nIteratorVisitor.prototype.visitBool                 = vectorIterator;\nIteratorVisitor.prototype.visitInt                  = vectorIterator;\nIteratorVisitor.prototype.visitInt8                 = vectorIterator;\nIteratorVisitor.prototype.visitInt16                = vectorIterator;\nIteratorVisitor.prototype.visitInt32                = vectorIterator;\nIteratorVisitor.prototype.visitInt64                = vectorIterator;\nIteratorVisitor.prototype.visitUint8                = vectorIterator;\nIteratorVisitor.prototype.visitUint16               = vectorIterator;\nIteratorVisitor.prototype.visitUint32               = vectorIterator;\nIteratorVisitor.prototype.visitUint64               = vectorIterator;\nIteratorVisitor.prototype.visitFloat                = vectorIterator;\nIteratorVisitor.prototype.visitFloat16              = vectorIterator;\nIteratorVisitor.prototype.visitFloat32              = vectorIterator;\nIteratorVisitor.prototype.visitFloat64              = vectorIterator;\nIteratorVisitor.prototype.visitUtf8                 = vectorIterator;\nIteratorVisitor.prototype.visitBinary               = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeBinary      = vectorIterator;\nIteratorVisitor.prototype.visitDate                 = vectorIterator;\nIteratorVisitor.prototype.visitDateDay              = vectorIterator;\nIteratorVisitor.prototype.visitDateMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestamp            = vectorIterator;\nIteratorVisitor.prototype.visitTimestampSecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMillisecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampMicrosecond = vectorIterator;\nIteratorVisitor.prototype.visitTimestampNanosecond  = vectorIterator;\nIteratorVisitor.prototype.visitTime                 = vectorIterator;\nIteratorVisitor.prototype.visitTimeSecond           = vectorIterator;\nIteratorVisitor.prototype.visitTimeMillisecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeMicrosecond      = vectorIterator;\nIteratorVisitor.prototype.visitTimeNanosecond       = vectorIterator;\nIteratorVisitor.prototype.visitDecimal              = vectorIterator;\nIteratorVisitor.prototype.visitList                 = vectorIterator;\nIteratorVisitor.prototype.visitStruct               = vectorIterator;\nIteratorVisitor.prototype.visitUnion                = vectorIterator;\nIteratorVisitor.prototype.visitDenseUnion           = vectorIterator;\nIteratorVisitor.prototype.visitSparseUnion          = vectorIterator;\nIteratorVisitor.prototype.visitDictionary           = vectorIterator;\nIteratorVisitor.prototype.visitInterval             = vectorIterator;\nIteratorVisitor.prototype.visitIntervalDayTime      = vectorIterator;\nIteratorVisitor.prototype.visitIntervalYearMonth    = vectorIterator;\nIteratorVisitor.prototype.visitFixedSizeList        = vectorIterator;\nIteratorVisitor.prototype.visitMap                  = vectorIterator;\n\n/** @ignore */\nexport const instance = new IteratorVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { instance as iteratorVisitor } from './iterator';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type';\n\n/** @ignore */\nexport interface ToArrayVisitor extends Visitor {\n    visit<T extends VectorType>(node: T): T['TArray'];\n    visitMany<T extends VectorType>(nodes: T[]): T['TArray'][];\n    getVisitFn<T extends Type>(node: T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (vector: VectorType<T>) => VectorType<T>['TArray'];\n    visitNull                                    <T extends Null>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBool                                    <T extends Bool>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt                                     <T extends Int>                 (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt8                                    <T extends Int8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt16                                   <T extends Int16>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt32                                   <T extends Int32>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInt64                                   <T extends Int64>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint8                                   <T extends Uint8>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint16                                  <T extends Uint16>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint32                                  <T extends Uint32>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUint64                                  <T extends Uint64>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat                                   <T extends Float>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat16                                 <T extends Float16>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat32                                 <T extends Float32>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFloat64                                 <T extends Float64>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUtf8                                    <T extends Utf8>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitBinary                                  <T extends Binary>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeBinary                         <T extends FixedSizeBinary>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDate                                    <T extends Date_>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateDay                                 <T extends DateDay>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDateMillisecond                         <T extends DateMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestamp                               <T extends Timestamp>           (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampSecond                         <T extends TimestampSecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMillisecond                    <T extends TimestampMillisecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampMicrosecond                    <T extends TimestampMicrosecond>(vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimestampNanosecond                     <T extends TimestampNanosecond> (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTime                                    <T extends Time>                (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeSecond                              <T extends TimeSecond>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMillisecond                         <T extends TimeMillisecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeMicrosecond                         <T extends TimeMicrosecond>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitTimeNanosecond                          <T extends TimeNanosecond>      (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDecimal                                 <T extends Decimal>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitList                <R extends DataType, T extends List<R>>             (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitStruct                                  <T extends Struct>              (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitUnion                                   <T extends Union>               (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDenseUnion                              <T extends DenseUnion>          (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitSparseUnion                             <T extends SparseUnion>         (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitDictionary          <R extends DataType, T extends Dictionary<R>>       (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitInterval                                <T extends Interval>            (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalDayTime                         <T extends IntervalDayTime>     (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitIntervalYearMonth                       <T extends IntervalYearMonth>   (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitFixedSizeList       <R extends DataType, T extends FixedSizeList<R>>    (vector: VectorType<T>): VectorType<T>['TArray'];\n    visitMap                                     <T extends Map_>                (vector: VectorType<T>): VectorType<T>['TArray'];\n}\n\n/** @ignore */\nexport class ToArrayVisitor extends Visitor {}\n\n/** @ignore */\nfunction arrayOfVector<T extends DataType>(vector: VectorType<T>): T['TArray'] {\n\n    const { type, length, stride } = vector;\n\n    // Fast case, return subarray if possible\n    switch (type.typeId) {\n        case Type.Int:\n        case Type.Float: case Type.Decimal:\n        case Type.Time: case Type.Timestamp:\n            return vector.values.subarray(0, length * stride);\n    }\n\n    // Otherwise if not primitive, slow copy\n    return [...iteratorVisitor.visit(vector)] as T['TArray'];\n}\n\nToArrayVisitor.prototype.visitNull                 = arrayOfVector;\nToArrayVisitor.prototype.visitBool                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt                  = arrayOfVector;\nToArrayVisitor.prototype.visitInt8                 = arrayOfVector;\nToArrayVisitor.prototype.visitInt16                = arrayOfVector;\nToArrayVisitor.prototype.visitInt32                = arrayOfVector;\nToArrayVisitor.prototype.visitInt64                = arrayOfVector;\nToArrayVisitor.prototype.visitUint8                = arrayOfVector;\nToArrayVisitor.prototype.visitUint16               = arrayOfVector;\nToArrayVisitor.prototype.visitUint32               = arrayOfVector;\nToArrayVisitor.prototype.visitUint64               = arrayOfVector;\nToArrayVisitor.prototype.visitFloat                = arrayOfVector;\nToArrayVisitor.prototype.visitFloat16              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat32              = arrayOfVector;\nToArrayVisitor.prototype.visitFloat64              = arrayOfVector;\nToArrayVisitor.prototype.visitUtf8                 = arrayOfVector;\nToArrayVisitor.prototype.visitBinary               = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeBinary      = arrayOfVector;\nToArrayVisitor.prototype.visitDate                 = arrayOfVector;\nToArrayVisitor.prototype.visitDateDay              = arrayOfVector;\nToArrayVisitor.prototype.visitDateMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestamp            = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampSecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMillisecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampMicrosecond = arrayOfVector;\nToArrayVisitor.prototype.visitTimestampNanosecond  = arrayOfVector;\nToArrayVisitor.prototype.visitTime                 = arrayOfVector;\nToArrayVisitor.prototype.visitTimeSecond           = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMillisecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeMicrosecond      = arrayOfVector;\nToArrayVisitor.prototype.visitTimeNanosecond       = arrayOfVector;\nToArrayVisitor.prototype.visitDecimal              = arrayOfVector;\nToArrayVisitor.prototype.visitList                 = arrayOfVector;\nToArrayVisitor.prototype.visitStruct               = arrayOfVector;\nToArrayVisitor.prototype.visitUnion                = arrayOfVector;\nToArrayVisitor.prototype.visitDenseUnion           = arrayOfVector;\nToArrayVisitor.prototype.visitSparseUnion          = arrayOfVector;\nToArrayVisitor.prototype.visitDictionary           = arrayOfVector;\nToArrayVisitor.prototype.visitInterval             = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalDayTime      = arrayOfVector;\nToArrayVisitor.prototype.visitIntervalYearMonth    = arrayOfVector;\nToArrayVisitor.prototype.visitFixedSizeList        = arrayOfVector;\nToArrayVisitor.prototype.visitMap                  = arrayOfVector;\n\n/** @ignore */\nexport const instance = new ToArrayVisitor();\n","/* istanbul ignore file */\n\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Visitor } from '../visitor';\nimport { VectorType } from '../interfaces';\nimport { Type, TimeUnit } from '../enum';\nimport { Schema, Field } from '../schema';\nimport {\n    DataType, Dictionary,\n    Float, Int, Date_, Interval, Time, Timestamp,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary,\n    List, FixedSizeList, Map_, Struct, Union,\n} from '../type';\n\n/** @ignore */ const sum = (x: number, y: number) => x + y;\n/** @ignore */ const variableWidthColumnErrorMessage = (type: DataType) => `Cannot compute the byte width of variable-width column ${type}`;\n\n/** @ignore */\nexport interface ByteWidthVisitor extends Visitor {\n    visit<T extends DataType>(node: T): number;\n    visitMany<T extends DataType>(nodes: T[]): number[];\n    getVisitFn<T extends Type>    (node: T): (type: DataType<T>) => number;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): (type: T) => number;\n}\n\n/** @ignore */\nexport class ByteWidthVisitor extends Visitor {\n    public visitNull            (____: Null            ) { return 0; }\n    public visitInt             (type: Int             ) { return type.bitWidth / 8; }\n    public visitFloat           (type: Float           ) { return type.ArrayType.BYTES_PER_ELEMENT; }\n    public visitBinary          (type: Binary          ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitUtf8            (type: Utf8            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitBool            (____: Bool            ) { return 1 / 8; }\n    public visitDecimal         (____: Decimal         ) { return 16; }\n    public visitDate            (type: Date_           ) { return (type.unit + 1) * 4; }\n    public visitTime            (type: Time            ) { return type.bitWidth / 8; }\n    public visitTimestamp       (type: Timestamp       ) { return type.unit === TimeUnit.SECOND ? 4 : 8; }\n    public visitInterval        (type: Interval        ) { return (type.unit + 1) * 4; }\n    public visitList            (type: List            ) { throw new Error(variableWidthColumnErrorMessage(type)); }\n    public visitStruct          (type: Struct          ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitUnion           (type: Union           ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitFixedSizeBinary (type: FixedSizeBinary ) { return type.byteWidth; }\n    public visitFixedSizeList   (type: FixedSizeList   ) { return type.listSize * this.visitFields(type.children).reduce(sum, 0); }\n    public visitMap             (type: Map_            ) { return this.visitFields(type.children).reduce(sum, 0); }\n    public visitDictionary      (type: Dictionary      ) { return this.visit(type.indices); }\n    public visitFields          (fields: Field[]       ) { return (fields || []).map((field) => this.visit(field.type)); }\n    public visitSchema          (schema: Schema        ) { return this.visitFields(schema.fields).reduce(sum, 0); }\n}\n\n/** @ignore */\nexport const instance = new ByteWidthVisitor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { DataType } from '../type';\nimport { Visitor } from '../visitor';\nimport { VectorType, VectorCtor } from '../interfaces';\n\nimport { BinaryVector } from '../vector/binary';\nimport { BoolVector } from '../vector/bool';\nimport { DateVector, DateDayVector, DateMillisecondVector } from '../vector/date';\nimport { DecimalVector } from '../vector/decimal';\nimport { DictionaryVector } from '../vector/dictionary';\nimport { FixedSizeBinaryVector } from '../vector/fixedsizebinary';\nimport { FixedSizeListVector } from '../vector/fixedsizelist';\nimport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from '../vector/float';\nimport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from '../vector/interval';\nimport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from '../vector/int';\nimport { ListVector } from '../vector/list';\nimport { MapVector } from '../vector/map';\nimport { NullVector } from '../vector/null';\nimport { StructVector } from '../vector/struct';\nimport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from '../vector/timestamp';\nimport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from '../vector/time';\nimport { UnionVector, DenseUnionVector, SparseUnionVector } from '../vector/union';\nimport { Utf8Vector } from '../vector/utf8';\n\n/** @ignore */\nexport interface GetVectorConstructor extends Visitor {\n    visit<T extends Type>(node: T): VectorCtor<T>;\n    visitMany <T extends Type>(nodes: T[]): VectorCtor<T>[];\n    getVisitFn<T extends Type>(node: T): () => VectorCtor<T>;\n    getVisitFn<T extends DataType>(node: VectorType<T> | Data<T> | T): () => VectorCtor<T>;\n}\n\n/** @ignore */\nexport class GetVectorConstructor extends Visitor {\n    public visitNull                 () { return NullVector; }\n    public visitBool                 () { return BoolVector; }\n    public visitInt                  () { return IntVector; }\n    public visitInt8                 () { return Int8Vector; }\n    public visitInt16                () { return Int16Vector; }\n    public visitInt32                () { return Int32Vector; }\n    public visitInt64                () { return Int64Vector; }\n    public visitUint8                () { return Uint8Vector; }\n    public visitUint16               () { return Uint16Vector; }\n    public visitUint32               () { return Uint32Vector; }\n    public visitUint64               () { return Uint64Vector; }\n    public visitFloat                () { return FloatVector; }\n    public visitFloat16              () { return Float16Vector; }\n    public visitFloat32              () { return Float32Vector; }\n    public visitFloat64              () { return Float64Vector; }\n    public visitUtf8                 () { return Utf8Vector; }\n    public visitBinary               () { return BinaryVector; }\n    public visitFixedSizeBinary      () { return FixedSizeBinaryVector; }\n    public visitDate                 () { return DateVector; }\n    public visitDateDay              () { return DateDayVector; }\n    public visitDateMillisecond      () { return DateMillisecondVector; }\n    public visitTimestamp            () { return TimestampVector; }\n    public visitTimestampSecond      () { return TimestampSecondVector; }\n    public visitTimestampMillisecond () { return TimestampMillisecondVector; }\n    public visitTimestampMicrosecond () { return TimestampMicrosecondVector; }\n    public visitTimestampNanosecond  () { return TimestampNanosecondVector; }\n    public visitTime                 () { return TimeVector; }\n    public visitTimeSecond           () { return TimeSecondVector; }\n    public visitTimeMillisecond      () { return TimeMillisecondVector; }\n    public visitTimeMicrosecond      () { return TimeMicrosecondVector; }\n    public visitTimeNanosecond       () { return TimeNanosecondVector; }\n    public visitDecimal              () { return DecimalVector; }\n    public visitList                 () { return ListVector; }\n    public visitStruct               () { return StructVector; }\n    public visitUnion                () { return UnionVector; }\n    public visitDenseUnion           () { return DenseUnionVector; }\n    public visitSparseUnion          () { return SparseUnionVector; }\n    public visitDictionary           () { return DictionaryVector; }\n    public visitInterval             () { return IntervalVector; }\n    public visitIntervalDayTime      () { return IntervalDayTimeVector; }\n    public visitIntervalYearMonth    () { return IntervalYearMonthVector; }\n    public visitFixedSizeList        () { return FixedSizeListVector; }\n    public visitMap                  () { return MapVector; }\n}\n\n/** @ignore */\nexport const instance = new GetVectorConstructor();\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { Vector } from '../vector';\nexport { BaseVector } from './base';\nexport { BinaryVector } from './binary';\nexport { BoolVector } from './bool';\nexport { Chunked } from './chunked';\nexport { DateVector, DateDayVector, DateMillisecondVector } from './date';\nexport { DecimalVector } from './decimal';\nexport { DictionaryVector } from './dictionary';\nexport { FixedSizeBinaryVector } from './fixedsizebinary';\nexport { FixedSizeListVector } from './fixedsizelist';\nexport { FloatVector, Float16Vector, Float32Vector, Float64Vector } from './float';\nexport { IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector } from './interval';\nexport { IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector } from './int';\nexport { ListVector } from './list';\nexport { MapVector } from './map';\nexport { NullVector } from './null';\nexport { StructVector } from './struct';\nexport { TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector } from './timestamp';\nexport { TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector } from './time';\nexport { UnionVector, DenseUnionVector, SparseUnionVector } from './union';\nexport { Utf8Vector } from './utf8';\nexport { MapRow, StructRow } from './row';\n\nimport * as fn from '../util/fn';\nimport { Data } from '../data';\nimport { Type } from '../enum';\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { Chunked } from './chunked';\nimport { BaseVector } from './base';\nimport { setBool } from '../util/bit';\nimport { isIterable, isAsyncIterable } from '../util/compat';\nimport { Builder, IterableBuilderOptions } from '../builder';\nimport { VectorType as V, VectorCtorArgs } from '../interfaces';\nimport { instance as getVisitor } from '../visitor/get';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as indexOfVisitor } from '../visitor/indexof';\nimport { instance as toArrayVisitor } from '../visitor/toarray';\nimport { instance as iteratorVisitor } from '../visitor/iterator';\nimport { instance as byteWidthVisitor } from '../visitor/bytewidth';\nimport { instance as getVectorConstructor } from '../visitor/vectorctor';\n\ndeclare module '../vector' {\n    namespace Vector {\n        export { newVector as new };\n        export { vectorFrom as from };\n    }\n}\n\ndeclare module './base' {\n    namespace BaseVector {\n        export { vectorFrom as from };\n    }\n    interface BaseVector<T extends DataType> {\n        get(index: number): T['TValue'] | null;\n        set(index: number, value: T['TValue'] | null): void;\n        indexOf(value: T['TValue'] | null, fromIndex?: number): number;\n        toArray(): T['TArray'];\n        getByteWidth(): number;\n        [Symbol.iterator](): IterableIterator<T['TValue'] | null>;\n    }\n}\n\n/** @nocollapse */\nVector.new = newVector;\n\n/** @nocollapse */\nVector.from = vectorFrom;\n\n/** @ignore */\nfunction newVector<T extends DataType>(data: Data<T>, ...args: VectorCtorArgs<V<T>>): V<T> {\n    return new (getVectorConstructor.getVisitFn<T>(data)())(data, ...args) as V<T>;\n}\n\n/** @ignore */\nexport interface VectorBuilderOptions<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: Iterable<T['TValue'] | TNull>; }\n/** @ignore */\nexport interface VectorBuilderOptionsAsync<T extends DataType, TNull = any> extends IterableBuilderOptions<T, TNull> { values: AsyncIterable<T['TValue'] | TNull>; }\n\n/** @ignore */\nexport function vectorFromValuesWithType<T extends DataType, TNull = any>(newDataType: () => T, input: Iterable<T['TValue'] | TNull> | AsyncIterable<T['TValue'] | TNull> | VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    if (isIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as V<T>;\n    } else if (isAsyncIterable(input)) {\n        return Vector.from({ 'nullValues': [null, undefined], type: newDataType(), 'values': input }) as Promise<V<T>>;\n    }\n    const {\n        'values': values = [],\n        'type': type = newDataType(),\n        'nullValues': nullValues = [null, undefined],\n    } = { ...input };\n    return isIterable(values)\n        ? Vector.from({ nullValues, ...input, type } as VectorBuilderOptions<T, TNull>)\n        : Vector.from({ nullValues, ...input, type } as VectorBuilderOptionsAsync<T, TNull>);\n}\n\n/** @ignore */\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull>): Vector<T>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptionsAsync<T, TNull>): Promise<Vector<T>>;\nfunction vectorFrom<T extends DataType = any, TNull = any>(input: VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>) {\n    const { 'values': values = [], ...options } = { 'nullValues': [null, undefined], ...input } as VectorBuilderOptions<T, TNull> | VectorBuilderOptionsAsync<T, TNull>;\n    if (isIterable<T['TValue'] | TNull>(values)) {\n        const chunks = [...Builder.throughIterable(options)(values)];\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    }\n    return (async (chunks: V<T>[]) => {\n        const transform = Builder.throughAsyncIterable(options);\n        for await (const chunk of transform(values)) {\n            chunks.push(chunk);\n        }\n        return chunks.length === 1 ? chunks[0] : Chunked.concat<T>(chunks);\n    })([]);\n}\n\n//\n// We provide the following method implementations for code navigability purposes only.\n// They're overridden at runtime below with the specific Visitor implementation for each type,\n// short-circuiting the usual Visitor traversal and reducing intermediate lookups and calls.\n// This comment is here to remind you to not set breakpoints in these function bodies, or to inform\n// you why the breakpoints you have already set are not being triggered. Have a great day!\n//\n\nBaseVector.prototype.get = function baseVectorGet<T extends DataType>(this: BaseVector<T>, index: number): T['TValue'] | null {\n    return getVisitor.visit(this, index);\n};\n\nBaseVector.prototype.set = function baseVectorSet<T extends DataType>(this: BaseVector<T>, index: number, value: T['TValue'] | null): void {\n    return setVisitor.visit(this, index, value);\n};\n\nBaseVector.prototype.indexOf = function baseVectorIndexOf<T extends DataType>(this: BaseVector<T>, value: T['TValue'] | null, fromIndex?: number): number {\n    return indexOfVisitor.visit(this, value, fromIndex);\n};\n\nBaseVector.prototype.toArray = function baseVectorToArray<T extends DataType>(this: BaseVector<T>): T['TArray'] {\n    return toArrayVisitor.visit(this);\n};\n\nBaseVector.prototype.getByteWidth = function baseVectorGetByteWidth<T extends DataType>(this: BaseVector<T>): number {\n    return byteWidthVisitor.visit(this.type);\n};\n\nBaseVector.prototype[Symbol.iterator] = function baseVectorSymbolIterator<T extends DataType>(this: BaseVector<T>): IterableIterator<T['TValue'] | null> {\n    return iteratorVisitor.visit(this);\n};\n\n(BaseVector.prototype as any)._bindDataAccessors = bindBaseVectorDataAccessors;\n\n// Perf: bind and assign the operator Visitor methods to each of the Vector subclasses for each Type\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number')\n    .filter((typeId) => typeId !== Type.NONE)\n    .forEach((typeId) => {\n        const VectorCtor = getVectorConstructor.visit(typeId);\n        VectorCtor.prototype['get'] = fn.partial1(getVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['set'] = fn.partial2(setVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['indexOf'] = fn.partial2(indexOfVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['toArray'] = fn.partial0(toArrayVisitor.getVisitFn(typeId));\n        VectorCtor.prototype['getByteWidth'] = partialType0(byteWidthVisitor.getVisitFn(typeId));\n        VectorCtor.prototype[Symbol.iterator] = fn.partial0(iteratorVisitor.getVisitFn(typeId));\n    });\n\n/** @ignore */\nfunction partialType0<T extends Vector>(visit: (node: T['type']) => any) {\n    return function(this: T) { return visit(this.type); };\n}\n\n/** @ignore */\nfunction wrapNullableGet<T extends DataType, V extends Vector<T>, F extends (i: number) => any>(fn: F): (...args: Parameters<F>) => ReturnType<F> {\n    return function(this: V, i: number) { return this.isValid(i) ? fn.call(this, i) : null; };\n}\n\n/** @ignore */\nfunction wrapNullableSet<T extends DataType, V extends BaseVector<T>, F extends (i: number, a: any) => void>(fn: F): (...args: Parameters<F>) => void {\n    return function(this: V, i: number, a: any) {\n        if (setBool(this.nullBitmap, this.offset + i, !(a === null || a === undefined))) {\n            fn.call(this, i, a);\n        }\n    };\n}\n\n/** @ignore */\nfunction bindBaseVectorDataAccessors<T extends DataType>(this: BaseVector<T>) {\n    const nullBitmap = this.nullBitmap;\n    if (nullBitmap && nullBitmap.byteLength > 0) {\n        this.get = wrapNullableGet(this.get);\n        this.set = wrapNullableSet(this.set);\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Column } from './column';\nimport { Schema, Field } from './schema';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from './recordbatch';\nimport { DataFrame } from './compute/dataframe';\nimport { RecordBatchReader } from './ipc/reader';\nimport { DataType, RowLike, Struct } from './type';\nimport { selectColumnArgs, selectArgs } from './util/args';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { isPromise, isIterable, isAsyncIterable } from './util/compat';\nimport { RecordBatchFileWriter, RecordBatchStreamWriter } from './ipc/writer';\nimport { distributeColumnsIntoRecordBatches, distributeVectorsIntoRecordBatches } from './util/recordbatch';\nimport { Vector, Chunked, StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = Data<T[keyof T]>[] | Vector<T[keyof T]>[];\ntype Columns<T extends { [key: string]: DataType }> = Column<T[keyof T]>[] | Column<T[keyof T]>[][];\n\nexport interface Table<T extends { [key: string]: DataType } = any> {\n\n    get(index: number): Struct<T>['TValue'];\n    [Symbol.iterator](): IterableIterator<RowLike<T>>;\n\n    slice(begin?: number, end?: number): Table<T>;\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    clone(chunks?: RecordBatch<T>[], offsets?: Uint32Array): Table<T>;\n\n    scan(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    scanReverse(next: import('./compute/dataframe').NextFunc, bind?: import('./compute/dataframe').BindFunc): void;\n    countBy(name: import('./compute/predicate').Col | string): import('./compute/dataframe').CountByResult;\n    filter(predicate: import('./compute/predicate').Predicate): import('./compute/dataframe').FilteredDataFrame<T>;\n}\n\nexport class Table<T extends { [key: string]: DataType } = any>\n    extends Chunked<Struct<T>>\n    implements DataFrame<T>,\n               Clonable<Table<T>>,\n               Sliceable<Table<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    /** @nocollapse */\n    public static empty<T extends { [key: string]: DataType } = {}>(schema = new Schema<T>([])) { return new Table<T>(schema, []); }\n\n    public static from(): Table<{}>;\n    public static from<T extends { [key: string]: DataType } = any>(source: RecordBatchReader<T>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg0): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg2): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg1): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg3): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg4): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArg5): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: PromiseLike<RecordBatchReader<T>>): Promise<Table<T>>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(input?: any) {\n\n        if (!input) { return Table.empty(); }\n\n        if (typeof input === 'object') {\n            let table = isIterable(input['values']) ? tableFromIterable<T, TNull>(input)\n                 : isAsyncIterable(input['values']) ? tableFromAsyncIterable<T, TNull>(input)\n                                                    : null;\n            if (table !== null) { return table; }\n        }\n\n        let reader = RecordBatchReader.from<T>(input) as RecordBatchReader<T> | Promise<RecordBatchReader<T>>;\n\n        if (isPromise<RecordBatchReader<T>>(reader)) {\n            return (async () => await Table.from(await reader))();\n        }\n        if (reader.isSync() && (reader = reader.open())) {\n            return !reader.schema ? Table.empty() : new Table<T>(reader.schema, [...reader]);\n        }\n        return (async (opening) => {\n            const reader = await opening;\n            const schema = reader.schema;\n            const batches: RecordBatch[] = [];\n            if (schema) {\n                for await (let batch of reader) {\n                    batches.push(batch);\n                }\n                return new Table<T>(schema, batches);\n            }\n            return Table.empty();\n        })(reader.open());\n    }\n\n    /** @nocollapse */\n    public static async fromAsync<T extends { [key: string]: DataType } = any>(source: import('./ipc/reader').FromArgs): Promise<Table<T>> {\n        return await Table.from<T>(source as any);\n    }\n\n    /** @nocollapse */\n    public static fromStruct<T extends { [key: string]: DataType } = any>(vector: Vector<Struct<T>>) {\n        return Table.new<T>(vector.data.childData as Data<T[keyof T]>[], vector.type.children);\n    }\n\n    /**\n     * @summary Create a new Table from a collection of Columns or Vectors,\n     * with an optional list of names or Fields.\n     *\n     *\n     * `Table.new` accepts an Object of\n     * Columns or Vectors, where the keys will be used as the field names\n     * for the Schema:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new({ i32: i32s, f32: f32s });\n     * assert(table.schema.fields[0].name === 'i32');\n     * ```\n     *\n     * It also accepts a a list of Vectors with an optional list of names or\n     * Fields for the resulting Schema. If the list is omitted or a name is\n     * missing, the numeric index of each Vector will be used as the name:\n     * ```ts\n     * const i32s = Int32Vector.from([1, 2, 3]);\n     * const f32s = Float32Vector.from([.1, .2, .3]);\n     * const table = Table.new([i32s, f32s], ['i32']);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === '1');\n     * ```\n     *\n     * If the supplied arguments are Columns, `Table.new` will infer the Schema\n     * from the Columns:\n     * ```ts\n     * const i32s = Column.new('i32', Int32Vector.from([1, 2, 3]));\n     * const f32s = Column.new('f32', Float32Vector.from([.1, .2, .3]));\n     * const table = Table.new(i32s, f32s);\n     * assert(table.schema.fields[0].name === 'i32');\n     * assert(table.schema.fields[1].name === 'f32');\n     * ```\n     *\n     * If the supplied Vector or Column lengths are unequal, `Table.new` will\n     * extend the lengths of the shorter Columns, allocating additional bytes\n     * to represent the additional null slots. The memory required to allocate\n     * these additional bitmaps can be computed as:\n     * ```ts\n     * let additionalBytes = 0;\n     * for (let vec in shorter_vectors) {\n     *     additionalBytes += (((longestLength - vec.length) + 63) & ~63) >> 3;\n     * }\n     * ```\n     *\n     * For example, an additional null bitmap for one million null values would require\n     * 125,000 bytes (`((1e6 + 63) & ~63) >> 3`), or approx. `0.11MiB`\n     */\n    public static new<T extends { [key: string]: DataType } = any>(...columns: Columns<T>): Table<T>;\n    public static new<T extends VectorMap = any>(children: T): Table<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): Table<T>;\n    /** @nocollapse */\n    public static new(...cols: any[]) {\n        return new Table(...distributeColumnsIntoRecordBatches(selectColumnArgs(cols)));\n    }\n\n    constructor(batches: RecordBatch<T>[]);\n    constructor(...batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, batches: RecordBatch<T>[]);\n    constructor(schema: Schema<T>, ...batches: RecordBatch<T>[]);\n    constructor(...args: any[]) {\n\n        let schema: Schema<T> = null!;\n\n        if (args[0] instanceof Schema) { schema = args.shift(); }\n\n        let chunks = selectArgs<RecordBatch<T>>(RecordBatch, args);\n\n        if (!schema && !(schema = chunks[0] && chunks[0].schema)) {\n            throw new TypeError('Table must be initialized with a Schema or at least one RecordBatch');\n        }\n\n        chunks[0] || (chunks[0] = new _InternalEmptyPlaceholderRecordBatch(schema));\n\n        super(new Struct(schema.fields), chunks);\n\n        this._schema = schema;\n        this._chunks = chunks;\n    }\n\n    protected _schema: Schema<T>;\n    // List of inner RecordBatches\n    protected _chunks: RecordBatch<T>[];\n    protected _children?: Column<T[keyof T]>[];\n\n    public get schema() { return this._schema; }\n    public get length() { return this._length; }\n    public get chunks() { return this._chunks; }\n    public get numCols() { return this._numChildren; }\n\n    public clone(chunks = this._chunks) {\n        return new Table<T>(this._schema, chunks);\n    }\n\n    public getColumn<R extends keyof T>(name: R): Column<T[R]> {\n        return this.getColumnAt(this.getColumnIndex(name)) as Column<T[R]>;\n    }\n    public getColumnAt<R extends DataType = any>(index: number): Column<R> | null {\n        return this.getChildAt(index);\n    }\n    public getColumnIndex<R extends keyof T>(name: R) {\n        return this._schema.fields.findIndex((f) => f.name === name);\n    }\n    public getChildAt<R extends DataType = any>(index: number): Column<R> | null {\n        if (index < 0 || index >= this.numChildren) { return null; }\n        let field: Field<R>, child: Column<R>;\n        const fields = (this._schema as Schema<any>).fields;\n        const columns = this._children || (this._children = []) as Column[];\n        if (child = columns[index]) { return child as Column<R>; }\n        if (field = fields[index]) {\n            const chunks = this._chunks\n                .map((chunk) => chunk.getChildAt<R>(index))\n                .filter((vec): vec is Vector<R> => vec != null);\n            if (chunks.length > 0) {\n                return (columns[index] = new Column<R>(field, chunks));\n            }\n        }\n        return null;\n    }\n\n    // @ts-ignore\n    public serialize(encoding = 'binary', stream = true) {\n        const Writer = !stream\n            ? RecordBatchFileWriter\n            : RecordBatchStreamWriter;\n        return Writer.writeAll(this).toUint8Array(true);\n    }\n    public count(): number {\n        return this._length;\n    }\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt<K>(...columnIndices);\n        return new Table(schema, this._chunks.map(({ length, data: { childData } }) => {\n            return new RecordBatch(schema, length, columnIndices.map((i) => childData[i]).filter(Boolean));\n        }));\n    }\n    public assign<R extends { [key: string]: DataType } = any>(other: Table<R>) {\n\n        const fields = this._schema.fields;\n        const [indices, oldToNew] = other.schema.fields.reduce((memo, f2, newIdx) => {\n            const [indices, oldToNew] = memo;\n            const i = fields.findIndex((f) => f.name === f2.name);\n            ~i ? (oldToNew[i] = newIdx) : indices.push(newIdx);\n            return memo;\n        }, [[], []] as number[][]);\n\n        const schema = this._schema.assign(other.schema);\n        const columns = [\n            ...fields.map((_f, i, _fs, j = oldToNew[i]) =>\n                (j === undefined ? this.getColumnAt(i) : other.getColumnAt(j))!),\n            ...indices.map((i) => other.getColumnAt(i)!)\n        ].filter(Boolean) as Column<(T & R)[keyof T | keyof R]>[];\n\n        return new Table<T & R>(...distributeVectorsIntoRecordBatches<any>(schema, columns));\n    }\n}\n\nfunction tableFromIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptions<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return Table.fromStruct(StructVector.from(input as VectorBuilderOptions<Struct<T>, TNull>));\n    }\n    return null;\n}\n\nfunction tableFromAsyncIterable<T extends { [key: string]: DataType } = any, TNull = any>(input: VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n    const { type } = input;\n    if (type instanceof Struct) {\n        return StructVector.from(input as VectorBuilderOptionsAsync<Struct<T>, TNull>).then((vector) => Table.fromStruct(vector));\n    }\n    return null;\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from './data';\nimport { Table } from './table';\nimport { Vector } from './vector';\nimport { Visitor } from './visitor';\nimport { Schema, Field } from './schema';\nimport { isIterable } from './util/compat';\nimport { Chunked } from './vector/chunked';\nimport { selectFieldArgs } from './util/args';\nimport { DataType, Struct, Dictionary } from './type';\nimport { ensureSameLengthData } from './util/recordbatch';\nimport { Clonable, Sliceable, Applicative } from './vector';\nimport { StructVector, VectorBuilderOptions, VectorBuilderOptionsAsync } from './vector/index';\n\ntype VectorMap = { [key: string]: Vector };\ntype Fields<T extends { [key: string]: DataType }> = (keyof T)[] | Field<T[keyof T]>[];\ntype ChildData<T extends { [key: string]: DataType }> = (Data<T[keyof T]> | Vector<T[keyof T]>)[];\n\nexport interface RecordBatch<T extends { [key: string]: DataType } = any> {\n    concat(...others: Vector<Struct<T>>[]): Table<T>;\n    slice(begin?: number, end?: number): RecordBatch<T>;\n    clone(data: Data<Struct<T>>, children?: Vector[]): RecordBatch<T>;\n}\n\nexport class RecordBatch<T extends { [key: string]: DataType } = any>\n    extends StructVector<T>\n    implements Clonable<RecordBatch<T>>,\n               Sliceable<RecordBatch<T>>,\n               Applicative<Struct<T>, Table<T>> {\n\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull>): Table<T>;\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptionsAsync<Struct<T>, TNull>): Promise<Table<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any, TNull = any>(options: VectorBuilderOptions<Struct<T>, TNull> | VectorBuilderOptionsAsync<Struct<T>, TNull>) {\n        if (isIterable<(Struct<T>)['TValue'] | TNull>(options['values'])) {\n            return Table.from(options as VectorBuilderOptions<Struct<T>, TNull>);\n        }\n        return Table.from(options as VectorBuilderOptionsAsync<Struct<T>, TNull>);\n    }\n\n    public static new<T extends VectorMap = any>(children: T): RecordBatch<{ [P in keyof T]: T[P]['type'] }>;\n    public static new<T extends { [key: string]: DataType } = any>(children: ChildData<T>, fields?: Fields<T>): RecordBatch<T>;\n    /** @nocollapse */\n    public static new<T extends { [key: string]: DataType } = any>(...args: any[]) {\n        const [fs, xs] = selectFieldArgs<T>(args);\n        const vs = xs.filter((x): x is Vector<T[keyof T]> => x instanceof Vector);\n        return new RecordBatch(...ensureSameLengthData(new Schema<T>(fs), vs.map((x) => x.data)));\n    }\n\n    protected _schema: Schema;\n    protected _dictionaries?: Map<number, Vector>;\n\n    constructor(schema: Schema<T>, length: number, children: (Data | Vector)[]);\n    constructor(schema: Schema<T>, data: Data<Struct<T>>, children?: Vector[]);\n    constructor(...args: any[]) {\n        let data: Data<Struct<T>>;\n        let schema = args[0] as Schema<T>;\n        let children: Vector[] | undefined;\n        if (args[1] instanceof Data) {\n            [, data, children] = (args as [any, Data<Struct<T>>, Vector<T[keyof T]>[]?]);\n        } else {\n            const fields = schema.fields as Field<T[keyof T]>[];\n            const [, length, childData] = args as [any, number, Data<T[keyof T]>[]];\n            data = Data.Struct(new Struct<T>(fields), 0, length, 0, null, childData);\n        }\n        super(data, children);\n        this._schema = schema;\n    }\n\n    public clone(data: Data<Struct<T>>, children = this._children) {\n        return new RecordBatch<T>(this._schema, data, children);\n    }\n\n    public concat(...others: Vector<Struct<T>>[]): Table<T> {\n        const schema = this._schema, chunks = Chunked.flatten(this, ...others);\n        return new Table(schema, chunks.map(({ data }) => new RecordBatch(schema, data)));\n    }\n\n    public get schema() { return this._schema; }\n    public get numCols() { return this._schema.fields.length; }\n    public get dictionaries() {\n        return this._dictionaries || (this._dictionaries = DictionaryCollector.collect(this));\n    }\n\n    public select<K extends keyof T = any>(...columnNames: K[]) {\n        const nameToIndex = this._schema.fields.reduce((m, f, i) => m.set(f.name as K, i), new Map<K, number>());\n        return this.selectAt(...columnNames.map((columnName) => nameToIndex.get(columnName)!).filter((x) => x > -1));\n    }\n    public selectAt<K extends T[keyof T] = any>(...columnIndices: number[]) {\n        const schema = this._schema.selectAt(...columnIndices);\n        const childData = columnIndices.map((i) => this.data.childData[i]).filter(Boolean);\n        return new RecordBatch<{ [key: string]: K }>(schema, this.length, childData);\n    }\n}\n\n/**\n * An internal class used by the `RecordBatchReader` and `RecordBatchWriter`\n * implementations to differentiate between a stream with valid zero-length\n * RecordBatches, and a stream with a Schema message, but no RecordBatches.\n * @see https://github.com/apache/arrow/pull/4373\n * @ignore\n * @private\n */\n/* tslint:disable:class-name */\nexport class _InternalEmptyPlaceholderRecordBatch<T extends { [key: string]: DataType } = any> extends RecordBatch<T> {\n    constructor(schema: Schema<T>) {\n        super(schema, 0, schema.fields.map((f) => Data.new(f.type, 0, 0, 0)));\n    }\n}\n\n/** @ignore */\nclass DictionaryCollector extends Visitor {\n    public dictionaries = new Map<number, Vector>();\n    public static collect<T extends RecordBatch>(batch: T) {\n        return new DictionaryCollector().visit(\n            batch.data, new Struct(batch.schema.fields)\n        ).dictionaries;\n    }\n    public visit(data: Data, type: DataType) {\n        if (DataType.isDictionary(type)) {\n            return this.visitDictionary(data, type);\n        } else {\n            data.childData.forEach((child, i) =>\n                this.visit(child, type.children[i].type));\n        }\n        return this;\n    }\n    public visitDictionary(data: Data, type: Dictionary) {\n        const dictionary = data.dictionary;\n        if (dictionary && dictionary.length > 0) {\n            this.dictionaries.set(type.id, dictionary);\n        }\n        return this;\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { DataType } from '../type';\nimport { MessageHeader } from '../enum';\nimport { Footer } from './metadata/file';\nimport { Schema, Field } from '../schema';\nimport streamAdapters from '../io/adapters';\nimport { Message } from './metadata/message';\nimport * as metadata from './metadata/message';\nimport { ArrayBufferViewInput } from '../util/buffer';\nimport { ByteStream, AsyncByteStream } from '../io/stream';\nimport { RandomAccessFile, AsyncRandomAccessFile } from '../io/file';\nimport { VectorLoader, JSONVectorLoader } from '../visitor/vectorloader';\nimport { RecordBatch, _InternalEmptyPlaceholderRecordBatch } from '../recordbatch';\nimport {\n    FileHandle,\n    ArrowJSONLike,\n    ITERATOR_DONE,\n    ReadableInterop,\n} from '../io/interfaces';\nimport {\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    checkForMagicArrowString, magicLength, magicAndPadding, magicX2AndPadding\n} from './message';\nimport {\n    isPromise,\n    isIterable, isAsyncIterable,\n    isIteratorResult, isArrowJSON,\n    isFileHandle, isFetchResponse,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */ export type FromArg0 = ArrowJSONLike;\n/** @ignore */ export type FromArg1 = PromiseLike<ArrowJSONLike>;\n/** @ignore */ export type FromArg2 = Iterable<ArrayBufferViewInput> | ArrayBufferViewInput;\n/** @ignore */ export type FromArg3 = PromiseLike<Iterable<ArrayBufferViewInput> | ArrayBufferViewInput>;\n/** @ignore */ export type FromArg4 = Response | NodeJS.ReadableStream | ReadableStream<ArrayBufferViewInput> | AsyncIterable<ArrayBufferViewInput>;\n/** @ignore */ export type FromArg5 = FileHandle | PromiseLike<FileHandle> | PromiseLike<FromArg4>;\n/** @ignore */ export type FromArgs = FromArg0 | FromArg1 | FromArg2 | FromArg3 | FromArg4 | FromArg5;\n\n/** @ignore */ type OpenOptions = { autoDestroy?: boolean; };\n/** @ignore */ type RecordBatchReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n/** @ignore */ type AsyncRecordBatchReaders<T extends { [key: string]: DataType } = any> = AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>;\n/** @ignore */ type RecordBatchFileReaders<T extends { [key: string]: DataType } = any> = RecordBatchFileReader<T> | AsyncRecordBatchFileReader<T>;\n/** @ignore */ type RecordBatchStreamReaders<T extends { [key: string]: DataType } = any> = RecordBatchStreamReader<T> | AsyncRecordBatchStreamReader<T>;\n\nexport class RecordBatchReader<T extends { [key: string]: DataType } = any> extends ReadableInterop<RecordBatch<T>> {\n\n    protected _impl: RecordBatchReaderImpls<T>;\n    protected constructor(impl: RecordBatchReaderImpls<T>) {\n        super();\n        this._impl = impl;\n    }\n\n    public get closed() { return this._impl.closed; }\n    public get schema() { return this._impl.schema; }\n    public get autoDestroy() { return this._impl.autoDestroy; }\n    public get dictionaries() { return this._impl.dictionaries; }\n    public get numDictionaries() { return this._impl.numDictionaries; }\n    public get numRecordBatches() { return this._impl.numRecordBatches; }\n    public get footer() { return this._impl.isFile() ? this._impl.footer : null; }\n\n    public isSync(): this is RecordBatchReaders<T> { return this._impl.isSync(); }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return this._impl.isAsync(); }\n    public isFile(): this is RecordBatchFileReaders<T> { return this._impl.isFile(); }\n    public isStream(): this is RecordBatchStreamReaders<T> { return this._impl.isStream(); }\n\n    public next() {\n        return this._impl.next();\n    }\n    public throw(value?: any) {\n        return this._impl.throw(value);\n    }\n    public return(value?: any) {\n        return this._impl.return(value);\n    }\n    public cancel() {\n        return this._impl.cancel();\n    }\n    public reset(schema?: Schema<T> | null): this {\n        this._impl.reset(schema);\n        this._DOMStream = undefined;\n        this._nodeStream = undefined;\n        return this;\n    }\n    public open(options?: OpenOptions) {\n        const opening = this._impl.open(options);\n        return isPromise(opening) ? opening.then(() => this) : this;\n    }\n    public readRecordBatch(index: number): RecordBatch<T> | null | Promise<RecordBatch<T> | null> {\n        return this._impl.isFile() ? this._impl.readRecordBatch(index) : null;\n    }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return (<IterableIterator<RecordBatch<T>>> this._impl)[Symbol.iterator]();\n    }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return (<AsyncIterableIterator<RecordBatch<T>>> this._impl)[Symbol.asyncIterator]();\n    }\n    public toDOMStream() {\n        return streamAdapters.toDOMStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>));\n    }\n    public toNodeStream() {\n        return streamAdapters.toNodeStream<RecordBatch<T>>(\n            (this.isSync()\n                ? { [Symbol.iterator]: () => this } as Iterable<RecordBatch<T>>\n                : { [Symbol.asyncIterator]: () => this } as AsyncIterable<RecordBatch<T>>),\n            { objectMode: true });\n    }\n\n    /** @nocollapse */\n    // @ts-ignore\n    public static throughNode(options?: import('stream').DuplexOptions & { autoDestroy: boolean }): import('stream').Duplex {\n        throw new Error(`\"throughNode\" not available in this environment`);\n    }\n    /** @nocollapse */\n    public static throughDOM<T extends { [key: string]: DataType }>(\n        // @ts-ignore\n        writableStrategy?: ByteLengthQueuingStrategy,\n        // @ts-ignore\n        readableStrategy?: { autoDestroy: boolean }\n    ): { writable: WritableStream<Uint8Array>, readable: ReadableStream<RecordBatch<T>> } {\n        throw new Error(`\"throughDOM\" not available in this environment`);\n    }\n\n    public static from<T extends RecordBatchReader>(source: T): T;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg0): RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg1): Promise<RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg2): RecordBatchFileReader<T> | RecordBatchStreamReader<T>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg3): Promise<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg4): Promise<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static from<T extends { [key: string]: DataType } = any>(source: FromArg5): Promise<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static from<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source;\n        } else if (isArrowJSON(source)) {\n            return fromArrowJSON<T>(source);\n        } else if (isFileHandle(source)) {\n            return fromFileHandle<T>(source);\n        } else if (isPromise<any>(source)) {\n            return (async () => await RecordBatchReader.from<any>(await source))();\n        } else if (isFetchResponse(source) || isReadableDOMStream(source) || isReadableNodeStream(source) || isAsyncIterable(source)) {\n            return fromAsyncByteStream<T>(new AsyncByteStream(source));\n        }\n        return fromByteStream<T>(new ByteStream(source));\n    }\n\n    public static readAll<T extends RecordBatchReader>(source: T): T extends RecordBatchReaders ? IterableIterator<T> : AsyncIterableIterator<T>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg0): IterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg1): AsyncIterableIterator<RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg2): IterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg3): AsyncIterableIterator<RecordBatchFileReader<T> | RecordBatchStreamReader<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg4): AsyncIterableIterator<RecordBatchFileReader<T> | AsyncRecordBatchReaders<T>>;\n    public static readAll<T extends { [key: string]: DataType } = any>(source: FromArg5): AsyncIterableIterator<AsyncRecordBatchFileReader<T> | AsyncRecordBatchStreamReader<T>>;\n    /** @nocollapse */\n    public static readAll<T extends { [key: string]: DataType } = any>(source: any) {\n        if (source instanceof RecordBatchReader) {\n            return source.isSync() ? readAllSync(source) : readAllAsync(source as AsyncRecordBatchReaders<T>);\n        } else if (isArrowJSON(source) || ArrayBuffer.isView(source) || isIterable<ArrayBufferViewInput>(source) || isIteratorResult(source)) {\n            return readAllSync<T>(source) as IterableIterator<RecordBatchReaders<T>>;\n        }\n        return readAllAsync<T>(source) as AsyncIterableIterator<RecordBatchReaders<T> | AsyncRecordBatchReaders<T>>;\n    }\n}\n\n//\n// Since TS is a structural type system, we define the following subclass stubs\n// so that concrete types exist to associate with with the interfaces below.\n//\n// The implementation for each RecordBatchReader is hidden away in the set of\n// `RecordBatchReaderImpl` classes in the second half of this file. This allows\n// us to export a single RecordBatchReader class, and swap out the impl based\n// on the io primitives or underlying arrow (JSON, file, or stream) at runtime.\n//\n// Async/await makes our job a bit harder, since it forces everything to be\n// either fully sync or fully async. This is why the logic for the reader impls\n// has been duplicated into both sync and async variants. Since the RBR\n// delegates to its impl, an RBR with an AsyncRecordBatchFileReaderImpl for\n// example will return async/await-friendly Promises, but one with a (sync)\n// RecordBatchStreamReaderImpl will always return values. Nothing should be\n// different about their logic, aside from the async handling. This is also why\n// this code looks highly structured, as it should be nearly identical and easy\n// to follow.\n//\n\n/** @ignore */\nexport class RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: RecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator]() { return (this._impl as IterableIterator<RecordBatch<T>>)[Symbol.iterator](); }\n    public async *[Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> { yield* this[Symbol.iterator](); }\n}\n/** @ignore */\nexport class AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    constructor(protected _impl: AsyncRecordBatchStreamReaderImpl<T>) { super (_impl); }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> { throw new Error(`AsyncRecordBatchStreamReader is not Iterable`); }\n    public [Symbol.asyncIterator]() { return (this._impl as AsyncIterableIterator<RecordBatch<T>>)[Symbol.asyncIterator](); }\n}\n/** @ignore */\nexport class RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    constructor(protected _impl: RecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n/** @ignore */\nexport class AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    constructor(protected _impl: AsyncRecordBatchFileReaderImpl<T>) { super (_impl); }\n}\n\n//\n// Now override the return types for each sync/async RecordBatchReader variant\n//\n\n/** @ignore */\nexport interface RecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): this;\n    cancel(): void;\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchStreamReader<T extends { [key: string]: DataType } = any> extends RecordBatchReader<T> {\n    open(options?: OpenOptions | undefined): Promise<this>;\n    cancel(): Promise<void>;\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n}\n\n/** @ignore */\nexport interface RecordBatchFileReader<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\nexport interface AsyncRecordBatchFileReader<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReader<T> {\n    footer: Footer;\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\ntype RecordBatchReaderImpls<T extends { [key: string]: DataType } = any> =\n     RecordBatchJSONReaderImpl<T> |\n     RecordBatchFileReaderImpl<T> |\n     RecordBatchStreamReaderImpl<T> |\n     AsyncRecordBatchFileReaderImpl<T> |\n     AsyncRecordBatchStreamReaderImpl<T>;\n\n/** @ignore */\ninterface RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> {\n\n    closed: boolean;\n    schema: Schema<T>;\n    autoDestroy: boolean;\n    dictionaries: Map<number, Vector>;\n\n    isFile(): this is RecordBatchFileReaders<T>;\n    isStream(): this is RecordBatchStreamReaders<T>;\n    isSync(): this is RecordBatchReaders<T>;\n    isAsync(): this is AsyncRecordBatchReaders<T>;\n\n    reset(schema?: Schema<T> | null): this;\n}\n\n/** @ignore */\ninterface RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): this;\n    cancel(): void;\n\n    throw(value?: any): IteratorResult<any>;\n    return(value?: any): IteratorResult<any>;\n    next(value?: any): IteratorResult<RecordBatch<T>>;\n\n    [Symbol.iterator](): IterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> {\n\n    open(options?: OpenOptions): Promise<this>;\n    cancel(): Promise<void>;\n\n    throw(value?: any): Promise<IteratorResult<any>>;\n    return(value?: any): Promise<IteratorResult<any>>;\n    next(value?: any): Promise<IteratorResult<RecordBatch<T>>>;\n\n    [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>>;\n}\n\n/** @ignore */\ninterface RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): RecordBatch<T> | null;\n}\n\n/** @ignore */\ninterface AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T> {\n    readRecordBatch(index: number): Promise<RecordBatch<T> | null>;\n}\n\n/** @ignore */\nabstract class RecordBatchReaderImpl<T extends { [key: string]: DataType } = any> implements RecordBatchReaderImpl<T> {\n\n    // @ts-ignore\n    public schema: Schema;\n    public closed = false;\n    public autoDestroy = true;\n    public dictionaries: Map<number, Vector>;\n\n    protected _dictionaryIndex = 0;\n    protected _recordBatchIndex = 0;\n    public get numDictionaries() { return this._dictionaryIndex; }\n    public get numRecordBatches() { return this._recordBatchIndex; }\n\n    constructor(dictionaries = new Map<number, Vector>()) {\n        this.dictionaries = dictionaries;\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return false; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return false; }\n    public isFile(): this is RecordBatchFileReaders<T> { return false; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return false; }\n\n    public reset(schema?: Schema<T> | null) {\n        this._dictionaryIndex = 0;\n        this._recordBatchIndex = 0;\n        this.schema = <any> schema;\n        this.dictionaries = new Map();\n        return this;\n    }\n\n    protected _loadRecordBatch(header: metadata.RecordBatch, body: any) {\n        return new RecordBatch<T>(this.schema, header.length, this._loadVectors(header, body, this.schema.fields));\n    }\n    protected _loadDictionaryBatch(header: metadata.DictionaryBatch, body: any) {\n        const { id, isDelta, data } = header;\n        const { dictionaries, schema } = this;\n        const dictionary = dictionaries.get(id);\n        if (isDelta || !dictionary) {\n            const type = schema.dictionaries.get(id)!;\n            return (dictionary && isDelta ? dictionary.concat(\n                Vector.new(this._loadVectors(data, body, [type])[0])) :\n                Vector.new(this._loadVectors(data, body, [type])[0])) as Vector;\n        }\n        return dictionary;\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new VectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n/** @ignore */\nclass RecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements IterableIterator<RecordBatch<T>> {\n\n    protected _reader: MessageReader;\n    protected _handle: ByteStream | ArrowJSONLike;\n\n    constructor(source: ByteStream | ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = !isArrowJSON(source)\n            ? new MessageReader(this._handle = source)\n            : new JSONMessageReader(this._handle = source);\n    }\n\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.iterator](): IterableIterator<RecordBatch<T>> {\n        return this as IterableIterator<RecordBatch<T>>;\n    }\n    public cancel() {\n        if (!this.closed && (this.closed = true)) {\n            this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = this._reader.readSchema()!))) {\n                this.cancel();\n            }\n        }\n        return this;\n    }\n    public throw(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public return(value?: any): IteratorResult<any> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public next(): IteratorResult<RecordBatch<T>> {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return this.return();\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchStreamReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchReaderImpl<T> implements AsyncIterableIterator<RecordBatch<T>> {\n\n    protected _handle: AsyncByteStream;\n    protected _reader: AsyncMessageReader;\n\n    constructor(source: AsyncByteStream, dictionaries?: Map<number, Vector>) {\n        super(dictionaries);\n        this._reader = new AsyncMessageReader(this._handle = source);\n    }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public isStream(): this is RecordBatchStreamReaders<T> { return true; }\n    public [Symbol.asyncIterator](): AsyncIterableIterator<RecordBatch<T>> {\n        return this as AsyncIterableIterator<RecordBatch<T>>;\n    }\n    public async cancel() {\n        if (!this.closed && (this.closed = true)) {\n            await this.reset()._reader.return();\n            this._reader = <any> null;\n            this.dictionaries = <any> null;\n        }\n    }\n    public async open(options?: OpenOptions) {\n        if (!this.closed) {\n            this.autoDestroy = shouldAutoDestroy(this, options);\n            if (!(this.schema || (this.schema = (await this._reader.readSchema())!))) {\n                await this.cancel();\n            }\n        }\n        return this;\n    }\n    public async throw(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.throw(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async return(value?: any): Promise<IteratorResult<any>> {\n        if (!this.closed && this.autoDestroy && (this.closed = true)) {\n            return await this.reset()._reader.return(value);\n        }\n        return ITERATOR_DONE;\n    }\n    public async next() {\n        if (this.closed) { return ITERATOR_DONE; }\n        let message: Message | null, { _reader: reader } = this;\n        while (message = await this._readNextMessageAndValidate()) {\n            if (message.isSchema()) {\n                await this.reset(message.header());\n            } else if (message.isRecordBatch()) {\n                this._recordBatchIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return { done: false, value: recordBatch };\n            } else if (message.isDictionaryBatch()) {\n                this._dictionaryIndex++;\n                const header = message.header();\n                const buffer = await reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n        if (this.schema && this._recordBatchIndex === 0) {\n            this._recordBatchIndex++;\n            return { done: false, value: new _InternalEmptyPlaceholderRecordBatch<T>(this.schema) };\n        }\n        return await this.return();\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null) {\n        return await this._reader.readMessage<T>(type);\n    }\n}\n\n/** @ignore */\nclass RecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n\n    // @ts-ignore\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: RandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: RandomAccessFile | ArrayBufferViewInput, dictionaries?: Map<number, Vector>) {\n        super(source instanceof RandomAccessFile ? source : new RandomAccessFile(source), dictionaries);\n    }\n    public isSync(): this is RecordBatchReaders<T> { return true; }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return super.open(options);\n    }\n    public readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && this._handle.seek(block.offset)) {\n            const message = this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected _readFooter() {\n        const { _handle } = this;\n        const offset = _handle.size - magicAndPadding;\n        const length = _handle.readInt32(offset);\n        const buffer = _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Message<T> | null {\n        if (!this._footer) { this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer && this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && this._handle.seek(block.offset)) {\n                return this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass AsyncRecordBatchFileReaderImpl<T extends { [key: string]: DataType } = any> extends AsyncRecordBatchStreamReaderImpl<T>\n    implements AsyncRecordBatchFileReaderImpl<T> {\n\n    protected _footer?: Footer;\n    // @ts-ignore\n    protected _handle: AsyncRandomAccessFile;\n    public get footer() { return this._footer!; }\n    public get numDictionaries() { return this._footer ? this._footer.numDictionaries : 0; }\n    public get numRecordBatches() { return this._footer ? this._footer.numRecordBatches : 0; }\n\n    constructor(source: FileHandle, byteLength?: number, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, dictionaries?: Map<number, Vector>);\n    constructor(source: FileHandle | AsyncRandomAccessFile, ...rest: any[]) {\n        const byteLength = typeof rest[0] !== 'number' ? <number> rest.shift() : undefined;\n        const dictionaries = rest[0] instanceof Map ? <Map<number, Vector>> rest.shift() : undefined;\n        super(source instanceof AsyncRandomAccessFile ? source : new AsyncRandomAccessFile(source, byteLength), dictionaries);\n    }\n    public isFile(): this is RecordBatchFileReaders<T> { return true; }\n    public isAsync(): this is AsyncRecordBatchReaders<T> { return true; }\n    public async open(options?: OpenOptions) {\n        if (!this.closed && !this._footer) {\n            this.schema = (this._footer = await this._readFooter()).schema;\n            for (const block of this._footer.dictionaryBatches()) {\n                block && await this._readDictionaryBatch(this._dictionaryIndex++);\n            }\n        }\n        return await super.open(options);\n    }\n    public async readRecordBatch(index: number) {\n        if (this.closed) { return null; }\n        if (!this._footer) { await this.open(); }\n        const block = this._footer && this._footer.getRecordBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.RecordBatch);\n            if (message && message.isRecordBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const recordBatch = this._loadRecordBatch(header, buffer);\n                return recordBatch;\n            }\n        }\n        return null;\n    }\n    protected async _readDictionaryBatch(index: number) {\n        const block = this._footer && this._footer.getDictionaryBatch(index);\n        if (block && (await this._handle.seek(block.offset))) {\n            const message = await this._reader.readMessage(MessageHeader.DictionaryBatch);\n            if (message && message.isDictionaryBatch()) {\n                const header = message.header();\n                const buffer = await this._reader.readMessageBody(message.bodyLength);\n                const vector = this._loadDictionaryBatch(header, buffer);\n                this.dictionaries.set(header.id, vector);\n            }\n        }\n    }\n    protected async _readFooter() {\n        const { _handle } = this;\n        _handle._pending && await _handle._pending;\n        const offset = _handle.size - magicAndPadding;\n        const length = await _handle.readInt32(offset);\n        const buffer = await _handle.readAt(offset - length, length);\n        return Footer.decode(buffer);\n    }\n    protected async _readNextMessageAndValidate<T extends MessageHeader>(type?: T | null): Promise<Message<T> | null> {\n        if (!this._footer) { await this.open(); }\n        if (this._footer && this._recordBatchIndex < this.numRecordBatches) {\n            const block = this._footer.getRecordBatch(this._recordBatchIndex);\n            if (block && await this._handle.seek(block.offset)) {\n                return await this._reader.readMessage(type);\n            }\n        }\n        return null;\n    }\n}\n\n/** @ignore */\nclass RecordBatchJSONReaderImpl<T extends { [key: string]: DataType } = any> extends RecordBatchStreamReaderImpl<T> {\n    constructor(source: ArrowJSONLike, dictionaries?: Map<number, Vector>) {\n        super(source, dictionaries);\n    }\n    protected _loadVectors(header: metadata.RecordBatch, body: any, types: (Field | DataType)[]) {\n        return new JSONVectorLoader(body, header.nodes, header.buffers, this.dictionaries).visitMany(types);\n    }\n}\n\n//\n// Define some helper functions and static implementations down here. There's\n// a bit of branching in the static methods that can lead to the same routines\n// being executed, so we've broken those out here for readability.\n//\n\n/** @ignore */\nfunction shouldAutoDestroy(self: { autoDestroy: boolean }, options?: OpenOptions) {\n    return options && (typeof options['autoDestroy'] === 'boolean') ? options['autoDestroy'] : self['autoDestroy'];\n}\n\n/** @ignore */\nfunction* readAllSync<T extends { [key: string]: DataType } = any>(source: RecordBatchReaders<T> | FromArg0 | FromArg2) {\n    const reader = RecordBatchReader.from<T>(<any> source) as RecordBatchReaders<T>;\n    try {\n        if (!reader.open({ autoDestroy: false }).closed) {\n            do { yield reader; } while (!(reader.reset().open()).closed);\n        }\n    } finally { reader.cancel(); }\n}\n\n/** @ignore */\nasync function* readAllAsync<T extends { [key: string]: DataType } = any>(source: AsyncRecordBatchReaders<T> | FromArg1 | FromArg3 | FromArg4 | FromArg5) {\n    const reader = await RecordBatchReader.from<T>(<any> source) as RecordBatchReader<T>;\n    try {\n        if (!(await reader.open({ autoDestroy: false })).closed) {\n            do { yield reader; } while (!(await reader.reset().open()).closed);\n        }\n    } finally { await reader.cancel(); }\n}\n\n/** @ignore */\nfunction fromArrowJSON<T extends { [key: string]: DataType }>(source: ArrowJSONLike) {\n    return new RecordBatchStreamReader(new RecordBatchJSONReaderImpl<T>(source));\n}\n\n/** @ignore */\nfunction fromByteStream<T extends { [key: string]: DataType }>(source: ByteStream) {\n    const bytes = source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(source.read()))\n        : new RecordBatchStreamReader(new RecordBatchStreamReaderImpl<T>(function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromAsyncByteStream<T extends { [key: string]: DataType }>(source: AsyncByteStream) {\n    const bytes = await source.peek((magicLength + 7) & ~7);\n    return bytes && bytes.byteLength >= 4 ? !checkForMagicArrowString(bytes)\n        ? new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(source))\n        : new RecordBatchFileReader(new RecordBatchFileReaderImpl<T>(await source.read()))\n        : new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(async function*(): any {}()));\n}\n\n/** @ignore */\nasync function fromFileHandle<T extends { [key: string]: DataType }>(source: FileHandle) {\n    const { size } = await source.stat();\n    const file = new AsyncRandomAccessFile(source, size);\n    if (size >= magicX2AndPadding) {\n        if (checkForMagicArrowString(await file.readAt(0, (magicLength + 7) & ~7))) {\n            return new AsyncRecordBatchFileReader(new AsyncRecordBatchFileReaderImpl<T>(file));\n        }\n    }\n    return new AsyncRecordBatchStreamReader(new AsyncRecordBatchStreamReaderImpl<T>(file));\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { Vector } from '../../vector';\nimport { VectorType as V } from '../../interfaces';\nimport { Builder, BuilderOptions } from '../../builder/index';\n\n/** @ignore */\nexport interface BuilderTransformOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n    queueingStrategy?: 'bytes' | 'count';\n    dictionaryHashFunction?: (value: any) => string | number;\n    readableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    writableStrategy?: { highWaterMark?: number, size?: any, type?: 'bytes'; };\n    valueToChildTypeId?: (builder: Builder<T, TNull>, value: any, offset: number) => number;\n}\n\n/** @ignore */\nexport function builderThroughDOMStream<T extends DataType = any, TNull = any>(options: BuilderTransformOptions<T, TNull>) {\n    return new BuilderTransform(options);\n}\n\n/** @ignore */\nexport class BuilderTransform<T extends DataType = any, TNull = any> {\n\n    public readable: ReadableStream<V<T>>;\n    public writable: WritableStream<T['TValue'] | TNull>;\n    public _controller: ReadableStreamDefaultController<V<T>> | null;\n\n    private _numChunks = 0;\n    private _finished = false;\n    private _bufferedSize = 0;\n    private _builder: Builder<T, TNull>;\n    private _getSize: (builder: Builder<T, TNull>) => number;\n\n    constructor(options: BuilderTransformOptions<T, TNull>) {\n\n        // Access properties by string indexers to defeat closure compiler\n\n        const {\n            ['readableStrategy']: readableStrategy,\n            ['writableStrategy']: writableStrategy,\n            ['queueingStrategy']: queueingStrategy = 'count',\n            ...builderOptions\n        } = options;\n\n        this._controller = null;\n        this._builder = Builder.new<T, TNull>(builderOptions);\n        this._getSize = queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength;\n\n        const { ['highWaterMark']: readableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...readableStrategy };\n        const { ['highWaterMark']: writableHighWaterMark = queueingStrategy === 'bytes' ? 2 ** 14 : 1000 } = { ...writableStrategy };\n\n        this['readable'] = new ReadableStream<V<T>>({\n            ['cancel']: ()  => { this._builder.clear(); },\n            ['pull']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n            ['start']: (c) => { this._maybeFlush(this._builder, this._controller = c); },\n        }, {\n            'highWaterMark': readableHighWaterMark,\n            'size': queueingStrategy !== 'bytes' ? chunkLength : chunkByteLength,\n        });\n\n        this['writable'] = new WritableStream({\n            ['abort']: () => { this._builder.clear(); },\n            ['write']: () => { this._maybeFlush(this._builder, this._controller); },\n            ['close']: () => { this._maybeFlush(this._builder.finish(), this._controller); },\n        }, {\n            'highWaterMark': writableHighWaterMark,\n            'size': (value: T['TValue'] | TNull) => this._writeValueAndReturnChunkSize(value),\n        });\n    }\n\n    private _writeValueAndReturnChunkSize(value: T['TValue'] | TNull) {\n        const bufferedSize = this._bufferedSize;\n        this._bufferedSize = this._getSize(this._builder.append(value));\n        return this._bufferedSize - bufferedSize;\n    }\n\n    private _maybeFlush(builder: Builder<T, TNull>, controller: ReadableStreamDefaultController<V<T>> | null) {\n        if (controller === null) { return; }\n        if (this._bufferedSize >= controller.desiredSize!) {\n            ++this._numChunks && this._enqueue(controller, builder.toVector());\n        }\n        if (builder.finished) {\n            if (builder.length > 0 || this._numChunks === 0) {\n                ++this._numChunks && this._enqueue(controller, builder.toVector());\n            }\n            if (!this._finished && (this._finished = true)) {\n                this._enqueue(controller, null);\n            }\n        }\n    }\n\n    private _enqueue(controller: ReadableStreamDefaultController<V<T>>, chunk: V<T> | null) {\n        this._bufferedSize = 0;\n        this._controller = null;\n        chunk === null ? controller.close() : controller.enqueue(chunk);\n    }\n}\n\n/** @ignore */ const chunkLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.length;\n/** @ignore */ const chunkByteLength = <T extends DataType = any>(chunk: Vector<T> | Builder<T>) => chunk.byteLength;\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { RecordBatch } from '../recordbatch';\nimport { DictionaryVector } from '../vector/dictionary';\n\n/** @ignore */\nexport type ValueFunc<T> = (idx: number, cols: RecordBatch) => T | null;\n/** @ignore */\nexport type PredicateFunc = (idx: number, cols: RecordBatch) => boolean;\n\n/** @ignore */\nexport abstract class Value<T> {\n    eq(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new Equals(this, other);\n    }\n    le(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new LTeq(this, other);\n    }\n    ge(other: Value<T> | T): Predicate {\n        if (!(other instanceof Value)) { other = new Literal(other); }\n        return new GTeq(this, other);\n    }\n    lt(other: Value<T> | T): Predicate {\n        return new Not(this.ge(other));\n    }\n    gt(other: Value<T> | T): Predicate {\n        return new Not(this.le(other));\n    }\n    ne(other: Value<T> | T): Predicate {\n        return new Not(this.eq(other));\n    }\n}\n\n/** @ignore */\nexport class Literal<T= any> extends Value<T> {\n    constructor(public v: T) { super(); }\n}\n\n/** @ignore */\nexport class Col<T= any> extends Value<T> {\n    // @ts-ignore\n    public vector: Vector;\n    // @ts-ignore\n    public colidx: number;\n\n    constructor(public name: string) { super(); }\n    bind(batch: RecordBatch): (idx: number, batch?: RecordBatch) => any {\n        if (!this.colidx) {\n            // Assume column index doesn't change between calls to bind\n            //this.colidx = cols.findIndex(v => v.name.indexOf(this.name) != -1);\n            this.colidx = -1;\n            const fields = batch.schema.fields;\n            for (let idx = -1; ++idx < fields.length;) {\n                if (fields[idx].name === this.name) {\n                    this.colidx = idx;\n                    break;\n                }\n            }\n            if (this.colidx < 0) { throw new Error(`Failed to bind Col \"${this.name}\"`); }\n        }\n\n        const vec = this.vector = batch.getChildAt(this.colidx)!;\n        return (idx: number) => vec.get(idx);\n    }\n}\n\n/** @ignore */\nexport abstract class Predicate {\n    abstract bind(batch: RecordBatch): PredicateFunc;\n    and(...expr: Predicate[]): And { return new And(this, ...expr); }\n    or(...expr: Predicate[]): Or { return new Or(this, ...expr); }\n    not(): Predicate { return new Not(this); }\n}\n\n/** @ignore */\nexport abstract class ComparisonPredicate<T= any> extends Predicate {\n    constructor(public readonly left: Value<T>, public readonly right: Value<T>) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        if (this.left instanceof Literal) {\n            if (this.right instanceof Literal) {\n                return this._bindLitLit(batch, this.left, this.right);\n            } else { // right is a Col\n\n                return this._bindLitCol(batch, this.left, this.right as Col);\n            }\n        } else { // left is a Col\n            if (this.right instanceof Literal) {\n                return this._bindColLit(batch, this.left as Col, this.right);\n            } else { // right is a Col\n                return this._bindColCol(batch, this.left as Col, this.right as Col);\n            }\n        }\n    }\n\n    protected abstract _bindLitLit(batch: RecordBatch, left: Literal, right: Literal): PredicateFunc;\n    protected abstract _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc;\n    protected abstract _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc;\n    protected abstract _bindLitCol(batch: RecordBatch, lit: Literal, col: Col): PredicateFunc;\n}\n\n/** @ignore */\nexport abstract class CombinationPredicate extends Predicate {\n    readonly children: Predicate[];\n    constructor(...children: Predicate[]) {\n        super();\n        this.children = children;\n    }\n}\n// add children to prototype so it doesn't get mangled in es2015/umd\n(<any> CombinationPredicate.prototype).children = Object.freeze([]); // freeze for safety\n\n/** @ignore */\nexport class And extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ands\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof And ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.every((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Or extends CombinationPredicate {\n    constructor(...children: Predicate[]) {\n        // Flatten any Ors\n        children = children.reduce((accum: Predicate[], p: Predicate): Predicate[] => {\n            return accum.concat(p instanceof Or ? p.children : p);\n        }, []);\n        super(...children);\n    }\n    bind(batch: RecordBatch) {\n        const bound = this.children.map((p) => p.bind(batch));\n        return (idx: number, batch: RecordBatch) => bound.some((p) => p(idx, batch));\n    }\n}\n\n/** @ignore */\nexport class Equals extends ComparisonPredicate {\n    // Helpers used to cache dictionary reverse lookups between calls to bind\n    private lastDictionary: Vector|undefined;\n    private lastKey: number|undefined;\n\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v == right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, batch: RecordBatch) => left_func(idx, batch) == right_func(idx, batch);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        if (col.vector instanceof DictionaryVector) {\n            let key: any;\n            const vector = col.vector as DictionaryVector;\n            if (vector.dictionary !== this.lastDictionary) {\n                key = vector.reverseLookup(lit.v);\n                this.lastDictionary = vector.dictionary;\n                this.lastKey = key;\n            } else {\n                key = this.lastKey;\n            }\n\n            if (key === -1) {\n                // the value doesn't exist in the dictionary - always return\n                // false\n                // TODO: special-case of PredicateFunc that encapsulates this\n                // \"always false\" behavior. That way filtering operations don't\n                // have to bother checking\n                return () => false;\n            } else {\n                return (idx: number) => {\n                    return vector.getKey(idx) === key;\n                };\n            }\n        } else {\n            return (idx: number, cols: RecordBatch) => col_func(idx, cols) == lit.v;\n        }\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        // Equals is commutative\n        return this._bindColLit(batch, col, lit);\n    }\n}\n\n/** @ignore */\nexport class LTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v <= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) <= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) <= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v <= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class GTeq extends ComparisonPredicate {\n    protected _bindLitLit(_batch: RecordBatch, left: Literal, right: Literal): PredicateFunc {\n        const rtrn: boolean = left.v >= right.v;\n        return () => rtrn;\n    }\n\n    protected _bindColCol(batch: RecordBatch, left: Col, right: Col): PredicateFunc {\n        const left_func = left.bind(batch);\n        const right_func = right.bind(batch);\n        return (idx: number, cols: RecordBatch) => left_func(idx, cols) >= right_func(idx, cols);\n    }\n\n    protected _bindColLit(batch: RecordBatch, col: Col, lit: Literal): PredicateFunc {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => col_func(idx, cols) >= lit.v;\n    }\n\n    protected _bindLitCol(batch: RecordBatch, lit: Literal, col: Col) {\n        const col_func = col.bind(batch);\n        return (idx: number, cols: RecordBatch) => lit.v >= col_func(idx, cols);\n    }\n}\n\n/** @ignore */\nexport class Not extends Predicate {\n    constructor(public readonly child: Predicate) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        const func = this.child.bind(batch);\n        return (idx: number, batch: RecordBatch) => !func(idx, batch);\n    }\n}\n\n/** @ignore */\nexport class CustomPredicate extends Predicate {\n    constructor(private next: PredicateFunc, private bind_: (batch: RecordBatch) => void) {\n        super();\n    }\n\n    bind(batch: RecordBatch) {\n        this.bind_(batch);\n        return this.next;\n    }\n}\n\nexport function lit(v: any): Value<any> { return new Literal(v); }\nexport function col(n: string): Col<any> { return new Col(n); }\nexport function and(...p: Predicate[]): And { return new And(...p); }\nexport function or(...p: Predicate[]): Or { return new Or(...p); }\nexport function custom(next: PredicateFunc, bind: (batch: RecordBatch) => void) {\n    return new CustomPredicate(next, bind);\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Table } from '../table';\nimport { Vector } from '../vector';\nimport { IntVector } from '../vector/int';\nimport { Field, Schema } from '../schema';\nimport { Predicate, Col } from './predicate';\nimport { RecordBatch } from '../recordbatch';\nimport { VectorType as V } from '../interfaces';\nimport { DataType, Int, Struct, Dictionary } from '../type';\n\n/** @ignore */\nexport type BindFunc = (batch: RecordBatch) => void;\n/** @ignore */\nexport type NextFunc = (idx: number, batch: RecordBatch) => void;\n\nTable.prototype.countBy = function(this: Table, name: Col | string) { return new DataFrame(this.chunks).countBy(name); };\nTable.prototype.scan = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scan(next, bind); };\nTable.prototype.scanReverse = function(this: Table, next: NextFunc, bind?: BindFunc) { return new DataFrame(this.chunks).scanReverse(next, bind); };\nTable.prototype.filter = function(this: Table, predicate: Predicate): FilteredDataFrame { return new DataFrame(this.chunks).filter(predicate); };\n\nexport class DataFrame<T extends { [key: string]: DataType } = any> extends Table<T> {\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(this.chunks, predicate);\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                next(index, batch);\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this.chunks, numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            if (bind) { bind(batch); }\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                next(index, batch);\n            }\n        }\n    }\n    public countBy(name: Col | string) {\n        const batches = this.chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n\n/** @ignore */\nexport class CountByResult<T extends DataType = any, TCount extends Int = Int> extends Table<{ values: T,  counts: TCount }> {\n    constructor(values: Vector<T>, counts: V<TCount>) {\n        type R = { values: T, counts: TCount };\n        const schema = new Schema<R>([\n            new Field('values', values.type),\n            new Field('counts', counts.type)\n        ]);\n        super(new RecordBatch<R>(schema, counts.length, [values, counts]));\n    }\n    public toJSON(): Object {\n        const values = this.getColumnAt(0)!;\n        const counts = this.getColumnAt(1)!;\n        const result = {} as { [k: string]: number | null };\n        for (let i = -1; ++i < this.length;) {\n            result[values.get(i)] = counts.get(i);\n        }\n        return result;\n    }\n}\n\n/** @ignore */\nexport class FilteredDataFrame<T extends { [key: string]: DataType } = any> extends DataFrame<T> {\n    private _predicate: Predicate;\n    constructor (batches: RecordBatch<T>[], predicate: Predicate) {\n        super(batches);\n        this._predicate = predicate;\n    }\n    public scan(next: NextFunc, bind?: BindFunc) {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public scanReverse(next: NextFunc, bind?: BindFunc) {\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = numBatches; --batchIndex >= 0;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            let isBound = false;\n            // yield all indices\n            for (let index = batch.length; --index >= 0;) {\n                if (predicate(index, batch)) {\n                    // bind batches lazily - if predicate doesn't match anything\n                    // in the batch we don't need to call bind on the batch\n                    if (bind && !isBound) {\n                        bind(batch);\n                        isBound = true;\n                    }\n                    next(index, batch);\n                }\n            }\n        }\n    }\n    public count(): number {\n        // inlined version of this:\n        // let sum = 0;\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) ++sum;\n        // });\n        // return sum;\n        let sum = 0;\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { ++sum; }\n            }\n        }\n        return sum;\n    }\n    public *[Symbol.iterator](): IterableIterator<Struct<T>['TValue']> {\n        // inlined version of this:\n        // this.parent.scan((idx, columns) => {\n        //     if (this.predicate(idx, columns)) next(idx, columns);\n        // });\n        const batches = this._chunks;\n        const numBatches = batches.length;\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            // TODO: bind batches lazily\n            // If predicate doesn't match anything in the batch we don't need\n            // to bind the callback\n            const predicate = this._predicate.bind(batch);\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                if (predicate(index, batch)) { yield batch.get(index) as any; }\n            }\n        }\n    }\n    public filter(predicate: Predicate): FilteredDataFrame<T> {\n        return new FilteredDataFrame<T>(\n            this._chunks,\n            this._predicate.and(predicate)\n        );\n    }\n    public countBy(name: Col | string) {\n        const batches = this._chunks, numBatches = batches.length;\n        const count_by = typeof name === 'string' ? new Col(name) : name as Col;\n        // Assume that all dictionary batches are deltas, which means that the\n        // last record batch has the most complete dictionary\n        count_by.bind(batches[numBatches - 1]);\n        const vector = count_by.vector as V<Dictionary>;\n        if (!DataType.isDictionary(vector.type)) {\n            throw new Error('countBy currently only supports dictionary-encoded columns');\n        }\n\n        const countByteLength = Math.ceil(Math.log(vector.length) / Math.log(256));\n        const CountsArrayType = countByteLength == 4 ? Uint32Array :\n                                countByteLength >= 2 ? Uint16Array : Uint8Array;\n\n        const counts = new CountsArrayType(vector.dictionary.length);\n\n        for (let batchIndex = -1; ++batchIndex < numBatches;) {\n            // load batches\n            const batch = batches[batchIndex];\n            const predicate = this._predicate.bind(batch);\n            // rebind the countBy Col\n            count_by.bind(batch);\n            const keys = (count_by.vector as V<Dictionary>).indices;\n            // yield all indices\n            for (let index = -1, numRows = batch.length; ++index < numRows;) {\n                let key = keys.get(index);\n                if (key !== null && predicate(index, batch)) { counts[key]++; }\n            }\n        }\n        return new CountByResult(vector.dictionary, IntVector.from(counts));\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nexport { ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType } from './enum';\nexport { Data } from './data';\nexport {\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n} from './type';\n\nexport { Table } from './table';\nexport { Column } from './column';\nexport { Visitor } from './visitor';\nexport { Schema, Field } from './schema';\nexport {\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n} from './vector/index';\n\nexport {\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './builder/index';\n\nexport { ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink } from './io/stream';\nexport { RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader } from './ipc/reader';\nexport { RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter } from './ipc/writer';\nexport { MessageReader, AsyncMessageReader, JSONMessageReader } from './ipc/message';\nexport { Message } from './ipc/metadata/message';\nexport { RecordBatch } from './recordbatch';\nexport { ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions } from './io/interfaces';\nexport { DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc } from './compute/dataframe';\n\nimport * as util_bn_ from './util/bn';\nimport * as util_int_ from './util/int';\nimport * as util_bit_ from './util/bit';\nimport * as util_math_ from './util/math';\nimport * as util_buffer_ from './util/buffer';\nimport * as util_vector_ from './util/vector';\nimport * as predicate from './compute/predicate';\n\nexport { predicate };\n/** @ignore */\nexport const util = {\n    ...util_bn_,\n    ...util_int_,\n    ...util_bit_,\n    ...util_math_,\n    ...util_buffer_,\n    ...util_vector_\n};\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './io/adapters';\nimport { Builder } from './builder/index';\nimport { RecordBatchReader } from './ipc/reader';\nimport { RecordBatchWriter } from './ipc/writer';\nimport { toDOMStream } from './io/whatwg/iterable';\nimport { builderThroughDOMStream } from './io/whatwg/builder';\nimport { recordBatchReaderThroughDOMStream } from './io/whatwg/reader';\nimport { recordBatchWriterThroughDOMStream } from './io/whatwg/writer';\n\nstreamAdapters.toDOMStream = toDOMStream;\nBuilder['throughDOM'] = builderThroughDOMStream;\nRecordBatchReader['throughDOM'] = recordBatchReaderThroughDOMStream;\nRecordBatchWriter['throughDOM'] = recordBatchWriterThroughDOMStream;\n\nexport {\n    ArrowType, DateUnit, IntervalUnit, MessageHeader, MetadataVersion, Precision, TimeUnit, Type, UnionMode, BufferType,\n    Data,\n    DataType,\n    Null,\n    Bool,\n    Int, Int8, Int16, Int32, Int64, Uint8, Uint16, Uint32, Uint64,\n    Float, Float16, Float32, Float64,\n    Utf8,\n    Binary,\n    FixedSizeBinary,\n    Date_, DateDay, DateMillisecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Decimal,\n    List,\n    Struct,\n    Union, DenseUnion, SparseUnion,\n    Dictionary,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    FixedSizeList,\n    Map_,\n    Table,\n    Column,\n    Schema, Field,\n    Visitor,\n    Vector,\n    BaseVector,\n    BinaryVector,\n    BoolVector,\n    Chunked,\n    DateVector, DateDayVector, DateMillisecondVector,\n    DecimalVector,\n    DictionaryVector,\n    FixedSizeBinaryVector,\n    FixedSizeListVector,\n    FloatVector, Float16Vector, Float32Vector, Float64Vector,\n    IntervalVector, IntervalDayTimeVector, IntervalYearMonthVector,\n    IntVector, Int8Vector, Int16Vector, Int32Vector, Int64Vector, Uint8Vector, Uint16Vector, Uint32Vector, Uint64Vector,\n    ListVector,\n    MapVector,\n    NullVector,\n    StructVector,\n    TimestampVector, TimestampSecondVector, TimestampMillisecondVector, TimestampMicrosecondVector, TimestampNanosecondVector,\n    TimeVector, TimeSecondVector, TimeMillisecondVector, TimeMicrosecondVector, TimeNanosecondVector,\n    UnionVector, DenseUnionVector, SparseUnionVector,\n    Utf8Vector,\n    ByteStream, AsyncByteStream, AsyncByteQueue, ReadableSource, WritableSink,\n    RecordBatchReader, RecordBatchFileReader, RecordBatchStreamReader, AsyncRecordBatchFileReader, AsyncRecordBatchStreamReader,\n    RecordBatchWriter, RecordBatchFileWriter, RecordBatchStreamWriter, RecordBatchJSONWriter,\n    MessageReader, AsyncMessageReader, JSONMessageReader,\n    Message,\n    RecordBatch,\n    ArrowJSONLike, FileHandle, Readable, Writable, ReadableWritable, ReadableDOMStreamOptions,\n    DataFrame, FilteredDataFrame, CountByResult, BindFunc, NextFunc,\n    predicate,\n    util,\n    Builder,\n    BinaryBuilder,\n    BoolBuilder,\n    DateBuilder, DateDayBuilder, DateMillisecondBuilder,\n    DecimalBuilder,\n    DictionaryBuilder,\n    FixedSizeBinaryBuilder,\n    FixedSizeListBuilder,\n    FloatBuilder, Float16Builder, Float32Builder, Float64Builder,\n    IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder,\n    IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder,\n    ListBuilder,\n    MapBuilder,\n    NullBuilder,\n    StructBuilder,\n    TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder,\n    TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder,\n    UnionBuilder, DenseUnionBuilder, SparseUnionBuilder,\n    Utf8Builder,\n} from './Arrow';\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from '../../util/buffer';\nimport { ReadableDOMStreamOptions } from '../../io/interfaces';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n\n/** @ignore */\nexport function toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n    if (isAsyncIterable<T>(source)) { return asyncIterableAsReadableDOMStream(source, options); }\n    if (isIterable<T>(source)) { return iterableAsReadableDOMStream(source, options); }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\n\n/** @ignore */\nfunction iterableAsReadableDOMStream<T>(source: Iterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: Iterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    function next(controller: ReadableStreamDefaultController<T>, it: Iterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream<T>(source: AsyncIterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: AsyncIterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    async function next(controller: ReadableStreamDefaultController<T>, it: AsyncIterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteQueue } from '../../io/stream';\nimport { RecordBatchReader } from '../../ipc/reader';\n\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream<T extends { [key: string]: DataType } = any>(writableStrategy?: ByteLengthQueuingStrategy, readableStrategy?: { autoDestroy: boolean }) {\n\n    const queue = new AsyncByteQueue();\n    let reader: RecordBatchReader<T> | null = null;\n\n    const readable = new ReadableStream<RecordBatch<T>>({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n\n    async function open() {\n        return await (await RecordBatchReader.from<T>(queue)).open(readableStrategy);\n    }\n\n    async function next(controller: ReadableStreamDefaultController<RecordBatch<T>>, reader: RecordBatchReader<T>) {\n        let size = controller.desiredSize;\n        let r: IteratorResult<RecordBatch<T>> | null = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n","// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { DataType } from '../../type';\nimport { RecordBatch } from '../../recordbatch';\nimport { AsyncByteStream } from '../../io/stream';\nimport { RecordBatchWriter } from '../../ipc/writer';\n\n/** @ignore */\nexport function recordBatchWriterThroughDOMStream<T extends { [key: string]: DataType } = any>(\n    this: typeof RecordBatchWriter,\n    writableStrategy?: QueuingStrategy<RecordBatch<T>> & { autoDestroy: boolean },\n    readableStrategy?: { highWaterMark?: number, size?: any }\n) {\n\n    const writer = new this<T>(writableStrategy);\n    const reader = new AsyncByteStream(writer);\n    const readable = new ReadableStream({\n        type: 'bytes',\n        async cancel() { await reader.cancel(); },\n        async pull(controller) { await next(controller); },\n        async start(controller) { await next(controller); },\n    }, { 'highWaterMark': 2 ** 14, ...readableStrategy });\n\n    return { writable: new WritableStream(writer, writableStrategy), readable };\n\n    async function next(controller: ReadableStreamDefaultController<Uint8Array>) {\n        let buf: Uint8Array | null = null;\n        let size = controller.desiredSize;\n        while (buf = await reader.read(size || null)) {\n            controller.enqueue(buf);\n            if (size != null && (size -= buf.byteLength) <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Table, Type } from \"apache-arrow\";\nvar ArrowTable = /** @class */ (function () {\n    function ArrowTable(dataBuffer, indexBuffer, columnsBuffer, styler) {\n        var _this = this;\n        this.getCell = function (rowIndex, columnIndex) {\n            var isBlankCell = rowIndex < _this.headerRows && columnIndex < _this.headerColumns;\n            var isIndexCell = rowIndex >= _this.headerRows && columnIndex < _this.headerColumns;\n            var isColumnsCell = rowIndex < _this.headerRows && columnIndex >= _this.headerColumns;\n            if (isBlankCell) {\n                var classNames = [\"blank\"];\n                if (columnIndex > 0) {\n                    classNames.push(\"level\" + rowIndex);\n                }\n                return {\n                    type: \"blank\",\n                    classNames: classNames.join(\" \"),\n                    content: \"\"\n                };\n            }\n            else if (isColumnsCell) {\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"col_heading\",\n                    \"level\" + rowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                return {\n                    type: \"columns\",\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.columnsTable, dataColumnIndex, rowIndex)\n                };\n            }\n            else if (isIndexCell) {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var classNames = [\n                    \"row_heading\",\n                    \"level\" + columnIndex,\n                    \"row\" + dataRowIndex\n                ];\n                return {\n                    type: \"index\",\n                    id: \"T_\" + _this.uuid + \"level\" + columnIndex + \"_row\" + dataRowIndex,\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.indexTable, dataRowIndex, columnIndex)\n                };\n            }\n            else {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"data\",\n                    \"row\" + dataRowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                var content = _this.styler\n                    ? _this.getContent(_this.styler.displayValuesTable, dataRowIndex, dataColumnIndex)\n                    : _this.getContent(_this.dataTable, dataRowIndex, dataColumnIndex);\n                return {\n                    type: \"data\",\n                    id: \"T_\" + _this.uuid + \"row\" + dataRowIndex + \"_col\" + dataColumnIndex,\n                    classNames: classNames.join(\" \"),\n                    content: content\n                };\n            }\n        };\n        this.getContent = function (table, rowIndex, columnIndex) {\n            var column = table.getColumnAt(columnIndex);\n            if (column === null) {\n                return \"\";\n            }\n            var columnTypeId = _this.getColumnTypeId(table, columnIndex);\n            switch (columnTypeId) {\n                case Type.Timestamp: {\n                    return _this.nanosToDate(column.get(rowIndex));\n                }\n                default: {\n                    return column.get(rowIndex);\n                }\n            }\n        };\n        this.dataTable = Table.from(dataBuffer);\n        this.indexTable = Table.from(indexBuffer);\n        this.columnsTable = Table.from(columnsBuffer);\n        this.styler = styler\n            ? {\n                caption: styler.caption,\n                displayValuesTable: Table.from(styler.displayValues),\n                styles: styler.styles,\n                uuid: styler.uuid\n            }\n            : undefined;\n    }\n    Object.defineProperty(ArrowTable.prototype, \"rows\", {\n        get: function () {\n            return this.indexTable.length + this.columnsTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columns\", {\n        get: function () {\n            return this.indexTable.numCols + this.columnsTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerRows\", {\n        get: function () {\n            return this.rows - this.dataRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerColumns\", {\n        get: function () {\n            return this.columns - this.dataColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataRows\", {\n        get: function () {\n            return this.dataTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataColumns\", {\n        get: function () {\n            return this.dataTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"uuid\", {\n        get: function () {\n            return this.styler && this.styler.uuid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"caption\", {\n        get: function () {\n            return this.styler && this.styler.caption;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"styles\", {\n        get: function () {\n            return this.styler && this.styler.styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"table\", {\n        get: function () {\n            return this.dataTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"index\", {\n        get: function () {\n            return this.indexTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columnTable\", {\n        get: function () {\n            return this.columnsTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Serialize arrow table.\n     */\n    ArrowTable.prototype.serialize = function () {\n        return {\n            data: this.dataTable.serialize(),\n            index: this.indexTable.serialize(),\n            columns: this.columnsTable.serialize()\n        };\n    };\n    /**\n     * Returns apache-arrow specific typeId of column.\n     */\n    ArrowTable.prototype.getColumnTypeId = function (table, columnIndex) {\n        return table.schema.fields[columnIndex].type.typeId;\n    };\n    ArrowTable.prototype.nanosToDate = function (nanos) {\n        return new Date(nanos / 1e6);\n    };\n    return ArrowTable;\n}());\nexport { ArrowTable };\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n// Safari doesn't support the EventTarget class, so we use a shim.\nimport { EventTarget } from \"event-target-shim\";\nimport { ArrowTable } from \"./ArrowTable\";\n/** Messages from Component -> Streamlit */\nvar ComponentMessageType;\n(function (ComponentMessageType) {\n    // A component sends this message when it's ready to receive messages\n    // from Streamlit. Streamlit won't send any messages until it gets this.\n    // Data: { apiVersion: number }\n    ComponentMessageType[\"COMPONENT_READY\"] = \"streamlit:componentReady\";\n    // The component has a new widget value. Send it back to Streamlit, which\n    // will then re-run the app.\n    // Data: { value: any }\n    ComponentMessageType[\"SET_COMPONENT_VALUE\"] = \"streamlit:setComponentValue\";\n    // The component has a new height for its iframe.\n    // Data: { height: number }\n    ComponentMessageType[\"SET_FRAME_HEIGHT\"] = \"streamlit:setFrameHeight\";\n})(ComponentMessageType || (ComponentMessageType = {}));\n/**\n * Streamlit communication API.\n *\n * Components can send data to Streamlit via the functions defined here,\n * and receive data from Streamlit via the `events` property.\n */\nvar Streamlit = /** @class */ (function () {\n    function Streamlit() {\n    }\n    /**\n     * The Streamlit component API version we're targetting.\n     * There's currently only 1!\n     */\n    Streamlit.API_VERSION = 1;\n    Streamlit.RENDER_EVENT = \"streamlit:render\";\n    /** Dispatches events received from Streamlit. */\n    Streamlit.events = new EventTarget();\n    Streamlit.registeredMessageListener = false;\n    /**\n     * Tell Streamlit that the component is ready to start receiving data.\n     * Streamlit will defer emitting RENDER events until it receives the\n     * COMPONENT_READY message.\n     */\n    Streamlit.setComponentReady = function () {\n        if (!Streamlit.registeredMessageListener) {\n            // Register for message events if we haven't already\n            window.addEventListener(\"message\", Streamlit.onMessageEvent);\n            Streamlit.registeredMessageListener = true;\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.COMPONENT_READY, {\n            apiVersion: Streamlit.API_VERSION\n        });\n    };\n    /**\n     * Report the component's height to Streamlit.\n     * This should be called every time the component changes its DOM - that is,\n     * when it's first loaded, and any time it updates.\n     */\n    Streamlit.setFrameHeight = function (height) {\n        if (height === undefined) {\n            // `height` is optional. If undefined, it defaults to scrollHeight,\n            // which is the entire height of the element minus its border,\n            // scrollbar, and margin.\n            height = document.body.scrollHeight;\n        }\n        if (height === Streamlit.lastFrameHeight) {\n            // Don't bother updating if our height hasn't changed.\n            return;\n        }\n        Streamlit.lastFrameHeight = height;\n        Streamlit.sendBackMsg(ComponentMessageType.SET_FRAME_HEIGHT, { height: height });\n    };\n    /**\n     * Set the component's value. This value will be returned to the Python\n     * script, and the script will be re-run.\n     *\n     * For example:\n     *\n     * JavaScript:\n     * Streamlit.setComponentValue(\"ahoy!\")\n     *\n     * Python:\n     * value = st.my_component(...)\n     * st.write(value) # -> \"ahoy!\"\n     *\n     * The value must be an ArrowTable, a typed array, an ArrayBuffer, or be\n     * serializable to JSON.\n     */\n    Streamlit.setComponentValue = function (value) {\n        var dataType;\n        if (value instanceof ArrowTable) {\n            dataType = \"dataframe\";\n            value = value.serialize();\n        }\n        else if (isTypedArray(value)) {\n            // All typed arrays get sent as Uint8Array, because that's what our\n            // protobuf library uses for the \"bytes\" field type.\n            dataType = \"bytes\";\n            value = new Uint8Array(value.buffer);\n        }\n        else if (value instanceof ArrayBuffer) {\n            dataType = \"bytes\";\n            value = new Uint8Array(value);\n        }\n        else {\n            dataType = \"json\";\n        }\n        Streamlit.sendBackMsg(ComponentMessageType.SET_COMPONENT_VALUE, {\n            value: value,\n            dataType: dataType\n        });\n    };\n    /** Receive a ForwardMsg from the Streamlit app */\n    Streamlit.onMessageEvent = function (event) {\n        var type = event.data[\"type\"];\n        switch (type) {\n            case Streamlit.RENDER_EVENT:\n                Streamlit.onRenderMessage(event.data);\n                break;\n        }\n    };\n    /**\n     * Handle an untyped Streamlit render event and redispatch it as a\n     * StreamlitRenderEvent.\n     */\n    Streamlit.onRenderMessage = function (data) {\n        var args = data[\"args\"];\n        if (args == null) {\n            console.error(\"Got null args in onRenderMessage. This should never happen\");\n            args = {};\n        }\n        // Parse our dataframe arguments with arrow, and merge them into our args dict\n        var dataframeArgs = data[\"dfs\"] && data[\"dfs\"].length > 0\n            ? Streamlit.argsDataframeToObject(data[\"dfs\"])\n            : {};\n        args = __assign(__assign({}, args), dataframeArgs);\n        var disabled = Boolean(data[\"disabled\"]);\n        var theme = data[\"theme\"];\n        if (theme) {\n            _injectTheme(theme);\n        }\n        // Dispatch a render event!\n        var eventData = { disabled: disabled, args: args, theme: theme };\n        var event = new CustomEvent(Streamlit.RENDER_EVENT, {\n            detail: eventData\n        });\n        Streamlit.events.dispatchEvent(event);\n    };\n    Streamlit.argsDataframeToObject = function (argsDataframe) {\n        var argsDataframeArrow = argsDataframe.map(function (_a) {\n            var key = _a.key, value = _a.value;\n            return [key, Streamlit.toArrowTable(value)];\n        });\n        return Object.fromEntries(argsDataframeArrow);\n    };\n    Streamlit.toArrowTable = function (df) {\n        var _a = df.data, data = _a.data, index = _a.index, columns = _a.columns, styler = _a.styler;\n        return new ArrowTable(data, index, columns, styler);\n    };\n    /** Post a message to the Streamlit app. */\n    Streamlit.sendBackMsg = function (type, data) {\n        window.parent.postMessage(__assign({ isStreamlitMessage: true, type: type }, data), \"*\");\n    };\n    return Streamlit;\n}());\nexport { Streamlit };\nvar _injectTheme = function (theme) {\n    var style = document.createElement(\"style\");\n    document.head.appendChild(style);\n    style.innerHTML = \"\\n    :root {\\n      --primary-color: \" + theme.primaryColor + \";\\n      --background-color: \" + theme.backgroundColor + \";\\n      --secondary-background-color: \" + theme.secondaryBackgroundColor + \";\\n      --text-color: \" + theme.textColor + \";\\n      --font: \" + theme.font + \";\\n    }\\n\\n    body {\\n      background-color: var(--background-color);\\n      color: var(--text-color);\\n    }\\n  \";\n};\n/** True if the value is a TypedArray. */\nfunction isTypedArray(value) {\n    var isBigIntArray = false;\n    try {\n        isBigIntArray =\n            value instanceof BigInt64Array || value instanceof BigUint64Array;\n    }\n    catch (e) {\n        // Ignore cause Safari does not support this\n        // https://caniuse.com/mdn-javascript_builtins_bigint64array\n    }\n    return (value instanceof Int8Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint8ClampedArray ||\n        value instanceof Int16Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        isBigIntArray);\n}\n","/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport React from \"react\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\nvar StreamlitComponentBase = /** @class */ (function (_super) {\n    __extends(StreamlitComponentBase, _super);\n    function StreamlitComponentBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StreamlitComponentBase.prototype.componentDidMount = function () {\n        // After we're rendered for the first time, tell Streamlit that our height\n        // has changed.\n        Streamlit.setFrameHeight();\n    };\n    StreamlitComponentBase.prototype.componentDidUpdate = function () {\n        // After we're updated, tell Streamlit that our height may have changed.\n        Streamlit.setFrameHeight();\n    };\n    return StreamlitComponentBase;\n}(React.PureComponent));\nexport { StreamlitComponentBase };\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\nexport function withStreamlitConnection(WrappedComponent) {\n    var ComponentWrapper = /** @class */ (function (_super) {\n        __extends(ComponentWrapper, _super);\n        function ComponentWrapper(props) {\n            var _this = _super.call(this, props) || this;\n            _this.componentDidMount = function () {\n                // Set up event listeners, and signal to Streamlit that we're ready.\n                // We won't render the component until we receive the first RENDER_EVENT.\n                Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n                Streamlit.setComponentReady();\n            };\n            _this.componentDidUpdate = function () {\n                // If our child threw an error, we display it in render(). In this\n                // case, the child won't be mounted and therefore won't call\n                // `setFrameHeight` on its own. We do it here so that the rendered\n                // error will be visible.\n                if (_this.state.componentError != null) {\n                    Streamlit.setFrameHeight();\n                }\n            };\n            _this.componentWillUnmount = function () {\n                Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n            };\n            /**\n             * Streamlit is telling this component to redraw.\n             * We save the render data in State, so that it can be passed to the\n             * component in our own render() function.\n             */\n            _this.onRenderEvent = function (event) {\n                // Update our state with the newest render data\n                var renderEvent = event;\n                _this.setState({ renderData: renderEvent.detail });\n            };\n            _this.render = function () {\n                // If our wrapped component threw an error, display it.\n                if (_this.state.componentError != null) {\n                    return (React.createElement(\"div\", null,\n                        React.createElement(\"h1\", null, \"Component Error\"),\n                        React.createElement(\"span\", null, _this.state.componentError.message)));\n                }\n                // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n                if (_this.state.renderData == null) {\n                    return null;\n                }\n                return (React.createElement(WrappedComponent, { width: window.innerWidth, disabled: _this.state.renderData.disabled, args: _this.state.renderData.args, theme: _this.state.renderData.theme }));\n            };\n            _this.state = {\n                renderData: undefined,\n                componentError: undefined\n            };\n            return _this;\n        }\n        /**\n         * Error boundary function. This will be called if our wrapped\n         * component throws an error. We store the caught error in our state,\n         * and display it in the next render().\n         */\n        ComponentWrapper.getDerivedStateFromError = function (error) {\n            return { componentError: error };\n        };\n        return ComponentWrapper;\n    }(React.PureComponent));\n    return hoistNonReactStatics(ComponentWrapper, WrappedComponent);\n}\n","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","// Some functions take a variable number of arguments, or a few expected\n// arguments at the beginning and then a variable number of values to operate\n// on. This helper accumulates all remaining arguments past the function’s\n// argument length (or an explicit `startIndex`), into an array that becomes\n// the last argument. Similar to ES6’s \"rest parameter\".\nexport default function restArguments(func, startIndex) {\n  startIndex = startIndex == null ? func.length - 1 : +startIndex;\n  return function() {\n    var length = Math.max(arguments.length - startIndex, 0),\n        rest = Array(length),\n        index = 0;\n    for (; index < length; index++) {\n      rest[index] = arguments[index + startIndex];\n    }\n    switch (startIndex) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, arguments[0], rest);\n      case 2: return func.call(this, arguments[0], arguments[1], rest);\n    }\n    var args = Array(startIndex + 1);\n    for (index = 0; index < startIndex; index++) {\n      args[index] = arguments[index];\n    }\n    args[startIndex] = rest;\n    return func.apply(this, args);\n  };\n}\n","// Is a given variable an object?\nexport default function isObject(obj) {\n  var type = typeof obj;\n  return type === 'function' || (type === 'object' && !!obj);\n}\n","// Is a given value equal to null?\nexport default function isNull(obj) {\n  return obj === null;\n}\n","// Is a given variable undefined?\nexport default function isUndefined(obj) {\n  return obj === void 0;\n}\n","import { toString } from './_setup.js';\n\n// Is a given value a boolean?\nexport default function isBoolean(obj) {\n  return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n}\n","// Is a given value a DOM element?\nexport default function isElement(obj) {\n  return !!(obj && obj.nodeType === 1);\n}\n","import { toString } from './_setup.js';\n\n// Internal function for creating a `toString`-based type tester.\nexport default function tagTester(name) {\n  var tag = '[object ' + name + ']';\n  return function(obj) {\n    return toString.call(obj) === tag;\n  };\n}\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('String');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Number');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Date');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('RegExp');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Error');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Symbol');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('ArrayBuffer');\n","import tagTester from './_tagTester.js';\nimport { root } from './_setup.js';\n\nvar isFunction = tagTester('Function');\n\n// Optimize `isFunction` if appropriate. Work around some `typeof` bugs in old\n// v8, IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\nvar nodelist = root.document && root.document.childNodes;\nif (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n  isFunction = function(obj) {\n    return typeof obj == 'function' || false;\n  };\n}\n\nexport default isFunction;\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('Object');\n","import { supportsDataView } from './_setup.js';\nimport hasObjectTag from './_hasObjectTag.js';\n\n// In IE 10 - Edge 13, `DataView` has string tag `'[object Object]'`.\n// In IE 11, the most common among them, this problem also applies to\n// `Map`, `WeakMap` and `Set`.\nexport var hasStringTagBug = (\n      supportsDataView && hasObjectTag(new DataView(new ArrayBuffer(8)))\n    ),\n    isIE11 = (typeof Map !== 'undefined' && hasObjectTag(new Map));\n","import tagTester from './_tagTester.js';\nimport isFunction from './isFunction.js';\nimport isArrayBuffer from './isArrayBuffer.js';\nimport { hasStringTagBug } from './_stringTagBug.js';\n\nvar isDataView = tagTester('DataView');\n\n// In IE 10 - Edge 13, we need a different heuristic\n// to determine whether an object is a `DataView`.\nfunction ie10IsDataView(obj) {\n  return obj != null && isFunction(obj.getInt8) && isArrayBuffer(obj.buffer);\n}\n\nexport default (hasStringTagBug ? ie10IsDataView : isDataView);\n","import { nativeIsArray } from './_setup.js';\nimport tagTester from './_tagTester.js';\n\n// Is a given value an array?\n// Delegates to ECMA5's native `Array.isArray`.\nexport default nativeIsArray || tagTester('Array');\n","import { hasOwnProperty } from './_setup.js';\n\n// Internal function to check whether `key` is an own property name of `obj`.\nexport default function has(obj, key) {\n  return obj != null && hasOwnProperty.call(obj, key);\n}\n","import tagTester from './_tagTester.js';\nimport has from './_has.js';\n\nvar isArguments = tagTester('Arguments');\n\n// Define a fallback version of the method in browsers (ahem, IE < 9), where\n// there isn't any inspectable \"Arguments\" type.\n(function() {\n  if (!isArguments(arguments)) {\n    isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n}());\n\nexport default isArguments;\n","import { _isFinite } from './_setup.js';\nimport isSymbol from './isSymbol.js';\n\n// Is a given object a finite number?\nexport default function isFinite(obj) {\n  return !isSymbol(obj) && _isFinite(obj) && !isNaN(parseFloat(obj));\n}\n","import { _isNaN } from './_setup.js';\nimport isNumber from './isNumber.js';\n\n// Is the given value `NaN`?\nexport default function isNaN(obj) {\n  return isNumber(obj) && _isNaN(obj);\n}\n","// Predicate-generating function. Often useful outside of Underscore.\nexport default function constant(value) {\n  return function() {\n    return value;\n  };\n}\n","import { MAX_ARRAY_INDEX } from './_setup.js';\n\n// Common internal logic for `isArrayLike` and `isBufferLike`.\nexport default function createSizePropertyCheck(getSizeProperty) {\n  return function(collection) {\n    var sizeProperty = getSizeProperty(collection);\n    return typeof sizeProperty == 'number' && sizeProperty >= 0 && sizeProperty <= MAX_ARRAY_INDEX;\n  }\n}\n","// Internal helper to generate a function to obtain property `key` from `obj`.\nexport default function shallowProperty(key) {\n  return function(obj) {\n    return obj == null ? void 0 : obj[key];\n  };\n}\n","import shallowProperty from './_shallowProperty.js';\n\n// Internal helper to obtain the `byteLength` property of an object.\nexport default shallowProperty('byteLength');\n","import createSizePropertyCheck from './_createSizePropertyCheck.js';\nimport getByteLength from './_getByteLength.js';\n\n// Internal helper to determine whether we should spend extensive checks against\n// `ArrayBuffer` et al.\nexport default createSizePropertyCheck(getByteLength);\n","import { supportsArrayBuffer, nativeIsView, toString } from './_setup.js';\nimport isDataView from './isDataView.js';\nimport constant from './constant.js';\nimport isBufferLike from './_isBufferLike.js';\n\n// Is a given value a typed array?\nvar typedArrayPattern = /\\[object ((I|Ui)nt(8|16|32)|Float(32|64)|Uint8Clamped|Big(I|Ui)nt64)Array\\]/;\nfunction isTypedArray(obj) {\n  // `ArrayBuffer.isView` is the most future-proof, so use it when available.\n  // Otherwise, fall back on the above regular expression.\n  return nativeIsView ? (nativeIsView(obj) && !isDataView(obj)) :\n                isBufferLike(obj) && typedArrayPattern.test(toString.call(obj));\n}\n\nexport default supportsArrayBuffer ? isTypedArray : constant(false);\n","import shallowProperty from './_shallowProperty.js';\n\n// Internal helper to obtain the `length` property of an object.\nexport default shallowProperty('length');\n","import { nonEnumerableProps, ObjProto } from './_setup.js';\nimport isFunction from './isFunction.js';\nimport has from './_has.js';\n\n// Internal helper to create a simple lookup structure.\n// `collectNonEnumProps` used to depend on `_.contains`, but this led to\n// circular imports. `emulatedSet` is a one-off solution that only works for\n// arrays of strings.\nfunction emulatedSet(keys) {\n  var hash = {};\n  for (var l = keys.length, i = 0; i < l; ++i) hash[keys[i]] = true;\n  return {\n    contains: function(key) { return hash[key] === true; },\n    push: function(key) {\n      hash[key] = true;\n      return keys.push(key);\n    }\n  };\n}\n\n// Internal helper. Checks `keys` for the presence of keys in IE < 9 that won't\n// be iterated by `for key in ...` and thus missed. Extends `keys` in place if\n// needed.\nexport default function collectNonEnumProps(obj, keys) {\n  keys = emulatedSet(keys);\n  var nonEnumIdx = nonEnumerableProps.length;\n  var constructor = obj.constructor;\n  var proto = (isFunction(constructor) && constructor.prototype) || ObjProto;\n\n  // Constructor is a special case.\n  var prop = 'constructor';\n  if (has(obj, prop) && !keys.contains(prop)) keys.push(prop);\n\n  while (nonEnumIdx--) {\n    prop = nonEnumerableProps[nonEnumIdx];\n    if (prop in obj && obj[prop] !== proto[prop] && !keys.contains(prop)) {\n      keys.push(prop);\n    }\n  }\n}\n","import isObject from './isObject.js';\nimport { nativeKeys, hasEnumBug } from './_setup.js';\nimport has from './_has.js';\nimport collectNonEnumProps from './_collectNonEnumProps.js';\n\n// Retrieve the names of an object's own properties.\n// Delegates to **ECMAScript 5**'s native `Object.keys`.\nexport default function keys(obj) {\n  if (!isObject(obj)) return [];\n  if (nativeKeys) return nativeKeys(obj);\n  var keys = [];\n  for (var key in obj) if (has(obj, key)) keys.push(key);\n  // Ahem, IE < 9.\n  if (hasEnumBug) collectNonEnumProps(obj, keys);\n  return keys;\n}\n","import getLength from './_getLength.js';\nimport isArray from './isArray.js';\nimport isString from './isString.js';\nimport isArguments from './isArguments.js';\nimport keys from './keys.js';\n\n// Is a given array, string, or object empty?\n// An \"empty\" object has no enumerable own-properties.\nexport default function isEmpty(obj) {\n  if (obj == null) return true;\n  // Skip the more expensive `toString`-based type checks if `obj` has no\n  // `.length`.\n  var length = getLength(obj);\n  if (typeof length == 'number' && (\n    isArray(obj) || isString(obj) || isArguments(obj)\n  )) return length === 0;\n  return getLength(keys(obj)) === 0;\n}\n","import keys from './keys.js';\n\n// Returns whether an object has a given set of `key:value` pairs.\nexport default function isMatch(object, attrs) {\n  var _keys = keys(attrs), length = _keys.length;\n  if (object == null) return !length;\n  var obj = Object(object);\n  for (var i = 0; i < length; i++) {\n    var key = _keys[i];\n    if (attrs[key] !== obj[key] || !(key in obj)) return false;\n  }\n  return true;\n}\n","import { VERSION } from './_setup.js';\n\n// If Underscore is called as a function, it returns a wrapped object that can\n// be used OO-style. This wrapper holds altered versions of all functions added\n// through `_.mixin`. Wrapped objects may be chained.\nexport default function _(obj) {\n  if (obj instanceof _) return obj;\n  if (!(this instanceof _)) return new _(obj);\n  this._wrapped = obj;\n}\n\n_.VERSION = VERSION;\n\n// Extracts the result from a wrapped and chained object.\n_.prototype.value = function() {\n  return this._wrapped;\n};\n\n// Provide unwrapping proxies for some methods used in engine operations\n// such as arithmetic and JSON stringification.\n_.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n_.prototype.toString = function() {\n  return String(this._wrapped);\n};\n","import getByteLength from './_getByteLength.js';\n\n// Internal function to wrap or shallow-copy an ArrayBuffer,\n// typed array or DataView to a new view, reusing the buffer.\nexport default function toBufferView(bufferSource) {\n  return new Uint8Array(\n    bufferSource.buffer || bufferSource,\n    bufferSource.byteOffset || 0,\n    getByteLength(bufferSource)\n  );\n}\n","import _ from './underscore.js';\nimport { toString, SymbolProto } from './_setup.js';\nimport getByteLength from './_getByteLength.js';\nimport isTypedArray from './isTypedArray.js';\nimport isFunction from './isFunction.js';\nimport { hasStringTagBug }  from './_stringTagBug.js';\nimport isDataView from './isDataView.js';\nimport keys from './keys.js';\nimport has from './_has.js';\nimport toBufferView from './_toBufferView.js';\n\n// We use this string twice, so give it a name for minification.\nvar tagDataView = '[object DataView]';\n\n// Internal recursive comparison function for `_.isEqual`.\nfunction eq(a, b, aStack, bStack) {\n  // Identical objects are equal. `0 === -0`, but they aren't identical.\n  // See the [Harmony `egal` proposal](https://wiki.ecmascript.org/doku.php?id=harmony:egal).\n  if (a === b) return a !== 0 || 1 / a === 1 / b;\n  // `null` or `undefined` only equal to itself (strict comparison).\n  if (a == null || b == null) return false;\n  // `NaN`s are equivalent, but non-reflexive.\n  if (a !== a) return b !== b;\n  // Exhaust primitive checks\n  var type = typeof a;\n  if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n  return deepEq(a, b, aStack, bStack);\n}\n\n// Internal recursive comparison function for `_.isEqual`.\nfunction deepEq(a, b, aStack, bStack) {\n  // Unwrap any wrapped objects.\n  if (a instanceof _) a = a._wrapped;\n  if (b instanceof _) b = b._wrapped;\n  // Compare `[[Class]]` names.\n  var className = toString.call(a);\n  if (className !== toString.call(b)) return false;\n  // Work around a bug in IE 10 - Edge 13.\n  if (hasStringTagBug && className == '[object Object]' && isDataView(a)) {\n    if (!isDataView(b)) return false;\n    className = tagDataView;\n  }\n  switch (className) {\n    // These types are compared by value.\n    case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n    case '[object String]':\n      // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n      // equivalent to `new String(\"5\")`.\n      return '' + a === '' + b;\n    case '[object Number]':\n      // `NaN`s are equivalent, but non-reflexive.\n      // Object(NaN) is equivalent to NaN.\n      if (+a !== +a) return +b !== +b;\n      // An `egal` comparison is performed for other numeric values.\n      return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n    case '[object Date]':\n    case '[object Boolean]':\n      // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n      // millisecond representations. Note that invalid dates with millisecond representations\n      // of `NaN` are not equivalent.\n      return +a === +b;\n    case '[object Symbol]':\n      return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    case '[object ArrayBuffer]':\n    case tagDataView:\n      // Coerce to typed array so we can fall through.\n      return deepEq(toBufferView(a), toBufferView(b), aStack, bStack);\n  }\n\n  var areArrays = className === '[object Array]';\n  if (!areArrays && isTypedArray(a)) {\n      var byteLength = getByteLength(a);\n      if (byteLength !== getByteLength(b)) return false;\n      if (a.buffer === b.buffer && a.byteOffset === b.byteOffset) return true;\n      areArrays = true;\n  }\n  if (!areArrays) {\n    if (typeof a != 'object' || typeof b != 'object') return false;\n\n    // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n    // from different frames are.\n    var aCtor = a.constructor, bCtor = b.constructor;\n    if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\n                             isFunction(bCtor) && bCtor instanceof bCtor)\n                        && ('constructor' in a && 'constructor' in b)) {\n      return false;\n    }\n  }\n  // Assume equality for cyclic structures. The algorithm for detecting cyclic\n  // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n  // Initializing stack of traversed objects.\n  // It's done here since we only need them for objects and arrays comparison.\n  aStack = aStack || [];\n  bStack = bStack || [];\n  var length = aStack.length;\n  while (length--) {\n    // Linear search. Performance is inversely proportional to the number of\n    // unique nested structures.\n    if (aStack[length] === a) return bStack[length] === b;\n  }\n\n  // Add the first object to the stack of traversed objects.\n  aStack.push(a);\n  bStack.push(b);\n\n  // Recursively compare objects and arrays.\n  if (areArrays) {\n    // Compare array lengths to determine if a deep comparison is necessary.\n    length = a.length;\n    if (length !== b.length) return false;\n    // Deep compare the contents, ignoring non-numeric properties.\n    while (length--) {\n      if (!eq(a[length], b[length], aStack, bStack)) return false;\n    }\n  } else {\n    // Deep compare objects.\n    var _keys = keys(a), key;\n    length = _keys.length;\n    // Ensure that both objects contain the same number of properties before comparing deep equality.\n    if (keys(b).length !== length) return false;\n    while (length--) {\n      // Deep compare each member\n      key = _keys[length];\n      if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n    }\n  }\n  // Remove the first object from the stack of traversed objects.\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\n// Perform a deep comparison to check if two objects are equal.\nexport default function isEqual(a, b) {\n  return eq(a, b);\n}\n","import isObject from './isObject.js';\nimport { hasEnumBug } from './_setup.js';\nimport collectNonEnumProps from './_collectNonEnumProps.js';\n\n// Retrieve all the enumerable property names of an object.\nexport default function allKeys(obj) {\n  if (!isObject(obj)) return [];\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  // Ahem, IE < 9.\n  if (hasEnumBug) collectNonEnumProps(obj, keys);\n  return keys;\n}\n","import getLength from './_getLength.js';\nimport isFunction from './isFunction.js';\nimport allKeys from './allKeys.js';\n\n// Since the regular `Object.prototype.toString` type tests don't work for\n// some types in IE 11, we use a fingerprinting heuristic instead, based\n// on the methods. It's not great, but it's the best we got.\n// The fingerprint method lists are defined below.\nexport function ie11fingerprint(methods) {\n  var length = getLength(methods);\n  return function(obj) {\n    if (obj == null) return false;\n    // `Map`, `WeakMap` and `Set` have no enumerable keys.\n    var keys = allKeys(obj);\n    if (getLength(keys)) return false;\n    for (var i = 0; i < length; i++) {\n      if (!isFunction(obj[methods[i]])) return false;\n    }\n    // If we are testing against `WeakMap`, we need to ensure that\n    // `obj` doesn't have a `forEach` method in order to distinguish\n    // it from a regular `Map`.\n    return methods !== weakMapMethods || !isFunction(obj[forEachName]);\n  };\n}\n\n// In the interest of compact minification, we write\n// each string in the fingerprints only once.\nvar forEachName = 'forEach',\n    hasName = 'has',\n    commonInit = ['clear', 'delete'],\n    mapTail = ['get', hasName, 'set'];\n\n// `Map`, `WeakMap` and `Set` each have slightly different\n// combinations of the above sublists.\nexport var mapMethods = commonInit.concat(forEachName, mapTail),\n    weakMapMethods = commonInit.concat(mapTail),\n    setMethods = ['add'].concat(commonInit, forEachName, hasName);\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, mapMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(mapMethods) : tagTester('Map');\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, weakMapMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(weakMapMethods) : tagTester('WeakMap');\n","import tagTester from './_tagTester.js';\nimport { isIE11 } from './_stringTagBug.js';\nimport { ie11fingerprint, setMethods }  from './_methodFingerprint.js';\n\nexport default isIE11 ? ie11fingerprint(setMethods) : tagTester('Set');\n","import tagTester from './_tagTester.js';\n\nexport default tagTester('WeakSet');\n","import keys from './keys.js';\n\n// Retrieve the values of an object's properties.\nexport default function values(obj) {\n  var _keys = keys(obj);\n  var length = _keys.length;\n  var values = Array(length);\n  for (var i = 0; i < length; i++) {\n    values[i] = obj[_keys[i]];\n  }\n  return values;\n}\n","import keys from './keys.js';\n\n// Convert an object into a list of `[key, value]` pairs.\n// The opposite of `_.object` with one argument.\nexport default function pairs(obj) {\n  var _keys = keys(obj);\n  var length = _keys.length;\n  var pairs = Array(length);\n  for (var i = 0; i < length; i++) {\n    pairs[i] = [_keys[i], obj[_keys[i]]];\n  }\n  return pairs;\n}\n","import keys from './keys.js';\n\n// Invert the keys and values of an object. The values must be serializable.\nexport default function invert(obj) {\n  var result = {};\n  var _keys = keys(obj);\n  for (var i = 0, length = _keys.length; i < length; i++) {\n    result[obj[_keys[i]]] = _keys[i];\n  }\n  return result;\n}\n","import isFunction from './isFunction.js';\n\n// Return a sorted list of the function names available on the object.\nexport default function functions(obj) {\n  var names = [];\n  for (var key in obj) {\n    if (isFunction(obj[key])) names.push(key);\n  }\n  return names.sort();\n}\n","// An internal function for creating assigner functions.\nexport default function createAssigner(keysFunc, defaults) {\n  return function(obj) {\n    var length = arguments.length;\n    if (defaults) obj = Object(obj);\n    if (length < 2 || obj == null) return obj;\n    for (var index = 1; index < length; index++) {\n      var source = arguments[index],\n          keys = keysFunc(source),\n          l = keys.length;\n      for (var i = 0; i < l; i++) {\n        var key = keys[i];\n        if (!defaults || obj[key] === void 0) obj[key] = source[key];\n      }\n    }\n    return obj;\n  };\n}\n","import createAssigner from './_createAssigner.js';\nimport allKeys from './allKeys.js';\n\n// Extend a given object with all the properties in passed-in object(s).\nexport default createAssigner(allKeys);\n","import createAssigner from './_createAssigner.js';\nimport keys from './keys.js';\n\n// Assigns a given object with all the own properties in the passed-in\n// object(s).\n// (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\nexport default createAssigner(keys);\n","import createAssigner from './_createAssigner.js';\nimport allKeys from './allKeys.js';\n\n// Fill in a given object with default properties.\nexport default createAssigner(allKeys, true);\n","import isObject from './isObject.js';\nimport { nativeCreate } from './_setup.js';\n\n// Create a naked function reference for surrogate-prototype-swapping.\nfunction ctor() {\n  return function(){};\n}\n\n// An internal function for creating a new object that inherits from another.\nexport default function baseCreate(prototype) {\n  if (!isObject(prototype)) return {};\n  if (nativeCreate) return nativeCreate(prototype);\n  var Ctor = ctor();\n  Ctor.prototype = prototype;\n  var result = new Ctor;\n  Ctor.prototype = null;\n  return result;\n}\n","import baseCreate from './_baseCreate.js';\nimport extendOwn from './extendOwn.js';\n\n// Creates an object that inherits from the given prototype object.\n// If additional properties are provided then they will be added to the\n// created object.\nexport default function create(prototype, props) {\n  var result = baseCreate(prototype);\n  if (props) extendOwn(result, props);\n  return result;\n}\n","import isObject from './isObject.js';\nimport isArray from './isArray.js';\nimport extend from './extend.js';\n\n// Create a (shallow-cloned) duplicate of an object.\nexport default function clone(obj) {\n  if (!isObject(obj)) return obj;\n  return isArray(obj) ? obj.slice() : extend({}, obj);\n}\n","// Invokes `interceptor` with the `obj` and then returns `obj`.\n// The primary purpose of this method is to \"tap into\" a method chain, in\n// order to perform operations on intermediate results within the chain.\nexport default function tap(obj, interceptor) {\n  interceptor(obj);\n  return obj;\n}\n","import _ from './underscore.js';\nimport isArray from './isArray.js';\n\n// Normalize a (deep) property `path` to array.\n// Like `_.iteratee`, this function can be customized.\nexport default function toPath(path) {\n  return isArray(path) ? path : [path];\n}\n_.toPath = toPath;\n","import _ from './underscore.js';\nimport './toPath.js';\n\n// Internal wrapper for `_.toPath` to enable minification.\n// Similar to `cb` for `_.iteratee`.\nexport default function toPath(path) {\n  return _.toPath(path);\n}\n","// Internal function to obtain a nested property in `obj` along `path`.\nexport default function deepGet(obj, path) {\n  var length = path.length;\n  for (var i = 0; i < length; i++) {\n    if (obj == null) return void 0;\n    obj = obj[path[i]];\n  }\n  return length ? obj : void 0;\n}\n","import toPath from './_toPath.js';\nimport deepGet from './_deepGet.js';\nimport isUndefined from './isUndefined.js';\n\n// Get the value of the (deep) property on `path` from `object`.\n// If any property in `path` does not exist or if the value is\n// `undefined`, return `defaultValue` instead.\n// The `path` is normalized through `_.toPath`.\nexport default function get(object, path, defaultValue) {\n  var value = deepGet(object, toPath(path));\n  return isUndefined(value) ? defaultValue : value;\n}\n","import _has from './_has.js';\nimport toPath from './_toPath.js';\n\n// Shortcut function for checking if an object has a given property directly on\n// itself (in other words, not on a prototype). Unlike the internal `has`\n// function, this public version can also traverse nested properties.\nexport default function has(obj, path) {\n  path = toPath(path);\n  var length = path.length;\n  for (var i = 0; i < length; i++) {\n    var key = path[i];\n    if (!_has(obj, key)) return false;\n    obj = obj[key];\n  }\n  return !!length;\n}\n","// Keep the identity function around for default iteratees.\nexport default function identity(value) {\n  return value;\n}\n","import extendOwn from './extendOwn.js';\nimport isMatch from './isMatch.js';\n\n// Returns a predicate for checking whether an object has a given set of\n// `key:value` pairs.\nexport default function matcher(attrs) {\n  attrs = extendOwn({}, attrs);\n  return function(obj) {\n    return isMatch(obj, attrs);\n  };\n}\n","import deepGet from './_deepGet.js';\nimport toPath from './_toPath.js';\n\n// Creates a function that, when passed an object, will traverse that object’s\n// properties down the given `path`, specified as an array of keys or indices.\nexport default function property(path) {\n  path = toPath(path);\n  return function(obj) {\n    return deepGet(obj, path);\n  };\n}\n","// Internal function that returns an efficient (for current engines) version\n// of the passed-in callback, to be repeatedly applied in other Underscore\n// functions.\nexport default function optimizeCb(func, context, argCount) {\n  if (context === void 0) return func;\n  switch (argCount == null ? 3 : argCount) {\n    case 1: return function(value) {\n      return func.call(context, value);\n    };\n    // The 2-argument case is omitted because we’re not using it.\n    case 3: return function(value, index, collection) {\n      return func.call(context, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(context, accumulator, value, index, collection);\n    };\n  }\n  return function() {\n    return func.apply(context, arguments);\n  };\n}\n","import identity from './identity.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isArray from './isArray.js';\nimport matcher from './matcher.js';\nimport property from './property.js';\nimport optimizeCb from './_optimizeCb.js';\n\n// An internal function to generate callbacks that can be applied to each\n// element in a collection, returning the desired result — either `_.identity`,\n// an arbitrary callback, a property matcher, or a property accessor.\nexport default function baseIteratee(value, context, argCount) {\n  if (value == null) return identity;\n  if (isFunction(value)) return optimizeCb(value, context, argCount);\n  if (isObject(value) && !isArray(value)) return matcher(value);\n  return property(value);\n}\n","import _ from './underscore.js';\nimport baseIteratee from './_baseIteratee.js';\n\n// External wrapper for our callback generator. Users may customize\n// `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n// This abstraction hides the internal-only `argCount` argument.\nexport default function iteratee(value, context) {\n  return baseIteratee(value, context, Infinity);\n}\n_.iteratee = iteratee;\n","import _ from './underscore.js';\nimport baseIteratee from './_baseIteratee.js';\nimport iteratee from './iteratee.js';\n\n// The function we call internally to generate a callback. It invokes\n// `_.iteratee` if overridden, otherwise `baseIteratee`.\nexport default function cb(value, context, argCount) {\n  if (_.iteratee !== iteratee) return _.iteratee(value, context);\n  return baseIteratee(value, context, argCount);\n}\n","import cb from './_cb.js';\nimport keys from './keys.js';\n\n// Returns the results of applying the `iteratee` to each element of `obj`.\n// In contrast to `_.map` it returns an object.\nexport default function mapObject(obj, iteratee, context) {\n  iteratee = cb(iteratee, context);\n  var _keys = keys(obj),\n      length = _keys.length,\n      results = {};\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys[index];\n    results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n  }\n  return results;\n}\n","// Predicate-generating function. Often useful outside of Underscore.\nexport default function noop(){}\n","import noop from './noop.js';\nimport get from './get.js';\n\n// Generates a function for a given object that returns a given property.\nexport default function propertyOf(obj) {\n  if (obj == null) return noop;\n  return function(path) {\n    return get(obj, path);\n  };\n}\n","import optimizeCb from './_optimizeCb.js';\n\n// Run a function **n** times.\nexport default function times(n, iteratee, context) {\n  var accum = Array(Math.max(0, n));\n  iteratee = optimizeCb(iteratee, context, 1);\n  for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n  return accum;\n}\n","// Return a random integer between `min` and `max` (inclusive).\nexport default function random(min, max) {\n  if (max == null) {\n    max = min;\n    min = 0;\n  }\n  return min + Math.floor(Math.random() * (max - min + 1));\n}\n","// A (possibly faster) way to get the current timestamp as an integer.\nexport default Date.now || function() {\n  return new Date().getTime();\n};\n","import keys from './keys.js';\n\n// Internal helper to generate functions for escaping and unescaping strings\n// to/from HTML interpolation.\nexport default function createEscaper(map) {\n  var escaper = function(match) {\n    return map[match];\n  };\n  // Regexes for identifying a key that needs to be escaped.\n  var source = '(?:' + keys(map).join('|') + ')';\n  var testRegexp = RegExp(source);\n  var replaceRegexp = RegExp(source, 'g');\n  return function(string) {\n    string = string == null ? '' : '' + string;\n    return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n  };\n}\n","// Internal list of HTML entities for escaping.\nexport default {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;'\n};\n","import createEscaper from './_createEscaper.js';\nimport escapeMap from './_escapeMap.js';\n\n// Function for escaping strings to HTML interpolation.\nexport default createEscaper(escapeMap);\n","import createEscaper from './_createEscaper.js';\nimport unescapeMap from './_unescapeMap.js';\n\n// Function for unescaping strings from HTML interpolation.\nexport default createEscaper(unescapeMap);\n","import invert from './invert.js';\nimport escapeMap from './_escapeMap.js';\n\n// Internal list of HTML entities for unescaping.\nexport default invert(escapeMap);\n","import _ from './underscore.js';\n\n// By default, Underscore uses ERB-style template delimiters. Change the\n// following template settings to use alternative delimiters.\nexport default _.templateSettings = {\n  evaluate: /<%([\\s\\S]+?)%>/g,\n  interpolate: /<%=([\\s\\S]+?)%>/g,\n  escape: /<%-([\\s\\S]+?)%>/g\n};\n","import defaults from './defaults.js';\nimport _ from './underscore.js';\nimport './templateSettings.js';\n\n// When customizing `_.templateSettings`, if you don't want to define an\n// interpolation, evaluation or escaping regex, we need one that is\n// guaranteed not to match.\nvar noMatch = /(.)^/;\n\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar escapes = {\n  \"'\": \"'\",\n  '\\\\': '\\\\',\n  '\\r': 'r',\n  '\\n': 'n',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\nvar escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\nfunction escapeChar(match) {\n  return '\\\\' + escapes[match];\n}\n\n// In order to prevent third-party code injection through\n// `_.templateSettings.variable`, we test it against the following regular\n// expression. It is intentionally a bit more liberal than just matching valid\n// identifiers, but still prevents possible loopholes through defaults or\n// destructuring assignment.\nvar bareIdentifier = /^\\s*(\\w|\\$)+\\s*$/;\n\n// JavaScript micro-templating, similar to John Resig's implementation.\n// Underscore templating handles arbitrary delimiters, preserves whitespace,\n// and correctly escapes quotes within interpolated code.\n// NB: `oldSettings` only exists for backwards compatibility.\nexport default function template(text, settings, oldSettings) {\n  if (!settings && oldSettings) settings = oldSettings;\n  settings = defaults({}, settings, _.templateSettings);\n\n  // Combine delimiters into one regular expression via alternation.\n  var matcher = RegExp([\n    (settings.escape || noMatch).source,\n    (settings.interpolate || noMatch).source,\n    (settings.evaluate || noMatch).source\n  ].join('|') + '|$', 'g');\n\n  // Compile the template source, escaping string literals appropriately.\n  var index = 0;\n  var source = \"__p+='\";\n  text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n    source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n    index = offset + match.length;\n\n    if (escape) {\n      source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n    } else if (interpolate) {\n      source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n    } else if (evaluate) {\n      source += \"';\\n\" + evaluate + \"\\n__p+='\";\n    }\n\n    // Adobe VMs need the match returned to produce the correct offset.\n    return match;\n  });\n  source += \"';\\n\";\n\n  var argument = settings.variable;\n  if (argument) {\n    // Insure against third-party code injection. (CVE-2021-23358)\n    if (!bareIdentifier.test(argument)) throw new Error(\n      'variable is not a bare identifier: ' + argument\n    );\n  } else {\n    // If a variable is not specified, place data values in local scope.\n    source = 'with(obj||{}){\\n' + source + '}\\n';\n    argument = 'obj';\n  }\n\n  source = \"var __t,__p='',__j=Array.prototype.join,\" +\n    \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n    source + 'return __p;\\n';\n\n  var render;\n  try {\n    render = new Function(argument, '_', source);\n  } catch (e) {\n    e.source = source;\n    throw e;\n  }\n\n  var template = function(data) {\n    return render.call(this, data, _);\n  };\n\n  // Provide the compiled source as a convenience for precompilation.\n  template.source = 'function(' + argument + '){\\n' + source + '}';\n\n  return template;\n}\n","import isFunction from './isFunction.js';\nimport toPath from './_toPath.js';\n\n// Traverses the children of `obj` along `path`. If a child is a function, it\n// is invoked with its parent as context. Returns the value of the final\n// child, or `fallback` if any child is undefined.\nexport default function result(obj, path, fallback) {\n  path = toPath(path);\n  var length = path.length;\n  if (!length) {\n    return isFunction(fallback) ? fallback.call(obj) : fallback;\n  }\n  for (var i = 0; i < length; i++) {\n    var prop = obj == null ? void 0 : obj[path[i]];\n    if (prop === void 0) {\n      prop = fallback;\n      i = length; // Ensure we don't continue iterating.\n    }\n    obj = isFunction(prop) ? prop.call(obj) : prop;\n  }\n  return obj;\n}\n","// Generate a unique integer id (unique within the entire client session).\n// Useful for temporary DOM ids.\nvar idCounter = 0;\nexport default function uniqueId(prefix) {\n  var id = ++idCounter + '';\n  return prefix ? prefix + id : id;\n}\n","import _ from './underscore.js';\n\n// Start chaining a wrapped Underscore object.\nexport default function chain(obj) {\n  var instance = _(obj);\n  instance._chain = true;\n  return instance;\n}\n","import baseCreate from './_baseCreate.js';\nimport isObject from './isObject.js';\n\n// Internal function to execute `sourceFunc` bound to `context` with optional\n// `args`. Determines whether to execute a function as a constructor or as a\n// normal function.\nexport default function executeBound(sourceFunc, boundFunc, context, callingContext, args) {\n  if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n  var self = baseCreate(sourceFunc.prototype);\n  var result = sourceFunc.apply(self, args);\n  if (isObject(result)) return result;\n  return self;\n}\n","import restArguments from './restArguments.js';\nimport executeBound from './_executeBound.js';\nimport _ from './underscore.js';\n\n// Partially apply a function by creating a version that has had some of its\n// arguments pre-filled, without changing its dynamic `this` context. `_` acts\n// as a placeholder by default, allowing any combination of arguments to be\n// pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\nvar partial = restArguments(function(func, boundArgs) {\n  var placeholder = partial.placeholder;\n  var bound = function() {\n    var position = 0, length = boundArgs.length;\n    var args = Array(length);\n    for (var i = 0; i < length; i++) {\n      args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n    }\n    while (position < arguments.length) args.push(arguments[position++]);\n    return executeBound(func, bound, this, this, args);\n  };\n  return bound;\n});\n\npartial.placeholder = _;\nexport default partial;\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport executeBound from './_executeBound.js';\n\n// Create a function bound to a given object (assigning `this`, and arguments,\n// optionally).\nexport default restArguments(function(func, context, args) {\n  if (!isFunction(func)) throw new TypeError('Bind must be called on a function');\n  var bound = restArguments(function(callArgs) {\n    return executeBound(func, bound, context, this, args.concat(callArgs));\n  });\n  return bound;\n});\n","import createSizePropertyCheck from './_createSizePropertyCheck.js';\nimport getLength from './_getLength.js';\n\n// Internal helper for collection methods to determine whether a collection\n// should be iterated as an array or as an object.\n// Related: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n// Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\nexport default createSizePropertyCheck(getLength);\n","import getLength from './_getLength.js';\nimport isArrayLike from './_isArrayLike.js';\nimport isArray from './isArray.js';\nimport isArguments from './isArguments.js';\n\n// Internal implementation of a recursive `flatten` function.\nexport default function flatten(input, depth, strict, output) {\n  output = output || [];\n  if (!depth && depth !== 0) {\n    depth = Infinity;\n  } else if (depth <= 0) {\n    return output.concat(input);\n  }\n  var idx = output.length;\n  for (var i = 0, length = getLength(input); i < length; i++) {\n    var value = input[i];\n    if (isArrayLike(value) && (isArray(value) || isArguments(value))) {\n      // Flatten current level of array or arguments object.\n      if (depth > 1) {\n        flatten(value, depth - 1, strict, output);\n        idx = output.length;\n      } else {\n        var j = 0, len = value.length;\n        while (j < len) output[idx++] = value[j++];\n      }\n    } else if (!strict) {\n      output[idx++] = value;\n    }\n  }\n  return output;\n}\n","import restArguments from './restArguments.js';\nimport flatten from './_flatten.js';\nimport bind from './bind.js';\n\n// Bind a number of an object's methods to that object. Remaining arguments\n// are the method names to be bound. Useful for ensuring that all callbacks\n// defined on an object belong to it.\nexport default restArguments(function(obj, keys) {\n  keys = flatten(keys, false, false);\n  var index = keys.length;\n  if (index < 1) throw new Error('bindAll must be passed function names');\n  while (index--) {\n    var key = keys[index];\n    obj[key] = bind(obj[key], obj);\n  }\n  return obj;\n});\n","import has from './_has.js';\n\n// Memoize an expensive function by storing its results.\nexport default function memoize(func, hasher) {\n  var memoize = function(key) {\n    var cache = memoize.cache;\n    var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n    if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n    return cache[address];\n  };\n  memoize.cache = {};\n  return memoize;\n}\n","import restArguments from './restArguments.js';\n\n// Delays a function for the given number of milliseconds, and then calls\n// it with the arguments supplied.\nexport default restArguments(function(func, wait, args) {\n  return setTimeout(function() {\n    return func.apply(null, args);\n  }, wait);\n});\n","import partial from './partial.js';\nimport delay from './delay.js';\nimport _ from './underscore.js';\n\n// Defers a function, scheduling it to run after the current call stack has\n// cleared.\nexport default partial(delay, _, 1);\n","import now from './now.js';\n\n// Returns a function, that, when invoked, will only be triggered at most once\n// during a given window of time. Normally, the throttled function will run\n// as much as it can, without ever going more than once per `wait` duration;\n// but if you'd like to disable the execution on the leading edge, pass\n// `{leading: false}`. To disable execution on the trailing edge, ditto.\nexport default function throttle(func, wait, options) {\n  var timeout, context, args, result;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function() {\n    var _now = now();\n    if (!previous && options.leading === false) previous = _now;\n    var remaining = wait - (_now - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = _now;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n\n  throttled.cancel = function() {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n","import restArguments from './restArguments.js';\nimport now from './now.js';\n\n// When a sequence of calls of the returned function ends, the argument\n// function is triggered. The end of a sequence is defined by the `wait`\n// parameter. If `immediate` is passed, the argument function will be\n// triggered at the beginning of the sequence instead of at the end.\nexport default function debounce(func, wait, immediate) {\n  var timeout, previous, args, result, context;\n\n  var later = function() {\n    var passed = now() - previous;\n    if (wait > passed) {\n      timeout = setTimeout(later, wait - passed);\n    } else {\n      timeout = null;\n      if (!immediate) result = func.apply(context, args);\n      // This check is needed because `func` can recursively invoke `debounced`.\n      if (!timeout) args = context = null;\n    }\n  };\n\n  var debounced = restArguments(function(_args) {\n    context = this;\n    args = _args;\n    previous = now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n      if (immediate) result = func.apply(context, args);\n    }\n    return result;\n  });\n\n  debounced.cancel = function() {\n    clearTimeout(timeout);\n    timeout = args = context = null;\n  };\n\n  return debounced;\n}\n","import partial from './partial.js';\n\n// Returns the first function passed as an argument to the second,\n// allowing you to adjust arguments, run code before and after, and\n// conditionally execute the original function.\nexport default function wrap(func, wrapper) {\n  return partial(wrapper, func);\n}\n","// Returns a negated version of the passed-in predicate.\nexport default function negate(predicate) {\n  return function() {\n    return !predicate.apply(this, arguments);\n  };\n}\n","// Returns a function that is the composition of a list of functions, each\n// consuming the return value of the function that follows.\nexport default function compose() {\n  var args = arguments;\n  var start = args.length - 1;\n  return function() {\n    var i = start;\n    var result = args[start].apply(this, arguments);\n    while (i--) result = args[i].call(this, result);\n    return result;\n  };\n}\n","// Returns a function that will only be executed on and after the Nth call.\nexport default function after(times, func) {\n  return function() {\n    if (--times < 1) {\n      return func.apply(this, arguments);\n    }\n  };\n}\n","// Returns a function that will only be executed up to (but not including) the\n// Nth call.\nexport default function before(times, func) {\n  var memo;\n  return function() {\n    if (--times > 0) {\n      memo = func.apply(this, arguments);\n    }\n    if (times <= 1) func = null;\n    return memo;\n  };\n}\n","import partial from './partial.js';\nimport before from './before.js';\n\n// Returns a function that will be executed at most one time, no matter how\n// often you call it. Useful for lazy initialization.\nexport default partial(before, 2);\n","import cb from './_cb.js';\nimport keys from './keys.js';\n\n// Returns the first key on an object that passes a truth test.\nexport default function findKey(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = keys(obj), key;\n  for (var i = 0, length = _keys.length; i < length; i++) {\n    key = _keys[i];\n    if (predicate(obj[key], key, obj)) return key;\n  }\n}\n","import cb from './_cb.js';\nimport getLength from './_getLength.js';\n\n// Internal function to generate `_.findIndex` and `_.findLastIndex`.\nexport default function createPredicateIndexFinder(dir) {\n  return function(array, predicate, context) {\n    predicate = cb(predicate, context);\n    var length = getLength(array);\n    var index = dir > 0 ? 0 : length - 1;\n    for (; index >= 0 && index < length; index += dir) {\n      if (predicate(array[index], index, array)) return index;\n    }\n    return -1;\n  };\n}\n","import createPredicateIndexFinder from './_createPredicateIndexFinder.js';\n\n// Returns the first index on an array-like that passes a truth test.\nexport default createPredicateIndexFinder(1);\n","import createPredicateIndexFinder from './_createPredicateIndexFinder.js';\n\n// Returns the last index on an array-like that passes a truth test.\nexport default createPredicateIndexFinder(-1);\n","import cb from './_cb.js';\nimport getLength from './_getLength.js';\n\n// Use a comparator function to figure out the smallest index at which\n// an object should be inserted so as to maintain order. Uses binary search.\nexport default function sortedIndex(array, obj, iteratee, context) {\n  iteratee = cb(iteratee, context, 1);\n  var value = iteratee(obj);\n  var low = 0, high = getLength(array);\n  while (low < high) {\n    var mid = Math.floor((low + high) / 2);\n    if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n  }\n  return low;\n}\n","import getLength from './_getLength.js';\nimport { slice } from './_setup.js';\nimport isNaN from './isNaN.js';\n\n// Internal function to generate the `_.indexOf` and `_.lastIndexOf` functions.\nexport default function createIndexFinder(dir, predicateFind, sortedIndex) {\n  return function(array, item, idx) {\n    var i = 0, length = getLength(array);\n    if (typeof idx == 'number') {\n      if (dir > 0) {\n        i = idx >= 0 ? idx : Math.max(idx + length, i);\n      } else {\n        length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n      }\n    } else if (sortedIndex && idx && length) {\n      idx = sortedIndex(array, item);\n      return array[idx] === item ? idx : -1;\n    }\n    if (item !== item) {\n      idx = predicateFind(slice.call(array, i, length), isNaN);\n      return idx >= 0 ? idx + i : -1;\n    }\n    for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n      if (array[idx] === item) return idx;\n    }\n    return -1;\n  };\n}\n","import sortedIndex from './sortedIndex.js';\nimport findIndex from './findIndex.js';\nimport createIndexFinder from './_createIndexFinder.js';\n\n// Return the position of the first occurrence of an item in an array,\n// or -1 if the item is not included in the array.\n// If the array is large and already in sort order, pass `true`\n// for **isSorted** to use binary search.\nexport default createIndexFinder(1, findIndex, sortedIndex);\n","import findLastIndex from './findLastIndex.js';\nimport createIndexFinder from './_createIndexFinder.js';\n\n// Return the position of the last occurrence of an item in an array,\n// or -1 if the item is not included in the array.\nexport default createIndexFinder(-1, findLastIndex);\n","import isArrayLike from './_isArrayLike.js';\nimport findIndex from './findIndex.js';\nimport findKey from './findKey.js';\n\n// Return the first value which passes a truth test.\nexport default function find(obj, predicate, context) {\n  var keyFinder = isArrayLike(obj) ? findIndex : findKey;\n  var key = keyFinder(obj, predicate, context);\n  if (key !== void 0 && key !== -1) return obj[key];\n}\n","import find from './find.js';\nimport matcher from './matcher.js';\n\n// Convenience version of a common use case of `_.find`: getting the first\n// object containing specific `key:value` pairs.\nexport default function findWhere(obj, attrs) {\n  return find(obj, matcher(attrs));\n}\n","import optimizeCb from './_optimizeCb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// The cornerstone for collection functions, an `each`\n// implementation, aka `forEach`.\n// Handles raw objects in addition to array-likes. Treats all\n// sparse array-likes as if they were dense.\nexport default function each(obj, iteratee, context) {\n  iteratee = optimizeCb(iteratee, context);\n  var i, length;\n  if (isArrayLike(obj)) {\n    for (i = 0, length = obj.length; i < length; i++) {\n      iteratee(obj[i], i, obj);\n    }\n  } else {\n    var _keys = keys(obj);\n    for (i = 0, length = _keys.length; i < length; i++) {\n      iteratee(obj[_keys[i]], _keys[i], obj);\n    }\n  }\n  return obj;\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Return the results of applying the iteratee to each element.\nexport default function map(obj, iteratee, context) {\n  iteratee = cb(iteratee, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length,\n      results = Array(length);\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    results[index] = iteratee(obj[currentKey], currentKey, obj);\n  }\n  return results;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\nimport optimizeCb from './_optimizeCb.js';\n\n// Internal helper to create a reducing function, iterating left or right.\nexport default function createReduce(dir) {\n  // Wrap code that reassigns argument variables in a separate function than\n  // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n  var reducer = function(obj, iteratee, memo, initial) {\n    var _keys = !isArrayLike(obj) && keys(obj),\n        length = (_keys || obj).length,\n        index = dir > 0 ? 0 : length - 1;\n    if (!initial) {\n      memo = obj[_keys ? _keys[index] : index];\n      index += dir;\n    }\n    for (; index >= 0 && index < length; index += dir) {\n      var currentKey = _keys ? _keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n    }\n    return memo;\n  };\n\n  return function(obj, iteratee, memo, context) {\n    var initial = arguments.length >= 3;\n    return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n  };\n}\n","import createReduce from './_createReduce.js';\n\n// **Reduce** builds up a single result from a list of values, aka `inject`,\n// or `foldl`.\nexport default createReduce(1);\n","import createReduce from './_createReduce.js';\n\n// The right-associative version of reduce, also known as `foldr`.\nexport default createReduce(-1);\n","import cb from './_cb.js';\nimport each from './each.js';\n\n// Return all the elements that pass a truth test.\nexport default function filter(obj, predicate, context) {\n  var results = [];\n  predicate = cb(predicate, context);\n  each(obj, function(value, index, list) {\n    if (predicate(value, index, list)) results.push(value);\n  });\n  return results;\n}\n","import filter from './filter.js';\nimport negate from './negate.js';\nimport cb from './_cb.js';\n\n// Return all the elements for which a truth test fails.\nexport default function reject(obj, predicate, context) {\n  return filter(obj, negate(cb(predicate)), context);\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Determine whether all of the elements pass a truth test.\nexport default function every(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length;\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    if (!predicate(obj[currentKey], currentKey, obj)) return false;\n  }\n  return true;\n}\n","import cb from './_cb.js';\nimport isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Determine if at least one element in the object passes a truth test.\nexport default function some(obj, predicate, context) {\n  predicate = cb(predicate, context);\n  var _keys = !isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length;\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    if (predicate(obj[currentKey], currentKey, obj)) return true;\n  }\n  return false;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport indexOf from './indexOf.js';\n\n// Determine if the array or object contains a given item (using `===`).\nexport default function contains(obj, item, fromIndex, guard) {\n  if (!isArrayLike(obj)) obj = values(obj);\n  if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n  return indexOf(obj, item, fromIndex) >= 0;\n}\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport map from './map.js';\nimport deepGet from './_deepGet.js';\nimport toPath from './_toPath.js';\n\n// Invoke a method (with arguments) on every item in a collection.\nexport default restArguments(function(obj, path, args) {\n  var contextPath, func;\n  if (isFunction(path)) {\n    func = path;\n  } else {\n    path = toPath(path);\n    contextPath = path.slice(0, -1);\n    path = path[path.length - 1];\n  }\n  return map(obj, function(context) {\n    var method = func;\n    if (!method) {\n      if (contextPath && contextPath.length) {\n        context = deepGet(context, contextPath);\n      }\n      if (context == null) return void 0;\n      method = context[path];\n    }\n    return method == null ? method : method.apply(context, args);\n  });\n});\n","import map from './map.js';\nimport property from './property.js';\n\n// Convenience version of a common use case of `_.map`: fetching a property.\nexport default function pluck(obj, key) {\n  return map(obj, property(key));\n}\n","import filter from './filter.js';\nimport matcher from './matcher.js';\n\n// Convenience version of a common use case of `_.filter`: selecting only\n// objects containing specific `key:value` pairs.\nexport default function where(obj, attrs) {\n  return filter(obj, matcher(attrs));\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport cb from './_cb.js';\nimport each from './each.js';\n\n// Return the maximum element (or element-based computation).\nexport default function max(obj, iteratee, context) {\n  var result = -Infinity, lastComputed = -Infinity,\n      value, computed;\n  if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null)) {\n    obj = isArrayLike(obj) ? obj : values(obj);\n    for (var i = 0, length = obj.length; i < length; i++) {\n      value = obj[i];\n      if (value != null && value > result) {\n        result = value;\n      }\n    }\n  } else {\n    iteratee = cb(iteratee, context);\n    each(obj, function(v, index, list) {\n      computed = iteratee(v, index, list);\n      if (computed > lastComputed || (computed === -Infinity && result === -Infinity)) {\n        result = v;\n        lastComputed = computed;\n      }\n    });\n  }\n  return result;\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport cb from './_cb.js';\nimport each from './each.js';\n\n// Return the minimum element (or element-based computation).\nexport default function min(obj, iteratee, context) {\n  var result = Infinity, lastComputed = Infinity,\n      value, computed;\n  if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null)) {\n    obj = isArrayLike(obj) ? obj : values(obj);\n    for (var i = 0, length = obj.length; i < length; i++) {\n      value = obj[i];\n      if (value != null && value < result) {\n        result = value;\n      }\n    }\n  } else {\n    iteratee = cb(iteratee, context);\n    each(obj, function(v, index, list) {\n      computed = iteratee(v, index, list);\n      if (computed < lastComputed || (computed === Infinity && result === Infinity)) {\n        result = v;\n        lastComputed = computed;\n      }\n    });\n  }\n  return result;\n}\n","import isArray from './isArray.js';\nimport { slice } from './_setup.js';\nimport isString from './isString.js';\nimport isArrayLike from './_isArrayLike.js';\nimport map from './map.js';\nimport identity from './identity.js';\nimport values from './values.js';\n\n// Safely create a real, live array from anything iterable.\nvar reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\nexport default function toArray(obj) {\n  if (!obj) return [];\n  if (isArray(obj)) return slice.call(obj);\n  if (isString(obj)) {\n    // Keep surrogate pair characters together.\n    return obj.match(reStrSymbol);\n  }\n  if (isArrayLike(obj)) return map(obj, identity);\n  return values(obj);\n}\n","import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport getLength from './_getLength.js';\nimport random from './random.js';\nimport toArray from './toArray.js';\n\n// Sample **n** random values from a collection using the modern version of the\n// [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n// If **n** is not specified, returns a single random element.\n// The internal `guard` argument allows it to work with `_.map`.\nexport default function sample(obj, n, guard) {\n  if (n == null || guard) {\n    if (!isArrayLike(obj)) obj = values(obj);\n    return obj[random(obj.length - 1)];\n  }\n  var sample = toArray(obj);\n  var length = getLength(sample);\n  n = Math.max(Math.min(n, length), 0);\n  var last = length - 1;\n  for (var index = 0; index < n; index++) {\n    var rand = random(index, last);\n    var temp = sample[index];\n    sample[index] = sample[rand];\n    sample[rand] = temp;\n  }\n  return sample.slice(0, n);\n}\n","import sample from './sample.js';\n\n// Shuffle a collection.\nexport default function shuffle(obj) {\n  return sample(obj, Infinity);\n}\n","import cb from './_cb.js';\nimport pluck from './pluck.js';\nimport map from './map.js';\n\n// Sort the object's values by a criterion produced by an iteratee.\nexport default function sortBy(obj, iteratee, context) {\n  var index = 0;\n  iteratee = cb(iteratee, context);\n  return pluck(map(obj, function(value, key, list) {\n    return {\n      value: value,\n      index: index++,\n      criteria: iteratee(value, key, list)\n    };\n  }).sort(function(left, right) {\n    var a = left.criteria;\n    var b = right.criteria;\n    if (a !== b) {\n      if (a > b || a === void 0) return 1;\n      if (a < b || b === void 0) return -1;\n    }\n    return left.index - right.index;\n  }), 'value');\n}\n","import cb from './_cb.js';\nimport each from './each.js';\n\n// An internal function used for aggregate \"group by\" operations.\nexport default function group(behavior, partition) {\n  return function(obj, iteratee, context) {\n    var result = partition ? [[], []] : {};\n    iteratee = cb(iteratee, context);\n    each(obj, function(value, index) {\n      var key = iteratee(value, index, obj);\n      behavior(result, value, key);\n    });\n    return result;\n  };\n}\n","import group from './_group.js';\nimport has from './_has.js';\n\n// Groups the object's values by a criterion. Pass either a string attribute\n// to group by, or a function that returns the criterion.\nexport default group(function(result, value, key) {\n  if (has(result, key)) result[key].push(value); else result[key] = [value];\n});\n","import group from './_group.js';\n\n// Indexes the object's values by a criterion, similar to `_.groupBy`, but for\n// when you know that your index values will be unique.\nexport default group(function(result, value, key) {\n  result[key] = value;\n});\n","import group from './_group.js';\nimport has from './_has.js';\n\n// Counts instances of an object that group by a certain criterion. Pass\n// either a string attribute to count by, or a function that returns the\n// criterion.\nexport default group(function(result, value, key) {\n  if (has(result, key)) result[key]++; else result[key] = 1;\n});\n","import group from './_group.js';\n\n// Split a collection into two arrays: one whose elements all pass the given\n// truth test, and one whose elements all do not pass the truth test.\nexport default group(function(result, value, pass) {\n  result[pass ? 0 : 1].push(value);\n}, true);\n","import isArrayLike from './_isArrayLike.js';\nimport keys from './keys.js';\n\n// Return the number of elements in a collection.\nexport default function size(obj) {\n  if (obj == null) return 0;\n  return isArrayLike(obj) ? obj.length : keys(obj).length;\n}\n","// Internal `_.pick` helper function to determine whether `key` is an enumerable\n// property name of `obj`.\nexport default function keyInObj(value, key, obj) {\n  return key in obj;\n}\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport optimizeCb from './_optimizeCb.js';\nimport allKeys from './allKeys.js';\nimport keyInObj from './_keyInObj.js';\nimport flatten from './_flatten.js';\n\n// Return a copy of the object only containing the allowed properties.\nexport default restArguments(function(obj, keys) {\n  var result = {}, iteratee = keys[0];\n  if (obj == null) return result;\n  if (isFunction(iteratee)) {\n    if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n    keys = allKeys(obj);\n  } else {\n    iteratee = keyInObj;\n    keys = flatten(keys, false, false);\n    obj = Object(obj);\n  }\n  for (var i = 0, length = keys.length; i < length; i++) {\n    var key = keys[i];\n    var value = obj[key];\n    if (iteratee(value, key, obj)) result[key] = value;\n  }\n  return result;\n});\n","import restArguments from './restArguments.js';\nimport isFunction from './isFunction.js';\nimport negate from './negate.js';\nimport map from './map.js';\nimport flatten from './_flatten.js';\nimport contains from './contains.js';\nimport pick from './pick.js';\n\n// Return a copy of the object without the disallowed properties.\nexport default restArguments(function(obj, keys) {\n  var iteratee = keys[0], context;\n  if (isFunction(iteratee)) {\n    iteratee = negate(iteratee);\n    if (keys.length > 1) context = keys[1];\n  } else {\n    keys = map(flatten(keys, false, false), String);\n    iteratee = function(value, key) {\n      return !contains(keys, key);\n    };\n  }\n  return pick(obj, iteratee, context);\n});\n","import { slice } from './_setup.js';\n\n// Returns everything but the last entry of the array. Especially useful on\n// the arguments object. Passing **n** will return all the values in\n// the array, excluding the last N.\nexport default function initial(array, n, guard) {\n  return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n}\n","import initial from './initial.js';\n\n// Get the first element of an array. Passing **n** will return the first N\n// values in the array. The **guard** check allows it to work with `_.map`.\nexport default function first(array, n, guard) {\n  if (array == null || array.length < 1) return n == null || guard ? void 0 : [];\n  if (n == null || guard) return array[0];\n  return initial(array, array.length - n);\n}\n","import { slice } from './_setup.js';\n\n// Returns everything but the first entry of the `array`. Especially useful on\n// the `arguments` object. Passing an **n** will return the rest N values in the\n// `array`.\nexport default function rest(array, n, guard) {\n  return slice.call(array, n == null || guard ? 1 : n);\n}\n","import rest from './rest.js';\n\n// Get the last element of an array. Passing **n** will return the last N\n// values in the array.\nexport default function last(array, n, guard) {\n  if (array == null || array.length < 1) return n == null || guard ? void 0 : [];\n  if (n == null || guard) return array[array.length - 1];\n  return rest(array, Math.max(0, array.length - n));\n}\n","import filter from './filter.js';\n\n// Trim out all falsy values from an array.\nexport default function compact(array) {\n  return filter(array, Boolean);\n}\n","import _flatten from './_flatten.js';\n\n// Flatten out an array, either recursively (by default), or up to `depth`.\n// Passing `true` or `false` as `depth` means `1` or `Infinity`, respectively.\nexport default function flatten(array, depth) {\n  return _flatten(array, depth, false);\n}\n","import restArguments from './restArguments.js';\nimport flatten from './_flatten.js';\nimport filter from './filter.js';\nimport contains from './contains.js';\n\n// Take the difference between one array and a number of other arrays.\n// Only the elements present in just the first array will remain.\nexport default restArguments(function(array, rest) {\n  rest = flatten(rest, true, true);\n  return filter(array, function(value){\n    return !contains(rest, value);\n  });\n});\n","import restArguments from './restArguments.js';\nimport difference from './difference.js';\n\n// Return a version of the array that does not contain the specified value(s).\nexport default restArguments(function(array, otherArrays) {\n  return difference(array, otherArrays);\n});\n","import isBoolean from './isBoolean.js';\nimport cb from './_cb.js';\nimport getLength from './_getLength.js';\nimport contains from './contains.js';\n\n// Produce a duplicate-free version of the array. If the array has already\n// been sorted, you have the option of using a faster algorithm.\n// The faster algorithm will not work with an iteratee if the iteratee\n// is not a one-to-one function, so providing an iteratee will disable\n// the faster algorithm.\nexport default function uniq(array, isSorted, iteratee, context) {\n  if (!isBoolean(isSorted)) {\n    context = iteratee;\n    iteratee = isSorted;\n    isSorted = false;\n  }\n  if (iteratee != null) iteratee = cb(iteratee, context);\n  var result = [];\n  var seen = [];\n  for (var i = 0, length = getLength(array); i < length; i++) {\n    var value = array[i],\n        computed = iteratee ? iteratee(value, i, array) : value;\n    if (isSorted && !iteratee) {\n      if (!i || seen !== computed) result.push(value);\n      seen = computed;\n    } else if (iteratee) {\n      if (!contains(seen, computed)) {\n        seen.push(computed);\n        result.push(value);\n      }\n    } else if (!contains(result, value)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n","import restArguments from './restArguments.js';\nimport uniq from './uniq.js';\nimport flatten from './_flatten.js';\n\n// Produce an array that contains the union: each distinct element from all of\n// the passed-in arrays.\nexport default restArguments(function(arrays) {\n  return uniq(flatten(arrays, true, true));\n});\n","import getLength from './_getLength.js';\nimport contains from './contains.js';\n\n// Produce an array that contains every item shared between all the\n// passed-in arrays.\nexport default function intersection(array) {\n  var result = [];\n  var argsLength = arguments.length;\n  for (var i = 0, length = getLength(array); i < length; i++) {\n    var item = array[i];\n    if (contains(result, item)) continue;\n    var j;\n    for (j = 1; j < argsLength; j++) {\n      if (!contains(arguments[j], item)) break;\n    }\n    if (j === argsLength) result.push(item);\n  }\n  return result;\n}\n","import max from './max.js';\nimport getLength from './_getLength.js';\nimport pluck from './pluck.js';\n\n// Complement of zip. Unzip accepts an array of arrays and groups\n// each array's elements on shared indices.\nexport default function unzip(array) {\n  var length = (array && max(array, getLength).length) || 0;\n  var result = Array(length);\n\n  for (var index = 0; index < length; index++) {\n    result[index] = pluck(array, index);\n  }\n  return result;\n}\n","import restArguments from './restArguments.js';\nimport unzip from './unzip.js';\n\n// Zip together multiple lists into a single array -- elements that share\n// an index go together.\nexport default restArguments(unzip);\n","import getLength  from './_getLength.js';\n\n// Converts lists into objects. Pass either a single array of `[key, value]`\n// pairs, or two parallel arrays of the same length -- one of keys, and one of\n// the corresponding values. Passing by pairs is the reverse of `_.pairs`.\nexport default function object(list, values) {\n  var result = {};\n  for (var i = 0, length = getLength(list); i < length; i++) {\n    if (values) {\n      result[list[i]] = values[i];\n    } else {\n      result[list[i][0]] = list[i][1];\n    }\n  }\n  return result;\n}\n","// Generate an integer Array containing an arithmetic progression. A port of\n// the native Python `range()` function. See\n// [the Python documentation](https://docs.python.org/library/functions.html#range).\nexport default function range(start, stop, step) {\n  if (stop == null) {\n    stop = start || 0;\n    start = 0;\n  }\n  if (!step) {\n    step = stop < start ? -1 : 1;\n  }\n\n  var length = Math.max(Math.ceil((stop - start) / step), 0);\n  var range = Array(length);\n\n  for (var idx = 0; idx < length; idx++, start += step) {\n    range[idx] = start;\n  }\n\n  return range;\n}\n","import { slice } from './_setup.js';\n\n// Chunk a single array into multiple arrays, each containing `count` or fewer\n// items.\nexport default function chunk(array, count) {\n  if (count == null || count < 1) return [];\n  var result = [];\n  var i = 0, length = array.length;\n  while (i < length) {\n    result.push(slice.call(array, i, i += count));\n  }\n  return result;\n}\n","import _ from './underscore.js';\n\n// Helper function to continue chaining intermediate results.\nexport default function chainResult(instance, obj) {\n  return instance._chain ? _(obj).chain() : obj;\n}\n","import _ from './underscore.js';\nimport each from './each.js';\nimport functions from './functions.js';\nimport { push } from './_setup.js';\nimport chainResult from './_chainResult.js';\n\n// Add your own custom functions to the Underscore object.\nexport default function mixin(obj) {\n  each(functions(obj), function(name) {\n    var func = _[name] = obj[name];\n    _.prototype[name] = function() {\n      var args = [this._wrapped];\n      push.apply(args, arguments);\n      return chainResult(this, func.apply(_, args));\n    };\n  });\n  return _;\n}\n","import _ from './underscore.js';\nimport each from './each.js';\nimport { ArrayProto } from './_setup.js';\nimport chainResult from './_chainResult.js';\n\n// Add all mutator `Array` functions to the wrapper.\neach(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n  var method = ArrayProto[name];\n  _.prototype[name] = function() {\n    var obj = this._wrapped;\n    if (obj != null) {\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) {\n        delete obj[0];\n      }\n    }\n    return chainResult(this, obj);\n  };\n});\n\n// Add all accessor `Array` functions to the wrapper.\neach(['concat', 'join', 'slice'], function(name) {\n  var method = ArrayProto[name];\n  _.prototype[name] = function() {\n    var obj = this._wrapped;\n    if (obj != null) obj = method.apply(obj, arguments);\n    return chainResult(this, obj);\n  };\n});\n\nexport default _;\n","// Default Export\n// ==============\n// In this module, we mix our bundled exports into the `_` object and export\n// the result. This is analogous to setting `module.exports = _` in CommonJS.\n// Hence, this module is also the entry point of our UMD bundle and the package\n// entry point for CommonJS and AMD users. In other words, this is (the source\n// of) the module you are interfacing with when you do any of the following:\n//\n// ```js\n// // CommonJS\n// var _ = require('underscore');\n//\n// // AMD\n// define(['underscore'], function(_) {...});\n//\n// // UMD in the browser\n// // _ is available as a global variable\n// ```\nimport * as allExports from './index.js';\nimport { mixin } from './index.js';\n\n// Add all of the Underscore functions to the wrapper object.\nvar _ = mixin(allExports);\n// Legacy Node.js API.\n_._ = _;\n// Export the Underscore API.\nexport default _;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","/** @license React v16.14.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var l=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113,z=n?Symbol.for(\"react.memo\"):60115,A=n?Symbol.for(\"react.lazy\"):\n60116,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}\nfunction N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),k=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(C(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function V(a,b,c){return null==a?0:T(a,\"\",b,c)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+c)),e.push(a))}function X(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(P,\"$&/\")+\"/\");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}\nvar ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};\nexports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,\nkey:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;\nexports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version=\"16.14.0\";\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}